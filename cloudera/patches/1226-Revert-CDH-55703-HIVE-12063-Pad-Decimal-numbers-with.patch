From ca55600724b56572855aa9369a15520a3b2ad2e3 Mon Sep 17 00:00:00 2001
From: Marta Kuczora <kuczoram@cloudera.com>
Date: Wed, 2 Aug 2017 02:06:26 -0700
Subject: [PATCH 1226/1363] Revert "CDH-55703: HIVE-12063: Pad Decimal numbers
 with trailing zeros to the scale of the column
 (reviewed by Szehon)"

This reverts commit f3b44878e24767cb269289032784ca17997e3342.

Change-Id: I0fedea84b7aaeb07b088c31219de4cfbe2ef5807
---
 .../hadoop/hive/common/type/HiveDecimal.java       |   11 -
 ql/src/test/results/clientpositive/acid_join.q.out |    2 +-
 .../alter_partition_change_col.q.out               |  240 ++---
 .../clientpositive/alter_table_cascade.q.out       |   40 +-
 .../clientpositive/ansi_sql_arithmetic.q.out       |    2 +-
 .../test/results/clientpositive/avro_decimal.q.out |   10 +-
 .../clientpositive/avro_decimal_native.q.out       |   10 +-
 .../results/clientpositive/avro_decimal_old.q.out  |    4 +-
 .../clientpositive/cast_qualified_types.q.out      |    2 +-
 .../test/results/clientpositive/decimal_1_1.q.out  |   48 +-
 ql/src/test/results/clientpositive/decimal_3.q.out |  514 +++++-----
 ql/src/test/results/clientpositive/decimal_4.q.out |  144 +--
 ql/src/test/results/clientpositive/decimal_5.q.out |  180 ++--
 ql/src/test/results/clientpositive/decimal_6.q.out |   92 +-
 .../results/clientpositive/decimal_join2.q.out     |  260 +++---
 .../results/clientpositive/decimal_precision.q.out |  170 ++--
 .../clientpositive/decimal_precision2.q.out        |    2 +-
 .../results/clientpositive/decimal_trailing.q.out  |   42 +-
 .../test/results/clientpositive/decimal_udf.q.out  |  960 +++++++++----------
 .../clientpositive/insert_nonacid_from_acid.q.out  |   20 +-
 .../clientpositive/metadata_only_queries.q.out     |    4 +-
 .../metadata_only_queries_with_filters.q.out       |    4 +-
 .../clientpositive/orc_predicate_pushdown.q.out    |    4 +-
 .../results/clientpositive/parquet_decimal.q.out   |   16 +-
 .../clientpositive/parquet_ppd_boolean.q.out       |  180 ++--
 .../results/clientpositive/parquet_ppd_char.q.out  |  220 ++---
 .../clientpositive/parquet_ppd_decimal.q.out       |  660 ++++++-------
 .../clientpositive/parquet_ppd_timestamp.q.out     |  320 +++----
 .../clientpositive/parquet_ppd_varchar.q.out       |  220 ++---
 .../parquet_predicate_pushdown.q.out               |    4 +-
 .../test/results/clientpositive/serde_regex.q.out  |   74 +-
 .../clientpositive/spark/avro_decimal_native.q.out |   10 +-
 .../results/clientpositive/spark/decimal_1_1.q.out |   48 +-
 .../clientpositive/spark/mapjoin_decimal.q.out     |  424 ++++-----
 .../spark/metadata_only_queries.q.out              |    4 +-
 .../spark/metadata_only_queries_with_filters.q.out |    4 +-
 .../clientpositive/spark/vector_between_in.q.out   |   14 +-
 .../clientpositive/spark/vector_data_types.q.out   |    4 +-
 .../spark/vector_decimal_aggregate.q.out           |   32 +-
 .../spark/vector_decimal_mapjoin.q.out             |  102 +-
 .../clientpositive/sum_expr_with_order.q.out       |    2 +-
 .../clientpositive/tez/mapjoin_decimal.q.out       |  424 ++++-----
 .../clientpositive/tez/update_all_types.q.out      |   30 +-
 .../clientpositive/tez/vector_aggregate_9.q.out    |   18 +-
 .../clientpositive/tez/vector_between_in.q.out     |   14 +-
 .../tez/vector_cast_constant.q.java1.7.out         |   20 +-
 .../clientpositive/tez/vector_data_types.q.out     |    4 +-
 .../clientpositive/tez/vector_decimal_2.q.out      |    4 +-
 .../clientpositive/tez/vector_decimal_3.q.out      |  514 +++++-----
 .../clientpositive/tez/vector_decimal_4.q.out      |  288 +++---
 .../clientpositive/tez/vector_decimal_5.q.out      |  180 ++--
 .../clientpositive/tez/vector_decimal_6.q.out      |  172 ++--
 .../tez/vector_decimal_aggregate.q.out             |   35 +-
 .../clientpositive/tez/vector_decimal_cast.q.out   |   20 +-
 .../tez/vector_decimal_expressions.q.out           |   20 +-
 .../tez/vector_decimal_mapjoin.q.out               |  102 +-
 .../tez/vector_decimal_precision.q.out             |  170 ++--
 .../tez/vector_decimal_round_2.q.out               |    8 +-
 .../tez/vector_decimal_trailing.q.out              |   42 +-
 .../clientpositive/tez/vector_decimal_udf.q.out    |  981 ++++++++++----------
 .../tez/vector_reduce_groupby_decimal.q.out        |   98 +-
 .../results/clientpositive/update_all_types.q.out  |   30 +-
 .../clientpositive/vector_aggregate_9.q.out        |    2 +-
 .../results/clientpositive/vector_between_in.q.out |   14 +-
 .../results/clientpositive/vector_data_types.q.out |    4 +-
 .../results/clientpositive/vector_decimal_2.q.out  |    4 +-
 .../results/clientpositive/vector_decimal_3.q.out  |  514 +++++-----
 .../results/clientpositive/vector_decimal_4.q.out  |  288 +++---
 .../results/clientpositive/vector_decimal_5.q.out  |  180 ++--
 .../results/clientpositive/vector_decimal_6.q.out  |  172 ++--
 .../clientpositive/vector_decimal_aggregate.q.out  |   32 +-
 .../clientpositive/vector_decimal_cast.q.out       |   20 +-
 .../vector_decimal_expressions.q.out               |   20 +-
 .../clientpositive/vector_decimal_mapjoin.q.out    |  102 +-
 .../clientpositive/vector_decimal_precision.q.out  |  170 ++--
 .../clientpositive/vector_decimal_round_2.q.out    |   14 +-
 .../clientpositive/vector_decimal_trailing.q.out   |   42 +-
 .../clientpositive/vector_decimal_udf.q.out        |  960 +++++++++----------
 .../vector_reduce_groupby_decimal.q.out            |   98 +-
 .../results/clientpositive/windowing_decimal.q.out |  104 +--
 .../results/clientpositive/windowing_navfn.q.out   |   20 +-
 .../results/clientpositive/windowing_rank.q.out    |   60 +-
 .../hadoop/hive/serde2/lazy/LazyHiveDecimal.java   |    4 +-
 .../apache/hadoop/hive/serde2/lazy/LazyUtils.java  |    3 +-
 84 files changed, 5544 insertions(+), 5560 deletions(-)

diff --git a/common/src/java/org/apache/hadoop/hive/common/type/HiveDecimal.java b/common/src/java/org/apache/hadoop/hive/common/type/HiveDecimal.java
index 927aa28..cd8abc2 100644
--- a/common/src/java/org/apache/hadoop/hive/common/type/HiveDecimal.java
+++ b/common/src/java/org/apache/hadoop/hive/common/type/HiveDecimal.java
@@ -101,17 +101,6 @@ public static HiveDecimal create(long l) {
   public String toString() {
      return bd.toPlainString();
   }
-  
-  /**
-   * Return a string representation of the number with the number of decimal digits as
-   * the given scale. Please note that this is different from toString().
-   * @param scale the number of digits after the decimal point
-   * @return the string representation of exact number of decimal digits
-   */
-  public String toFormatString(int scale) {
-    return (bd.scale() == scale ? bd :
-      bd.setScale(scale, RoundingMode.HALF_UP)).toPlainString();
-  }
 
   public HiveDecimal setScale(int i) {
     return new HiveDecimal(bd.setScale(i, RoundingMode.HALF_UP));
diff --git a/ql/src/test/results/clientpositive/acid_join.q.out b/ql/src/test/results/clientpositive/acid_join.q.out
index a5c3f93..8fb42e4 100644
--- a/ql/src/test/results/clientpositive/acid_join.q.out
+++ b/ql/src/test/results/clientpositive/acid_join.q.out
@@ -59,7 +59,7 @@ POSTHOOK: query: select * from acidjoin3 order by name
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@acidjoin3
 #### A masked pattern was here ####
-aaa	35	3.00
+aaa	35	3
 bbb	32	3.01
 ccc	32	3.02
 ddd	35	3.03
diff --git a/ql/src/test/results/clientpositive/alter_partition_change_col.q.out b/ql/src/test/results/clientpositive/alter_partition_change_col.q.out
index 42b13e0..da8d7ad 100644
--- a/ql/src/test/results/clientpositive/alter_partition_change_col.q.out
+++ b/ql/src/test/results/clientpositive/alter_partition_change_col.q.out
@@ -205,16 +205,16 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@alter_partition_change_col1
 POSTHOOK: Input: default@alter_partition_change_col1@p1=abc/p2=123
 #### A masked pattern was here ####
-Beck	0.0000	abc	123
-Beck	77.0000	abc	123
-Beck	80.0000	abc	123
-Cluck	6.0000	abc	123
-Mary	33.0000	abc	123
-Mary	4.0000	abc	123
-Snow	56.0000	abc	123
-Tom	-12.0000	abc	123
-Tom	19.0000	abc	123
-Tom	235.0000	abc	123
+Beck	0	abc	123
+Beck	77	abc	123
+Beck	80	abc	123
+Cluck	6	abc	123
+Mary	33	abc	123
+Mary	4	abc	123
+Snow	56	abc	123
+Tom	-12	abc	123
+Tom	19	abc	123
+Tom	235	abc	123
 PREHOOK: query: select * from alter_partition_change_col1 where p1='__HIVE_DEFAULT_PARTITION__'
 PREHOOK: type: QUERY
 PREHOOK: Input: default@alter_partition_change_col1
@@ -225,16 +225,16 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@alter_partition_change_col1
 POSTHOOK: Input: default@alter_partition_change_col1@p1=__HIVE_DEFAULT_PARTITION__/p2=123
 #### A masked pattern was here ####
-Beck	0.0000	__HIVE_DEFAULT_PARTITION__	123
-Beck	77.0000	__HIVE_DEFAULT_PARTITION__	123
-Beck	80.0000	__HIVE_DEFAULT_PARTITION__	123
-Cluck	6.0000	__HIVE_DEFAULT_PARTITION__	123
-Mary	33.0000	__HIVE_DEFAULT_PARTITION__	123
-Mary	4.0000	__HIVE_DEFAULT_PARTITION__	123
-Snow	56.0000	__HIVE_DEFAULT_PARTITION__	123
-Tom	-12.0000	__HIVE_DEFAULT_PARTITION__	123
-Tom	19.0000	__HIVE_DEFAULT_PARTITION__	123
-Tom	235.0000	__HIVE_DEFAULT_PARTITION__	123
+Beck	0	__HIVE_DEFAULT_PARTITION__	123
+Beck	77	__HIVE_DEFAULT_PARTITION__	123
+Beck	80	__HIVE_DEFAULT_PARTITION__	123
+Cluck	6	__HIVE_DEFAULT_PARTITION__	123
+Mary	33	__HIVE_DEFAULT_PARTITION__	123
+Mary	4	__HIVE_DEFAULT_PARTITION__	123
+Snow	56	__HIVE_DEFAULT_PARTITION__	123
+Tom	-12	__HIVE_DEFAULT_PARTITION__	123
+Tom	19	__HIVE_DEFAULT_PARTITION__	123
+Tom	235	__HIVE_DEFAULT_PARTITION__	123
 PREHOOK: query: alter table alter_partition_change_col1 partition (p1='abc', p2='123') change c2 c2 decimal(14,4)
 PREHOOK: type: ALTERTABLE_RENAMECOL
 PREHOOK: Input: default@alter_partition_change_col1
@@ -270,16 +270,16 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@alter_partition_change_col1
 POSTHOOK: Input: default@alter_partition_change_col1@p1=abc/p2=123
 #### A masked pattern was here ####
-Beck	0.0000	abc	123
-Beck	77.3410	abc	123
-Beck	79.9000	abc	123
-Cluck	5.9600	abc	123
-Mary	33.3300	abc	123
-Mary	4.3290	abc	123
-Snow	55.7100	abc	123
-Tom	-12.2500	abc	123
-Tom	19.0000	abc	123
-Tom	234.7900	abc	123
+Beck	0	abc	123
+Beck	77.341	abc	123
+Beck	79.9	abc	123
+Cluck	5.96	abc	123
+Mary	33.33	abc	123
+Mary	4.329	abc	123
+Snow	55.71	abc	123
+Tom	-12.25	abc	123
+Tom	19	abc	123
+Tom	234.79	abc	123
 PREHOOK: query: select * from alter_partition_change_col1 where p1='__HIVE_DEFAULT_PARTITION__'
 PREHOOK: type: QUERY
 PREHOOK: Input: default@alter_partition_change_col1
@@ -290,16 +290,16 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@alter_partition_change_col1
 POSTHOOK: Input: default@alter_partition_change_col1@p1=__HIVE_DEFAULT_PARTITION__/p2=123
 #### A masked pattern was here ####
-Beck	0.0000	__HIVE_DEFAULT_PARTITION__	123
-Beck	77.0000	__HIVE_DEFAULT_PARTITION__	123
-Beck	80.0000	__HIVE_DEFAULT_PARTITION__	123
-Cluck	6.0000	__HIVE_DEFAULT_PARTITION__	123
-Mary	33.0000	__HIVE_DEFAULT_PARTITION__	123
-Mary	4.0000	__HIVE_DEFAULT_PARTITION__	123
-Snow	56.0000	__HIVE_DEFAULT_PARTITION__	123
-Tom	-12.0000	__HIVE_DEFAULT_PARTITION__	123
-Tom	19.0000	__HIVE_DEFAULT_PARTITION__	123
-Tom	235.0000	__HIVE_DEFAULT_PARTITION__	123
+Beck	0	__HIVE_DEFAULT_PARTITION__	123
+Beck	77	__HIVE_DEFAULT_PARTITION__	123
+Beck	80	__HIVE_DEFAULT_PARTITION__	123
+Cluck	6	__HIVE_DEFAULT_PARTITION__	123
+Mary	33	__HIVE_DEFAULT_PARTITION__	123
+Mary	4	__HIVE_DEFAULT_PARTITION__	123
+Snow	56	__HIVE_DEFAULT_PARTITION__	123
+Tom	-12	__HIVE_DEFAULT_PARTITION__	123
+Tom	19	__HIVE_DEFAULT_PARTITION__	123
+Tom	235	__HIVE_DEFAULT_PARTITION__	123
 PREHOOK: query: alter table alter_partition_change_col1 partition (p1='__HIVE_DEFAULT_PARTITION__', p2='123') change c2 c2 decimal(14,4)
 PREHOOK: type: ALTERTABLE_RENAMECOL
 PREHOOK: Input: default@alter_partition_change_col1
@@ -335,16 +335,16 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@alter_partition_change_col1
 POSTHOOK: Input: default@alter_partition_change_col1@p1=abc/p2=123
 #### A masked pattern was here ####
-Beck	0.0000	abc	123
-Beck	77.3410	abc	123
-Beck	79.9000	abc	123
-Cluck	5.9600	abc	123
-Mary	33.3300	abc	123
-Mary	4.3290	abc	123
-Snow	55.7100	abc	123
-Tom	-12.2500	abc	123
-Tom	19.0000	abc	123
-Tom	234.7900	abc	123
+Beck	0	abc	123
+Beck	77.341	abc	123
+Beck	79.9	abc	123
+Cluck	5.96	abc	123
+Mary	33.33	abc	123
+Mary	4.329	abc	123
+Snow	55.71	abc	123
+Tom	-12.25	abc	123
+Tom	19	abc	123
+Tom	234.79	abc	123
 PREHOOK: query: select * from alter_partition_change_col1 where p1='__HIVE_DEFAULT_PARTITION__'
 PREHOOK: type: QUERY
 PREHOOK: Input: default@alter_partition_change_col1
@@ -355,16 +355,16 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@alter_partition_change_col1
 POSTHOOK: Input: default@alter_partition_change_col1@p1=__HIVE_DEFAULT_PARTITION__/p2=123
 #### A masked pattern was here ####
-Beck	0.0000	__HIVE_DEFAULT_PARTITION__	123
-Beck	77.3410	__HIVE_DEFAULT_PARTITION__	123
-Beck	79.9000	__HIVE_DEFAULT_PARTITION__	123
-Cluck	5.9600	__HIVE_DEFAULT_PARTITION__	123
-Mary	33.3300	__HIVE_DEFAULT_PARTITION__	123
-Mary	4.3290	__HIVE_DEFAULT_PARTITION__	123
-Snow	55.7100	__HIVE_DEFAULT_PARTITION__	123
-Tom	-12.2500	__HIVE_DEFAULT_PARTITION__	123
-Tom	19.0000	__HIVE_DEFAULT_PARTITION__	123
-Tom	234.7900	__HIVE_DEFAULT_PARTITION__	123
+Beck	0	__HIVE_DEFAULT_PARTITION__	123
+Beck	77.341	__HIVE_DEFAULT_PARTITION__	123
+Beck	79.9	__HIVE_DEFAULT_PARTITION__	123
+Cluck	5.96	__HIVE_DEFAULT_PARTITION__	123
+Mary	33.33	__HIVE_DEFAULT_PARTITION__	123
+Mary	4.329	__HIVE_DEFAULT_PARTITION__	123
+Snow	55.71	__HIVE_DEFAULT_PARTITION__	123
+Tom	-12.25	__HIVE_DEFAULT_PARTITION__	123
+Tom	19	__HIVE_DEFAULT_PARTITION__	123
+Tom	234.79	__HIVE_DEFAULT_PARTITION__	123
 PREHOOK: query: alter table alter_partition_change_col1 partition (p1='abc', p2='123') replace columns (c1 string)
 PREHOOK: type: ALTERTABLE_REPLACECOLS
 PREHOOK: Input: default@alter_partition_change_col1
@@ -435,16 +435,16 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@alter_partition_change_col1
 POSTHOOK: Input: default@alter_partition_change_col1@p1=__HIVE_DEFAULT_PARTITION__/p2=123
 #### A masked pattern was here ####
-Beck	0.0000	__HIVE_DEFAULT_PARTITION__	123
-Beck	77.3410	__HIVE_DEFAULT_PARTITION__	123
-Beck	79.9000	__HIVE_DEFAULT_PARTITION__	123
-Cluck	5.9600	__HIVE_DEFAULT_PARTITION__	123
-Mary	33.3300	__HIVE_DEFAULT_PARTITION__	123
-Mary	4.3290	__HIVE_DEFAULT_PARTITION__	123
-Snow	55.7100	__HIVE_DEFAULT_PARTITION__	123
-Tom	-12.2500	__HIVE_DEFAULT_PARTITION__	123
-Tom	19.0000	__HIVE_DEFAULT_PARTITION__	123
-Tom	234.7900	__HIVE_DEFAULT_PARTITION__	123
+Beck	0	__HIVE_DEFAULT_PARTITION__	123
+Beck	77.341	__HIVE_DEFAULT_PARTITION__	123
+Beck	79.9	__HIVE_DEFAULT_PARTITION__	123
+Cluck	5.96	__HIVE_DEFAULT_PARTITION__	123
+Mary	33.33	__HIVE_DEFAULT_PARTITION__	123
+Mary	4.329	__HIVE_DEFAULT_PARTITION__	123
+Snow	55.71	__HIVE_DEFAULT_PARTITION__	123
+Tom	-12.25	__HIVE_DEFAULT_PARTITION__	123
+Tom	19	__HIVE_DEFAULT_PARTITION__	123
+Tom	234.79	__HIVE_DEFAULT_PARTITION__	123
 PREHOOK: query: alter table alter_partition_change_col1 replace columns (c1 string)
 PREHOOK: type: ALTERTABLE_REPLACECOLS
 PREHOOK: Input: default@alter_partition_change_col1
@@ -577,16 +577,16 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@alter_partition_change_col1
 POSTHOOK: Input: default@alter_partition_change_col1@p1=__HIVE_DEFAULT_PARTITION__/p2=123
 #### A masked pattern was here ####
-Beck	0.0000	__HIVE_DEFAULT_PARTITION__	123
-Beck	77.3410	__HIVE_DEFAULT_PARTITION__	123
-Beck	79.9000	__HIVE_DEFAULT_PARTITION__	123
-Cluck	5.9600	__HIVE_DEFAULT_PARTITION__	123
-Mary	33.3300	__HIVE_DEFAULT_PARTITION__	123
-Mary	4.3290	__HIVE_DEFAULT_PARTITION__	123
-Snow	55.7100	__HIVE_DEFAULT_PARTITION__	123
-Tom	-12.2500	__HIVE_DEFAULT_PARTITION__	123
-Tom	19.0000	__HIVE_DEFAULT_PARTITION__	123
-Tom	234.7900	__HIVE_DEFAULT_PARTITION__	123
+Beck	0	__HIVE_DEFAULT_PARTITION__	123
+Beck	77.341	__HIVE_DEFAULT_PARTITION__	123
+Beck	79.9	__HIVE_DEFAULT_PARTITION__	123
+Cluck	5.96	__HIVE_DEFAULT_PARTITION__	123
+Mary	33.33	__HIVE_DEFAULT_PARTITION__	123
+Mary	4.329	__HIVE_DEFAULT_PARTITION__	123
+Snow	55.71	__HIVE_DEFAULT_PARTITION__	123
+Tom	-12.25	__HIVE_DEFAULT_PARTITION__	123
+Tom	19	__HIVE_DEFAULT_PARTITION__	123
+Tom	234.79	__HIVE_DEFAULT_PARTITION__	123
 PREHOOK: query: alter table alter_partition_change_col1 partition (p1='abc', p2='123') add columns (c2 decimal(14,4))
 PREHOOK: type: ALTERTABLE_ADDCOLS
 PREHOOK: Input: default@alter_partition_change_col1
@@ -622,16 +622,16 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@alter_partition_change_col1
 POSTHOOK: Input: default@alter_partition_change_col1@p1=abc/p2=123
 #### A masked pattern was here ####
-Beck	0.0000	abc	123
-Beck	77.3410	abc	123
-Beck	79.9000	abc	123
-Cluck	5.9600	abc	123
-Mary	33.3300	abc	123
-Mary	4.3290	abc	123
-Snow	55.7100	abc	123
-Tom	-12.2500	abc	123
-Tom	19.0000	abc	123
-Tom	234.7900	abc	123
+Beck	0	abc	123
+Beck	77.341	abc	123
+Beck	79.9	abc	123
+Cluck	5.96	abc	123
+Mary	33.33	abc	123
+Mary	4.329	abc	123
+Snow	55.71	abc	123
+Tom	-12.25	abc	123
+Tom	19	abc	123
+Tom	234.79	abc	123
 PREHOOK: query: select * from alter_partition_change_col1 where p1='__HIVE_DEFAULT_PARTITION__'
 PREHOOK: type: QUERY
 PREHOOK: Input: default@alter_partition_change_col1
@@ -642,16 +642,16 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@alter_partition_change_col1
 POSTHOOK: Input: default@alter_partition_change_col1@p1=__HIVE_DEFAULT_PARTITION__/p2=123
 #### A masked pattern was here ####
-Beck	0.0000	__HIVE_DEFAULT_PARTITION__	123
-Beck	77.3410	__HIVE_DEFAULT_PARTITION__	123
-Beck	79.9000	__HIVE_DEFAULT_PARTITION__	123
-Cluck	5.9600	__HIVE_DEFAULT_PARTITION__	123
-Mary	33.3300	__HIVE_DEFAULT_PARTITION__	123
-Mary	4.3290	__HIVE_DEFAULT_PARTITION__	123
-Snow	55.7100	__HIVE_DEFAULT_PARTITION__	123
-Tom	-12.2500	__HIVE_DEFAULT_PARTITION__	123
-Tom	19.0000	__HIVE_DEFAULT_PARTITION__	123
-Tom	234.7900	__HIVE_DEFAULT_PARTITION__	123
+Beck	0	__HIVE_DEFAULT_PARTITION__	123
+Beck	77.341	__HIVE_DEFAULT_PARTITION__	123
+Beck	79.9	__HIVE_DEFAULT_PARTITION__	123
+Cluck	5.96	__HIVE_DEFAULT_PARTITION__	123
+Mary	33.33	__HIVE_DEFAULT_PARTITION__	123
+Mary	4.329	__HIVE_DEFAULT_PARTITION__	123
+Snow	55.71	__HIVE_DEFAULT_PARTITION__	123
+Tom	-12.25	__HIVE_DEFAULT_PARTITION__	123
+Tom	19	__HIVE_DEFAULT_PARTITION__	123
+Tom	234.79	__HIVE_DEFAULT_PARTITION__	123
 PREHOOK: query: alter table alter_partition_change_col1 partition (p1, p2='123') change column c2 c2 decimal(10,0)
 PREHOOK: type: ALTERTABLE_RENAMECOL
 PREHOOK: Input: default@alter_partition_change_col1
@@ -706,16 +706,16 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@alter_partition_change_col1
 POSTHOOK: Input: default@alter_partition_change_col1@p1=abc/p2=123
 #### A masked pattern was here ####
-Beck	0.0000	abc	123
-Beck	77.0000	abc	123
-Beck	80.0000	abc	123
-Cluck	6.0000	abc	123
-Mary	33.0000	abc	123
-Mary	4.0000	abc	123
-Snow	56.0000	abc	123
-Tom	-12.0000	abc	123
-Tom	19.0000	abc	123
-Tom	235.0000	abc	123
+Beck	0	abc	123
+Beck	77	abc	123
+Beck	80	abc	123
+Cluck	6	abc	123
+Mary	33	abc	123
+Mary	4	abc	123
+Snow	56	abc	123
+Tom	-12	abc	123
+Tom	19	abc	123
+Tom	235	abc	123
 PREHOOK: query: select * from alter_partition_change_col1 where p1='__HIVE_DEFAULT_PARTITION__'
 PREHOOK: type: QUERY
 PREHOOK: Input: default@alter_partition_change_col1
@@ -726,13 +726,13 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@alter_partition_change_col1
 POSTHOOK: Input: default@alter_partition_change_col1@p1=__HIVE_DEFAULT_PARTITION__/p2=123
 #### A masked pattern was here ####
-Beck	0.0000	__HIVE_DEFAULT_PARTITION__	123
-Beck	77.0000	__HIVE_DEFAULT_PARTITION__	123
-Beck	80.0000	__HIVE_DEFAULT_PARTITION__	123
-Cluck	6.0000	__HIVE_DEFAULT_PARTITION__	123
-Mary	33.0000	__HIVE_DEFAULT_PARTITION__	123
-Mary	4.0000	__HIVE_DEFAULT_PARTITION__	123
-Snow	56.0000	__HIVE_DEFAULT_PARTITION__	123
-Tom	-12.0000	__HIVE_DEFAULT_PARTITION__	123
-Tom	19.0000	__HIVE_DEFAULT_PARTITION__	123
-Tom	235.0000	__HIVE_DEFAULT_PARTITION__	123
+Beck	0	__HIVE_DEFAULT_PARTITION__	123
+Beck	77	__HIVE_DEFAULT_PARTITION__	123
+Beck	80	__HIVE_DEFAULT_PARTITION__	123
+Cluck	6	__HIVE_DEFAULT_PARTITION__	123
+Mary	33	__HIVE_DEFAULT_PARTITION__	123
+Mary	4	__HIVE_DEFAULT_PARTITION__	123
+Snow	56	__HIVE_DEFAULT_PARTITION__	123
+Tom	-12	__HIVE_DEFAULT_PARTITION__	123
+Tom	19	__HIVE_DEFAULT_PARTITION__	123
+Tom	235	__HIVE_DEFAULT_PARTITION__	123
diff --git a/ql/src/test/results/clientpositive/alter_table_cascade.q.out b/ql/src/test/results/clientpositive/alter_table_cascade.q.out
index 4422db0..9b6aed6 100644
--- a/ql/src/test/results/clientpositive/alter_table_cascade.q.out
+++ b/ql/src/test/results/clientpositive/alter_table_cascade.q.out
@@ -809,16 +809,16 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@alter_table_cascade
 POSTHOOK: Input: default@alter_table_cascade@p1=xyz/p2=123
 #### A masked pattern was here ####
-Beck	0.0000	xyz	123
-Beck	77.3410	xyz	123
-Beck	79.9000	xyz	123
-Cluck	5.9600	xyz	123
-Mary	33.3300	xyz	123
-Mary	4.3290	xyz	123
-Snow	55.7100	xyz	123
-Tom	-12.2500	xyz	123
-Tom	19.0000	xyz	123
-Tom	234.7900	xyz	123
+Beck	0	xyz	123
+Beck	77.341	xyz	123
+Beck	79.9	xyz	123
+Cluck	5.96	xyz	123
+Mary	33.33	xyz	123
+Mary	4.329	xyz	123
+Snow	55.71	xyz	123
+Tom	-12.25	xyz	123
+Tom	19	xyz	123
+Tom	234.79	xyz	123
 PREHOOK: query: select * from alter_table_cascade where p1='abc'
 PREHOOK: type: QUERY
 PREHOOK: Input: default@alter_table_cascade
@@ -849,16 +849,16 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@alter_table_cascade
 POSTHOOK: Input: default@alter_table_cascade@p1=__HIVE_DEFAULT_PARTITION__/p2=123
 #### A masked pattern was here ####
-Beck	0.0000	__HIVE_DEFAULT_PARTITION__	123
-Beck	77.3410	__HIVE_DEFAULT_PARTITION__	123
-Beck	79.9000	__HIVE_DEFAULT_PARTITION__	123
-Cluck	5.9600	__HIVE_DEFAULT_PARTITION__	123
-Mary	33.3300	__HIVE_DEFAULT_PARTITION__	123
-Mary	4.3290	__HIVE_DEFAULT_PARTITION__	123
-Snow	55.7100	__HIVE_DEFAULT_PARTITION__	123
-Tom	-12.2500	__HIVE_DEFAULT_PARTITION__	123
-Tom	19.0000	__HIVE_DEFAULT_PARTITION__	123
-Tom	234.7900	__HIVE_DEFAULT_PARTITION__	123
+Beck	0	__HIVE_DEFAULT_PARTITION__	123
+Beck	77.341	__HIVE_DEFAULT_PARTITION__	123
+Beck	79.9	__HIVE_DEFAULT_PARTITION__	123
+Cluck	5.96	__HIVE_DEFAULT_PARTITION__	123
+Mary	33.33	__HIVE_DEFAULT_PARTITION__	123
+Mary	4.329	__HIVE_DEFAULT_PARTITION__	123
+Snow	55.71	__HIVE_DEFAULT_PARTITION__	123
+Tom	-12.25	__HIVE_DEFAULT_PARTITION__	123
+Tom	19	__HIVE_DEFAULT_PARTITION__	123
+Tom	234.79	__HIVE_DEFAULT_PARTITION__	123
 PREHOOK: query: drop table if exists alter_table_restrict
 PREHOOK: type: DROPTABLE
 POSTHOOK: query: drop table if exists alter_table_restrict
diff --git a/ql/src/test/results/clientpositive/ansi_sql_arithmetic.q.out b/ql/src/test/results/clientpositive/ansi_sql_arithmetic.q.out
index e8f5962..398474a 100644
--- a/ql/src/test/results/clientpositive/ansi_sql_arithmetic.q.out
+++ b/ql/src/test/results/clientpositive/ansi_sql_arithmetic.q.out
@@ -42,7 +42,7 @@ POSTHOOK: query: select cast(key as int) / cast(key as int) from src limit 1
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
 #### A masked pattern was here ####
-1.00000000000
+1
 PREHOOK: query: explain select cast(key as int) / cast(key as int) from src limit 1
 PREHOOK: type: QUERY
 POSTHOOK: query: explain select cast(key as int) / cast(key as int) from src limit 1
diff --git a/ql/src/test/results/clientpositive/avro_decimal.q.out b/ql/src/test/results/clientpositive/avro_decimal.q.out
index 64e65ca..7ba376e 100644
--- a/ql/src/test/results/clientpositive/avro_decimal.q.out
+++ b/ql/src/test/results/clientpositive/avro_decimal.q.out
@@ -106,9 +106,9 @@ Mary	4.33
 Cluck	5.96
 Tom	-12.25
 Mary	33.33
-Tom	19.00
-Beck	0.00
-Beck	79.90
+Tom	19
+Beck	0
+Beck	79.9
 PREHOOK: query: DROP TABLE IF EXISTS avro_dec1
 PREHOOK: type: DROPTABLE
 POSTHOOK: query: DROP TABLE IF EXISTS avro_dec1
@@ -175,10 +175,10 @@ POSTHOOK: Input: default@avro_dec1
 77.3
 55.7
 4.3
-6.0
+6
 12.3
 33.3
-19.0
+19
 3.2
 79.9
 PREHOOK: query: DROP TABLE dec
diff --git a/ql/src/test/results/clientpositive/avro_decimal_native.q.out b/ql/src/test/results/clientpositive/avro_decimal_native.q.out
index cebc342..318be3d 100644
--- a/ql/src/test/results/clientpositive/avro_decimal_native.q.out
+++ b/ql/src/test/results/clientpositive/avro_decimal_native.q.out
@@ -92,9 +92,9 @@ Mary	4.33
 Cluck	5.96
 Tom	-12.25
 Mary	33.33
-Tom	19.00
-Beck	0.00
-Beck	79.90
+Tom	19
+Beck	0
+Beck	79.9
 PREHOOK: query: DROP TABLE IF EXISTS avro_dec1
 PREHOOK: type: DROPTABLE
 POSTHOOK: query: DROP TABLE IF EXISTS avro_dec1
@@ -143,10 +143,10 @@ POSTHOOK: Input: default@avro_dec1
 77.3
 55.7
 4.3
-6.0
+6
 12.3
 33.3
-19.0
+19
 3.2
 79.9
 PREHOOK: query: DROP TABLE dec
diff --git a/ql/src/test/results/clientpositive/avro_decimal_old.q.out b/ql/src/test/results/clientpositive/avro_decimal_old.q.out
index 22efe39..cb0b8f7 100644
--- a/ql/src/test/results/clientpositive/avro_decimal_old.q.out
+++ b/ql/src/test/results/clientpositive/avro_decimal_old.q.out
@@ -44,10 +44,10 @@ POSTHOOK: Input: default@avro_dec_old
 77.3
 55.7
 4.3
-6.0
+6
 12.3
 33.3
-19.0
+19
 3.2
 79.9
 PREHOOK: query: DROP TABLE avro_dec_old
diff --git a/ql/src/test/results/clientpositive/cast_qualified_types.q.out b/ql/src/test/results/clientpositive/cast_qualified_types.q.out
index 099a199..1924c5d 100644
--- a/ql/src/test/results/clientpositive/cast_qualified_types.q.out
+++ b/ql/src/test/results/clientpositive/cast_qualified_types.q.out
@@ -18,4 +18,4 @@ limit 1
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
 #### A masked pattern was here ####
-0.00	0         	0
+0	0         	0
diff --git a/ql/src/test/results/clientpositive/decimal_1_1.q.out b/ql/src/test/results/clientpositive/decimal_1_1.q.out
index 46fbeb7..b2704c6 100644
--- a/ql/src/test/results/clientpositive/decimal_1_1.q.out
+++ b/ql/src/test/results/clientpositive/decimal_1_1.q.out
@@ -26,9 +26,9 @@ POSTHOOK: query: select * from decimal_1_1
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_1_1
 #### A masked pattern was here ####
-0.0
-0.0
-0.0
+0
+0
+0
 0.1
 0.2
 0.9
@@ -37,13 +37,13 @@ NULL
 0.3
 NULL
 NULL
-0.0
-0.0
+0
+0
 NULL
-0.0
-0.0
-0.0
-0.0
+0
+0
+0
+0
 -0.1
 -0.2
 -0.9
@@ -52,10 +52,10 @@ NULL
 -0.3
 NULL
 NULL
-0.0
-0.0
+0
+0
 NULL
-0.0
+0
 PREHOOK: query: select d from decimal_1_1 order by d desc
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_1_1
@@ -69,18 +69,18 @@ POSTHOOK: Input: default@decimal_1_1
 0.3
 0.2
 0.1
-0.0
-0.0
-0.0
-0.0
-0.0
-0.0
-0.0
-0.0
-0.0
-0.0
-0.0
-0.0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
 -0.1
 -0.2
 -0.3
diff --git a/ql/src/test/results/clientpositive/decimal_3.q.out b/ql/src/test/results/clientpositive/decimal_3.q.out
index 3ded9a7..8e9a30a 100644
--- a/ql/src/test/results/clientpositive/decimal_3.q.out
+++ b/ql/src/test/results/clientpositive/decimal_3.q.out
@@ -33,43 +33,43 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_3
 #### A masked pattern was here ####
 NULL	0
--1234567890.123456789000000000	-1234567890
--4400.000000000000000000	4400
--1255.490000000000000000	-1255
--1.122000000000000000	-11
--1.120000000000000000	-1
--1.120000000000000000	-1
--0.333000000000000000	0
--0.330000000000000000	0
--0.300000000000000000	0
-0.000000000000000000	0
-0.000000000000000000	0
-0.000000000000000000	0
-0.010000000000000000	0
-0.020000000000000000	0
-0.100000000000000000	0
-0.200000000000000000	0
-0.300000000000000000	0
-0.330000000000000000	0
-0.333000000000000000	0
-1.000000000000000000	1
-1.000000000000000000	1
-1.000000000000000000	1
-1.120000000000000000	1
-1.122000000000000000	1
-2.000000000000000000	2
-2.000000000000000000	2
-3.140000000000000000	3
-3.140000000000000000	3
-3.140000000000000000	3
-3.140000000000000000	4
-10.000000000000000000	10
-20.000000000000000000	20
-100.000000000000000000	100
-124.000000000000000000	124
-125.200000000000000000	125
-200.000000000000000000	200
-1234567890.123456780000000000	1234567890
+-1234567890.123456789	-1234567890
+-4400	4400
+-1255.49	-1255
+-1.122	-11
+-1.12	-1
+-1.12	-1
+-0.333	0
+-0.33	0
+-0.3	0
+0	0
+0	0
+0	0
+0.01	0
+0.02	0
+0.1	0
+0.2	0
+0.3	0
+0.33	0
+0.333	0
+1	1
+1	1
+1	1
+1.12	1
+1.122	1
+2	2
+2	2
+3.14	3
+3.14	3
+3.14	3
+3.14	4
+10	10
+20	20
+100	100
+124	124
+125.2	125
+200	200
+1234567890.12345678	1234567890
 PREHOOK: query: SELECT * FROM DECIMAL_3 ORDER BY key DESC, value DESC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_3
@@ -78,43 +78,43 @@ POSTHOOK: query: SELECT * FROM DECIMAL_3 ORDER BY key DESC, value DESC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_3
 #### A masked pattern was here ####
-1234567890.123456780000000000	1234567890
-200.000000000000000000	200
-125.200000000000000000	125
-124.000000000000000000	124
-100.000000000000000000	100
-20.000000000000000000	20
-10.000000000000000000	10
-3.140000000000000000	4
-3.140000000000000000	3
-3.140000000000000000	3
-3.140000000000000000	3
-2.000000000000000000	2
-2.000000000000000000	2
-1.122000000000000000	1
-1.120000000000000000	1
-1.000000000000000000	1
-1.000000000000000000	1
-1.000000000000000000	1
-0.333000000000000000	0
-0.330000000000000000	0
-0.300000000000000000	0
-0.200000000000000000	0
-0.100000000000000000	0
-0.020000000000000000	0
-0.010000000000000000	0
-0.000000000000000000	0
-0.000000000000000000	0
-0.000000000000000000	0
--0.300000000000000000	0
--0.330000000000000000	0
--0.333000000000000000	0
--1.120000000000000000	-1
--1.120000000000000000	-1
--1.122000000000000000	-11
--1255.490000000000000000	-1255
--4400.000000000000000000	4400
--1234567890.123456789000000000	-1234567890
+1234567890.12345678	1234567890
+200	200
+125.2	125
+124	124
+100	100
+20	20
+10	10
+3.14	4
+3.14	3
+3.14	3
+3.14	3
+2	2
+2	2
+1.122	1
+1.12	1
+1	1
+1	1
+1	1
+0.333	0
+0.33	0
+0.3	0
+0.2	0
+0.1	0
+0.02	0
+0.01	0
+0	0
+0	0
+0	0
+-0.3	0
+-0.33	0
+-0.333	0
+-1.12	-1
+-1.12	-1
+-1.122	-11
+-1255.49	-1255
+-4400	4400
+-1234567890.123456789	-1234567890
 NULL	0
 PREHOOK: query: SELECT * FROM DECIMAL_3 ORDER BY key, value
 PREHOOK: type: QUERY
@@ -125,43 +125,43 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_3
 #### A masked pattern was here ####
 NULL	0
--1234567890.123456789000000000	-1234567890
--4400.000000000000000000	4400
--1255.490000000000000000	-1255
--1.122000000000000000	-11
--1.120000000000000000	-1
--1.120000000000000000	-1
--0.333000000000000000	0
--0.330000000000000000	0
--0.300000000000000000	0
-0.000000000000000000	0
-0.000000000000000000	0
-0.000000000000000000	0
-0.010000000000000000	0
-0.020000000000000000	0
-0.100000000000000000	0
-0.200000000000000000	0
-0.300000000000000000	0
-0.330000000000000000	0
-0.333000000000000000	0
-1.000000000000000000	1
-1.000000000000000000	1
-1.000000000000000000	1
-1.120000000000000000	1
-1.122000000000000000	1
-2.000000000000000000	2
-2.000000000000000000	2
-3.140000000000000000	3
-3.140000000000000000	3
-3.140000000000000000	3
-3.140000000000000000	4
-10.000000000000000000	10
-20.000000000000000000	20
-100.000000000000000000	100
-124.000000000000000000	124
-125.200000000000000000	125
-200.000000000000000000	200
-1234567890.123456780000000000	1234567890
+-1234567890.123456789	-1234567890
+-4400	4400
+-1255.49	-1255
+-1.122	-11
+-1.12	-1
+-1.12	-1
+-0.333	0
+-0.33	0
+-0.3	0
+0	0
+0	0
+0	0
+0.01	0
+0.02	0
+0.1	0
+0.2	0
+0.3	0
+0.33	0
+0.333	0
+1	1
+1	1
+1	1
+1.12	1
+1.122	1
+2	2
+2	2
+3.14	3
+3.14	3
+3.14	3
+3.14	4
+10	10
+20	20
+100	100
+124	124
+125.2	125
+200	200
+1234567890.12345678	1234567890
 PREHOOK: query: SELECT DISTINCT key FROM DECIMAL_3 ORDER BY key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_3
@@ -171,34 +171,34 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_3
 #### A masked pattern was here ####
 NULL
--1234567890.123456789000000000
--4400.000000000000000000
--1255.490000000000000000
--1.122000000000000000
--1.120000000000000000
--0.333000000000000000
--0.330000000000000000
--0.300000000000000000
-0.000000000000000000
-0.010000000000000000
-0.020000000000000000
-0.100000000000000000
-0.200000000000000000
-0.300000000000000000
-0.330000000000000000
-0.333000000000000000
-1.000000000000000000
-1.120000000000000000
-1.122000000000000000
-2.000000000000000000
-3.140000000000000000
-10.000000000000000000
-20.000000000000000000
-100.000000000000000000
-124.000000000000000000
-125.200000000000000000
-200.000000000000000000
-1234567890.123456780000000000
+-1234567890.123456789
+-4400
+-1255.49
+-1.122
+-1.12
+-0.333
+-0.33
+-0.3
+0
+0.01
+0.02
+0.1
+0.2
+0.3
+0.33
+0.333
+1
+1.12
+1.122
+2
+3.14
+10
+20
+100
+124
+125.2
+200
+1234567890.12345678
 PREHOOK: query: SELECT key, sum(value) FROM DECIMAL_3 GROUP BY key ORDER BY key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_3
@@ -208,34 +208,34 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_3
 #### A masked pattern was here ####
 NULL	0
--1234567890.123456789000000000	-1234567890
--4400.000000000000000000	4400
--1255.490000000000000000	-1255
--1.122000000000000000	-11
--1.120000000000000000	-2
--0.333000000000000000	0
--0.330000000000000000	0
--0.300000000000000000	0
-0.000000000000000000	0
-0.010000000000000000	0
-0.020000000000000000	0
-0.100000000000000000	0
-0.200000000000000000	0
-0.300000000000000000	0
-0.330000000000000000	0
-0.333000000000000000	0
-1.000000000000000000	3
-1.120000000000000000	1
-1.122000000000000000	1
-2.000000000000000000	4
-3.140000000000000000	13
-10.000000000000000000	10
-20.000000000000000000	20
-100.000000000000000000	100
-124.000000000000000000	124
-125.200000000000000000	125
-200.000000000000000000	200
-1234567890.123456780000000000	1234567890
+-1234567890.123456789	-1234567890
+-4400	4400
+-1255.49	-1255
+-1.122	-11
+-1.12	-2
+-0.333	0
+-0.33	0
+-0.3	0
+0	0
+0.01	0
+0.02	0
+0.1	0
+0.2	0
+0.3	0
+0.33	0
+0.333	0
+1	3
+1.12	1
+1.122	1
+2	4
+3.14	13
+10	10
+20	20
+100	100
+124	124
+125.2	125
+200	200
+1234567890.12345678	1234567890
 PREHOOK: query: SELECT value, sum(key) FROM DECIMAL_3 GROUP BY value ORDER BY value
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_3
@@ -244,23 +244,23 @@ POSTHOOK: query: SELECT value, sum(key) FROM DECIMAL_3 GROUP BY value ORDER BY v
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_3
 #### A masked pattern was here ####
--1234567890	-1234567890.123456789000000000
--1255	-1255.490000000000000000
--11	-1.122000000000000000
--1	-2.240000000000000000
-0	0.330000000000000000
-1	5.242000000000000000
-2	4.000000000000000000
-3	9.420000000000000000
-4	3.140000000000000000
-10	10.000000000000000000
-20	20.000000000000000000
-100	100.000000000000000000
-124	124.000000000000000000
-125	125.200000000000000000
-200	200.000000000000000000
-4400	-4400.000000000000000000
-1234567890	1234567890.123456780000000000
+-1234567890	-1234567890.123456789
+-1255	-1255.49
+-11	-1.122
+-1	-2.24
+0	0.33
+1	5.242
+2	4
+3	9.42
+4	3.14
+10	10
+20	20
+100	100
+124	124
+125	125.2
+200	200
+4400	-4400
+1234567890	1234567890.12345678
 PREHOOK: query: SELECT * FROM DECIMAL_3 a JOIN DECIMAL_3 b ON (a.key = b.key) ORDER BY a.key, a.value, b.value
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_3
@@ -269,71 +269,71 @@ POSTHOOK: query: SELECT * FROM DECIMAL_3 a JOIN DECIMAL_3 b ON (a.key = b.key) O
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_3
 #### A masked pattern was here ####
--1234567890.123456789000000000	-1234567890	-1234567890.123456789000000000	-1234567890
--4400.000000000000000000	4400	-4400.000000000000000000	4400
--1255.490000000000000000	-1255	-1255.490000000000000000	-1255
--1.122000000000000000	-11	-1.122000000000000000	-11
--1.120000000000000000	-1	-1.120000000000000000	-1
--1.120000000000000000	-1	-1.120000000000000000	-1
--1.120000000000000000	-1	-1.120000000000000000	-1
--1.120000000000000000	-1	-1.120000000000000000	-1
--0.333000000000000000	0	-0.333000000000000000	0
--0.330000000000000000	0	-0.330000000000000000	0
--0.300000000000000000	0	-0.300000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.010000000000000000	0	0.010000000000000000	0
-0.020000000000000000	0	0.020000000000000000	0
-0.100000000000000000	0	0.100000000000000000	0
-0.200000000000000000	0	0.200000000000000000	0
-0.300000000000000000	0	0.300000000000000000	0
-0.330000000000000000	0	0.330000000000000000	0
-0.333000000000000000	0	0.333000000000000000	0
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.120000000000000000	1	1.120000000000000000	1
-1.122000000000000000	1	1.122000000000000000	1
-2.000000000000000000	2	2.000000000000000000	2
-2.000000000000000000	2	2.000000000000000000	2
-2.000000000000000000	2	2.000000000000000000	2
-2.000000000000000000	2	2.000000000000000000	2
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	4
-3.140000000000000000	3	3.140000000000000000	4
-3.140000000000000000	3	3.140000000000000000	4
-3.140000000000000000	4	3.140000000000000000	3
-3.140000000000000000	4	3.140000000000000000	3
-3.140000000000000000	4	3.140000000000000000	3
-3.140000000000000000	4	3.140000000000000000	4
-10.000000000000000000	10	10.000000000000000000	10
-20.000000000000000000	20	20.000000000000000000	20
-100.000000000000000000	100	100.000000000000000000	100
-124.000000000000000000	124	124.000000000000000000	124
-125.200000000000000000	125	125.200000000000000000	125
-200.000000000000000000	200	200.000000000000000000	200
-1234567890.123456780000000000	1234567890	1234567890.123456780000000000	1234567890
+-1234567890.123456789	-1234567890	-1234567890.123456789	-1234567890
+-4400	4400	-4400	4400
+-1255.49	-1255	-1255.49	-1255
+-1.122	-11	-1.122	-11
+-1.12	-1	-1.12	-1
+-1.12	-1	-1.12	-1
+-1.12	-1	-1.12	-1
+-1.12	-1	-1.12	-1
+-0.333	0	-0.333	0
+-0.33	0	-0.33	0
+-0.3	0	-0.3	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0.01	0	0.01	0
+0.02	0	0.02	0
+0.1	0	0.1	0
+0.2	0	0.2	0
+0.3	0	0.3	0
+0.33	0	0.33	0
+0.333	0	0.333	0
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1.12	1	1.12	1
+1.122	1	1.122	1
+2	2	2	2
+2	2	2	2
+2	2	2	2
+2	2	2	2
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	4
+3.14	3	3.14	4
+3.14	3	3.14	4
+3.14	4	3.14	3
+3.14	4	3.14	3
+3.14	4	3.14	3
+3.14	4	3.14	4
+10	10	10	10
+20	20	20	20
+100	100	100	100
+124	124	124	124
+125.2	125	125.2	125
+200	200	200	200
+1234567890.12345678	1234567890	1234567890.12345678	1234567890
 PREHOOK: query: SELECT * FROM DECIMAL_3 WHERE key=3.14 ORDER BY key, value
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_3
@@ -342,10 +342,10 @@ POSTHOOK: query: SELECT * FROM DECIMAL_3 WHERE key=3.14 ORDER BY key, value
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_3
 #### A masked pattern was here ####
-3.140000000000000000	3
-3.140000000000000000	3
-3.140000000000000000	3
-3.140000000000000000	4
+3.14	3
+3.14	3
+3.14	3
+3.14	4
 PREHOOK: query: SELECT * FROM DECIMAL_3 WHERE key=3.140 ORDER BY key, value
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_3
@@ -354,10 +354,10 @@ POSTHOOK: query: SELECT * FROM DECIMAL_3 WHERE key=3.140 ORDER BY key, value
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_3
 #### A masked pattern was here ####
-3.140000000000000000	3
-3.140000000000000000	3
-3.140000000000000000	3
-3.140000000000000000	4
+3.14	3
+3.14	3
+3.14	3
+3.14	4
 PREHOOK: query: DROP TABLE DECIMAL_3
 PREHOOK: type: DROPTABLE
 PREHOOK: Input: default@decimal_3
diff --git a/ql/src/test/results/clientpositive/decimal_4.q.out b/ql/src/test/results/clientpositive/decimal_4.q.out
index 8eb1de4..50662af 100644
--- a/ql/src/test/results/clientpositive/decimal_4.q.out
+++ b/ql/src/test/results/clientpositive/decimal_4.q.out
@@ -57,43 +57,43 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_4_1
 #### A masked pattern was here ####
 NULL	0
--1234567890.1234567890000000000000000	-1234567890
--4400.0000000000000000000000000	4400
--1255.4900000000000000000000000	-1255
--1.1220000000000000000000000	-11
--1.1200000000000000000000000	-1
--1.1200000000000000000000000	-1
--0.3330000000000000000000000	0
--0.3300000000000000000000000	0
--0.3000000000000000000000000	0
-0.0000000000000000000000000	0
-0.0000000000000000000000000	0
-0.0000000000000000000000000	0
-0.0100000000000000000000000	0
-0.0200000000000000000000000	0
-0.1000000000000000000000000	0
-0.2000000000000000000000000	0
-0.3000000000000000000000000	0
-0.3300000000000000000000000	0
-0.3330000000000000000000000	0
+-1234567890.123456789	-1234567890
+-4400	4400
+-1255.49	-1255
+-1.122	-11
+-1.12	-1
+-1.12	-1
+-0.333	0
+-0.33	0
+-0.3	0
+0	0
+0	0
+0	0
+0.01	0
+0.02	0
+0.1	0
+0.2	0
+0.3	0
+0.33	0
+0.333	0
 0.9999999999999999999999999	1
-1.0000000000000000000000000	1
-1.0000000000000000000000000	1
-1.1200000000000000000000000	1
-1.1220000000000000000000000	1
-2.0000000000000000000000000	2
-2.0000000000000000000000000	2
-3.1400000000000000000000000	3
-3.1400000000000000000000000	3
-3.1400000000000000000000000	3
-3.1400000000000000000000000	4
-10.0000000000000000000000000	10
-20.0000000000000000000000000	20
-100.0000000000000000000000000	100
-124.0000000000000000000000000	124
-125.2000000000000000000000000	125
-200.0000000000000000000000000	200
-1234567890.1234567800000000000000000	1234567890
+1	1
+1	1
+1.12	1
+1.122	1
+2	2
+2	2
+3.14	3
+3.14	3
+3.14	3
+3.14	4
+10	10
+20	20
+100	100
+124	124
+125.2	125
+200	200
+1234567890.12345678	1234567890
 PREHOOK: query: SELECT * FROM DECIMAL_4_2 ORDER BY key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_4_2
@@ -103,43 +103,43 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_4_2
 #### A masked pattern was here ####
 NULL	NULL
--1234567890.1234567890000000000000000	-3703703670.3703703670000000000000000
--4400.0000000000000000000000000	-13200.0000000000000000000000000
--1255.4900000000000000000000000	-3766.4700000000000000000000000
--1.1220000000000000000000000	-3.3660000000000000000000000
--1.1200000000000000000000000	-3.3600000000000000000000000
--1.1200000000000000000000000	-3.3600000000000000000000000
--0.3330000000000000000000000	-0.9990000000000000000000000
--0.3300000000000000000000000	-0.9900000000000000000000000
--0.3000000000000000000000000	-0.9000000000000000000000000
-0.0000000000000000000000000	0.0000000000000000000000000
-0.0000000000000000000000000	0.0000000000000000000000000
-0.0000000000000000000000000	0.0000000000000000000000000
-0.0100000000000000000000000	0.0300000000000000000000000
-0.0200000000000000000000000	0.0600000000000000000000000
-0.1000000000000000000000000	0.3000000000000000000000000
-0.2000000000000000000000000	0.6000000000000000000000000
-0.3000000000000000000000000	0.9000000000000000000000000
-0.3300000000000000000000000	0.9900000000000000000000000
-0.3330000000000000000000000	0.9990000000000000000000000
+-1234567890.123456789	-3703703670.370370367
+-4400	-13200
+-1255.49	-3766.47
+-1.122	-3.366
+-1.12	-3.36
+-1.12	-3.36
+-0.333	-0.999
+-0.33	-0.99
+-0.3	-0.9
+0	0
+0	0
+0	0
+0.01	0.03
+0.02	0.06
+0.1	0.3
+0.2	0.6
+0.3	0.9
+0.33	0.99
+0.333	0.999
 0.9999999999999999999999999	2.9999999999999999999999997
-1.0000000000000000000000000	3.0000000000000000000000000
-1.0000000000000000000000000	3.0000000000000000000000000
-1.1200000000000000000000000	3.3600000000000000000000000
-1.1220000000000000000000000	3.3660000000000000000000000
-2.0000000000000000000000000	6.0000000000000000000000000
-2.0000000000000000000000000	6.0000000000000000000000000
-3.1400000000000000000000000	9.4200000000000000000000000
-3.1400000000000000000000000	9.4200000000000000000000000
-3.1400000000000000000000000	9.4200000000000000000000000
-3.1400000000000000000000000	9.4200000000000000000000000
-10.0000000000000000000000000	30.0000000000000000000000000
-20.0000000000000000000000000	60.0000000000000000000000000
-100.0000000000000000000000000	300.0000000000000000000000000
-124.0000000000000000000000000	372.0000000000000000000000000
-125.2000000000000000000000000	375.6000000000000000000000000
-200.0000000000000000000000000	600.0000000000000000000000000
-1234567890.1234567800000000000000000	3703703670.3703703400000000000000000
+1	3
+1	3
+1.12	3.36
+1.122	3.366
+2	6
+2	6
+3.14	9.42
+3.14	9.42
+3.14	9.42
+3.14	9.42
+10	30
+20	60
+100	300
+124	372
+125.2	375.6
+200	600
+1234567890.12345678	3703703670.37037034
 PREHOOK: query: DROP TABLE DECIMAL_4_1
 PREHOOK: type: DROPTABLE
 PREHOOK: Input: default@decimal_4_1
diff --git a/ql/src/test/results/clientpositive/decimal_5.q.out b/ql/src/test/results/clientpositive/decimal_5.q.out
index 0c46538..0f24b8a 100644
--- a/ql/src/test/results/clientpositive/decimal_5.q.out
+++ b/ql/src/test/results/clientpositive/decimal_5.q.out
@@ -35,41 +35,41 @@ POSTHOOK: Input: default@decimal_5
 NULL
 NULL
 NULL
--4400.00000
--1255.49000
--1.12200
--1.12000
--1.12000
--0.33300
--0.33000
--0.30000
-0.00000
-0.00000
-0.00000
-0.01000
-0.02000
-0.10000
-0.20000
-0.30000
-0.33000
-0.33300
-1.00000
-1.00000
-1.00000
-1.12000
-1.12200
-2.00000
-2.00000
-3.14000
-3.14000
-3.14000
-3.14000
-10.00000
-20.00000
-100.00000
-124.00000
-125.20000
-200.00000
+-4400
+-1255.49
+-1.122
+-1.12
+-1.12
+-0.333
+-0.33
+-0.3
+0
+0
+0
+0.01
+0.02
+0.1
+0.2
+0.3
+0.33
+0.333
+1
+1
+1
+1.12
+1.122
+2
+2
+3.14
+3.14
+3.14
+3.14
+10
+20
+100
+124
+125.2
+200
 PREHOOK: query: SELECT DISTINCT key FROM DECIMAL_5 ORDER BY key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_5
@@ -79,32 +79,32 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_5
 #### A masked pattern was here ####
 NULL
--4400.00000
--1255.49000
--1.12200
--1.12000
--0.33300
--0.33000
--0.30000
-0.00000
-0.01000
-0.02000
-0.10000
-0.20000
-0.30000
-0.33000
-0.33300
-1.00000
-1.12000
-1.12200
-2.00000
-3.14000
-10.00000
-20.00000
-100.00000
-124.00000
-125.20000
-200.00000
+-4400
+-1255.49
+-1.122
+-1.12
+-0.333
+-0.33
+-0.3
+0
+0.01
+0.02
+0.1
+0.2
+0.3
+0.33
+0.333
+1
+1.12
+1.122
+2
+3.14
+10
+20
+100
+124
+125.2
+200
 PREHOOK: query: SELECT cast(key as decimal) FROM DECIMAL_5
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_5
@@ -161,40 +161,40 @@ POSTHOOK: Input: default@decimal_5
 #### A masked pattern was here ####
 NULL
 NULL
-0.000
-0.000
-100.000
-10.000
-1.000
-0.100
-0.010
-200.000
-20.000
-2.000
-0.000
-0.200
-0.020
-0.300
-0.330
+0
+0
+100
+10
+1
+0.1
+0.01
+200
+20
+2
+0
+0.2
+0.02
+0.3
+0.33
 0.333
--0.300
--0.330
+-0.3
+-0.33
 -0.333
-1.000
-2.000
-3.140
--1.120
--1.120
+1
+2
+3.14
+-1.12
+-1.12
 -1.122
-1.120
+1.12
 1.122
-124.000
-125.200
+124
+125.2
 NULL
-3.140
-3.140
-3.140
-1.000
+3.14
+3.14
+3.14
+1
 NULL
 NULL
 PREHOOK: query: DROP TABLE DECIMAL_5
diff --git a/ql/src/test/results/clientpositive/decimal_6.q.out b/ql/src/test/results/clientpositive/decimal_6.q.out
index e1ce600..0344fa9 100644
--- a/ql/src/test/results/clientpositive/decimal_6.q.out
+++ b/ql/src/test/results/clientpositive/decimal_6.q.out
@@ -78,54 +78,54 @@ NULL
 NULL
 NULL
 NULL
--1234567890.12350
--4400.00000
--4400.00000
--1255.49000
--1255.49000
--1.12200
--1.12200
--1.12000
--1.12000
--0.33300
--0.33300
--0.30000
--0.30000
-0.00000
-0.00000
-0.00000
-0.00000
-0.33300
-0.33300
-1.00000
-1.00000
-1.00000
-1.00000
-1.12000
-1.12000
-1.12200
-1.12200
-2.00000
-2.00000
-3.14000
-3.14000
-3.14000
-3.14000
-3.14000
-3.14000
-10.00000
-10.00000
-10.73430
+-1234567890.1235
+-4400
+-4400
+-1255.49
+-1255.49
+-1.122
+-1.122
+-1.12
+-1.12
+-0.333
+-0.333
+-0.3
+-0.3
+0
+0
+0
+0
+0.333
+0.333
+1
+1
+1
+1
+1.12
+1.12
+1.122
+1.122
+2
+2
+3.14
+3.14
+3.14
+3.14
+3.14
+3.14
+10
+10
+10.7343
 10.73433
-124.00000
-124.00000
-125.20000
-125.20000
+124
+124
+125.2
+125.2
 23232.23435
-23232.23440
-2389432.23750
-2389432.23750
-1234567890.12350
+23232.2344
+2389432.2375
+2389432.2375
+1234567890.1235
 PREHOOK: query: CREATE TABLE DECIMAL_6_3 AS SELECT key + 5.5 AS k, value * 11 AS v from DECIMAL_6_1 ORDER BY v
 PREHOOK: type: CREATETABLE_AS_SELECT
 PREHOOK: Input: default@decimal_6_1
diff --git a/ql/src/test/results/clientpositive/decimal_join2.q.out b/ql/src/test/results/clientpositive/decimal_join2.q.out
index a3ca231..604f99b 100644
--- a/ql/src/test/results/clientpositive/decimal_join2.q.out
+++ b/ql/src/test/results/clientpositive/decimal_join2.q.out
@@ -132,71 +132,71 @@ POSTHOOK: query: SELECT * FROM DECIMAL_3 a JOIN DECIMAL_3 b ON (a.key = b.key) O
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_3
 #### A masked pattern was here ####
--1234567890.123456789000000000	-1234567890	-1234567890.123456789000000000	-1234567890
--4400.000000000000000000	4400	-4400.000000000000000000	4400
--1255.490000000000000000	-1255	-1255.490000000000000000	-1255
--1.122000000000000000	-11	-1.122000000000000000	-11
--1.120000000000000000	-1	-1.120000000000000000	-1
--1.120000000000000000	-1	-1.120000000000000000	-1
--1.120000000000000000	-1	-1.120000000000000000	-1
--1.120000000000000000	-1	-1.120000000000000000	-1
--0.333000000000000000	0	-0.333000000000000000	0
--0.330000000000000000	0	-0.330000000000000000	0
--0.300000000000000000	0	-0.300000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.010000000000000000	0	0.010000000000000000	0
-0.020000000000000000	0	0.020000000000000000	0
-0.100000000000000000	0	0.100000000000000000	0
-0.200000000000000000	0	0.200000000000000000	0
-0.300000000000000000	0	0.300000000000000000	0
-0.330000000000000000	0	0.330000000000000000	0
-0.333000000000000000	0	0.333000000000000000	0
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.120000000000000000	1	1.120000000000000000	1
-1.122000000000000000	1	1.122000000000000000	1
-2.000000000000000000	2	2.000000000000000000	2
-2.000000000000000000	2	2.000000000000000000	2
-2.000000000000000000	2	2.000000000000000000	2
-2.000000000000000000	2	2.000000000000000000	2
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	4
-3.140000000000000000	3	3.140000000000000000	4
-3.140000000000000000	3	3.140000000000000000	4
-3.140000000000000000	4	3.140000000000000000	3
-3.140000000000000000	4	3.140000000000000000	3
-3.140000000000000000	4	3.140000000000000000	3
-3.140000000000000000	4	3.140000000000000000	4
-10.000000000000000000	10	10.000000000000000000	10
-20.000000000000000000	20	20.000000000000000000	20
-100.000000000000000000	100	100.000000000000000000	100
-124.000000000000000000	124	124.000000000000000000	124
-125.200000000000000000	125	125.200000000000000000	125
-200.000000000000000000	200	200.000000000000000000	200
-1234567890.123456780000000000	1234567890	1234567890.123456780000000000	1234567890
+-1234567890.123456789	-1234567890	-1234567890.123456789	-1234567890
+-4400	4400	-4400	4400
+-1255.49	-1255	-1255.49	-1255
+-1.122	-11	-1.122	-11
+-1.12	-1	-1.12	-1
+-1.12	-1	-1.12	-1
+-1.12	-1	-1.12	-1
+-1.12	-1	-1.12	-1
+-0.333	0	-0.333	0
+-0.33	0	-0.33	0
+-0.3	0	-0.3	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0.01	0	0.01	0
+0.02	0	0.02	0
+0.1	0	0.1	0
+0.2	0	0.2	0
+0.3	0	0.3	0
+0.33	0	0.33	0
+0.333	0	0.333	0
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1.12	1	1.12	1
+1.122	1	1.122	1
+2	2	2	2
+2	2	2	2
+2	2	2	2
+2	2	2	2
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	4
+3.14	3	3.14	4
+3.14	3	3.14	4
+3.14	4	3.14	3
+3.14	4	3.14	3
+3.14	4	3.14	3
+3.14	4	3.14	4
+10	10	10	10
+20	20	20	20
+100	100	100	100
+124	124	124	124
+125.2	125	125.2	125
+200	200	200	200
+1234567890.12345678	1234567890	1234567890.12345678	1234567890
 PREHOOK: query: EXPLAIN
 SELECT * FROM DECIMAL_3 a JOIN DECIMAL_3 b ON (a.key = b.key) ORDER BY a.key, a.value, b.key, b.value
 PREHOOK: type: QUERY
@@ -282,71 +282,71 @@ POSTHOOK: query: SELECT * FROM DECIMAL_3 a JOIN DECIMAL_3 b ON (a.key = b.key) O
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_3
 #### A masked pattern was here ####
--1234567890.123456789000000000	-1234567890	-1234567890.123456789000000000	-1234567890
--4400.000000000000000000	4400	-4400.000000000000000000	4400
--1255.490000000000000000	-1255	-1255.490000000000000000	-1255
--1.122000000000000000	-11	-1.122000000000000000	-11
--1.120000000000000000	-1	-1.120000000000000000	-1
--1.120000000000000000	-1	-1.120000000000000000	-1
--1.120000000000000000	-1	-1.120000000000000000	-1
--1.120000000000000000	-1	-1.120000000000000000	-1
--0.333000000000000000	0	-0.333000000000000000	0
--0.330000000000000000	0	-0.330000000000000000	0
--0.300000000000000000	0	-0.300000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.010000000000000000	0	0.010000000000000000	0
-0.020000000000000000	0	0.020000000000000000	0
-0.100000000000000000	0	0.100000000000000000	0
-0.200000000000000000	0	0.200000000000000000	0
-0.300000000000000000	0	0.300000000000000000	0
-0.330000000000000000	0	0.330000000000000000	0
-0.333000000000000000	0	0.333000000000000000	0
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.120000000000000000	1	1.120000000000000000	1
-1.122000000000000000	1	1.122000000000000000	1
-2.000000000000000000	2	2.000000000000000000	2
-2.000000000000000000	2	2.000000000000000000	2
-2.000000000000000000	2	2.000000000000000000	2
-2.000000000000000000	2	2.000000000000000000	2
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	4
-3.140000000000000000	3	3.140000000000000000	4
-3.140000000000000000	3	3.140000000000000000	4
-3.140000000000000000	4	3.140000000000000000	3
-3.140000000000000000	4	3.140000000000000000	3
-3.140000000000000000	4	3.140000000000000000	3
-3.140000000000000000	4	3.140000000000000000	4
-10.000000000000000000	10	10.000000000000000000	10
-20.000000000000000000	20	20.000000000000000000	20
-100.000000000000000000	100	100.000000000000000000	100
-124.000000000000000000	124	124.000000000000000000	124
-125.200000000000000000	125	125.200000000000000000	125
-200.000000000000000000	200	200.000000000000000000	200
-1234567890.123456780000000000	1234567890	1234567890.123456780000000000	1234567890
+-1234567890.123456789	-1234567890	-1234567890.123456789	-1234567890
+-4400	4400	-4400	4400
+-1255.49	-1255	-1255.49	-1255
+-1.122	-11	-1.122	-11
+-1.12	-1	-1.12	-1
+-1.12	-1	-1.12	-1
+-1.12	-1	-1.12	-1
+-1.12	-1	-1.12	-1
+-0.333	0	-0.333	0
+-0.33	0	-0.33	0
+-0.3	0	-0.3	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0.01	0	0.01	0
+0.02	0	0.02	0
+0.1	0	0.1	0
+0.2	0	0.2	0
+0.3	0	0.3	0
+0.33	0	0.33	0
+0.333	0	0.333	0
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1.12	1	1.12	1
+1.122	1	1.122	1
+2	2	2	2
+2	2	2	2
+2	2	2	2
+2	2	2	2
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	4
+3.14	3	3.14	4
+3.14	3	3.14	4
+3.14	4	3.14	3
+3.14	4	3.14	3
+3.14	4	3.14	3
+3.14	4	3.14	4
+10	10	10	10
+20	20	20	20
+100	100	100	100
+124	124	124	124
+125.2	125	125.2	125
+200	200	200	200
+1234567890.12345678	1234567890	1234567890.12345678	1234567890
 PREHOOK: query: DROP TABLE DECIMAL_3_txt
 PREHOOK: type: DROPTABLE
 PREHOOK: Input: default@decimal_3_txt
diff --git a/ql/src/test/results/clientpositive/decimal_precision.q.out b/ql/src/test/results/clientpositive/decimal_precision.q.out
index 62f0f36..8d67e2a 100644
--- a/ql/src/test/results/clientpositive/decimal_precision.q.out
+++ b/ql/src/test/results/clientpositive/decimal_precision.q.out
@@ -76,13 +76,13 @@ NULL
 NULL
 NULL
 NULL
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.1234567890
-0.1234567890
+0
+0
+0
+0
+0
+0.123456789
+0.123456789
 1.2345678901
 1.2345678901
 1.2345678901
@@ -99,14 +99,14 @@ NULL
 12345.6789012346
 123456.7890123456
 123456.7890123457
-1234567.8901234560
+1234567.890123456
 1234567.8901234568
-12345678.9012345600
+12345678.90123456
 12345678.9012345679
-123456789.0123456000
+123456789.0123456
 123456789.0123456789
-1234567890.1234560000
-1234567890.1234567890
+1234567890.123456
+1234567890.123456789
 PREHOOK: query: SELECT dec, dec + 1, dec - 1 FROM DECIMAL_PRECISION ORDER BY dec
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_precision
@@ -159,13 +159,13 @@ NULL	NULL	NULL
 NULL	NULL	NULL
 NULL	NULL	NULL
 NULL	NULL	NULL
-0.0000000000	1.0000000000	-1.0000000000
-0.0000000000	1.0000000000	-1.0000000000
-0.0000000000	1.0000000000	-1.0000000000
-0.0000000000	1.0000000000	-1.0000000000
-0.0000000000	1.0000000000	-1.0000000000
-0.1234567890	1.1234567890	-0.8765432110
-0.1234567890	1.1234567890	-0.8765432110
+0	1	-1
+0	1	-1
+0	1	-1
+0	1	-1
+0	1	-1
+0.123456789	1.123456789	-0.876543211
+0.123456789	1.123456789	-0.876543211
 1.2345678901	2.2345678901	0.2345678901
 1.2345678901	2.2345678901	0.2345678901
 1.2345678901	2.2345678901	0.2345678901
@@ -182,14 +182,14 @@ NULL	NULL	NULL
 12345.6789012346	12346.6789012346	12344.6789012346
 123456.7890123456	123457.7890123456	123455.7890123456
 123456.7890123457	123457.7890123457	123455.7890123457
-1234567.8901234560	1234568.8901234560	1234566.8901234560
+1234567.890123456	1234568.890123456	1234566.890123456
 1234567.8901234568	1234568.8901234568	1234566.8901234568
-12345678.9012345600	12345679.9012345600	12345677.9012345600
+12345678.90123456	12345679.90123456	12345677.90123456
 12345678.9012345679	12345679.9012345679	12345677.9012345679
-123456789.0123456000	123456790.0123456000	123456788.0123456000
+123456789.0123456	123456790.0123456	123456788.0123456
 123456789.0123456789	123456790.0123456789	123456788.0123456789
-1234567890.1234560000	1234567891.1234560000	1234567889.1234560000
-1234567890.1234567890	1234567891.1234567890	1234567889.1234567890
+1234567890.123456	1234567891.123456	1234567889.123456
+1234567890.123456789	1234567891.123456789	1234567889.123456789
 PREHOOK: query: SELECT dec, dec * 2, dec / 3  FROM DECIMAL_PRECISION ORDER BY dec
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_precision
@@ -242,37 +242,37 @@ NULL	NULL	NULL
 NULL	NULL	NULL
 NULL	NULL	NULL
 NULL	NULL	NULL
-0.0000000000	0.0000000000	0.000000000000
-0.0000000000	0.0000000000	0.000000000000
-0.0000000000	0.0000000000	0.000000000000
-0.0000000000	0.0000000000	0.000000000000
-0.0000000000	0.0000000000	0.000000000000
-0.1234567890	0.2469135780	0.041152263000
-0.1234567890	0.2469135780	0.041152263000
+0	0	0
+0	0	0
+0	0	0
+0	0	0
+0	0	0
+0.123456789	0.246913578	0.041152263
+0.123456789	0.246913578	0.041152263
 1.2345678901	2.4691357802	0.411522630033
 1.2345678901	2.4691357802	0.411522630033
 1.2345678901	2.4691357802	0.411522630033
-12.3456789012	24.6913578024	4.115226300400
-12.3456789012	24.6913578024	4.115226300400
-12.3456789012	24.6913578024	4.115226300400
-123.4567890123	246.9135780246	41.152263004100
-123.4567890123	246.9135780246	41.152263004100
-123.4567890123	246.9135780246	41.152263004100
-1234.5678901235	2469.1357802470	411.522630041167
-1234.5678901235	2469.1357802470	411.522630041167
-1234.5678901235	2469.1357802470	411.522630041167
+12.3456789012	24.6913578024	4.1152263004
+12.3456789012	24.6913578024	4.1152263004
+12.3456789012	24.6913578024	4.1152263004
+123.4567890123	246.9135780246	41.1522630041
+123.4567890123	246.9135780246	41.1522630041
+123.4567890123	246.9135780246	41.1522630041
+1234.5678901235	2469.135780247	411.522630041167
+1234.5678901235	2469.135780247	411.522630041167
+1234.5678901235	2469.135780247	411.522630041167
 12345.6789012346	24691.3578024692	4115.226300411533
 12345.6789012346	24691.3578024692	4115.226300411533
-123456.7890123456	246913.5780246912	41152.263004115200
+123456.7890123456	246913.5780246912	41152.2630041152
 123456.7890123457	246913.5780246914	41152.263004115233
-1234567.8901234560	2469135.7802469120	411522.630041152000
+1234567.890123456	2469135.780246912	411522.630041152
 1234567.8901234568	2469135.7802469136	411522.630041152267
-12345678.9012345600	24691357.8024691200	4115226.300411520000
+12345678.90123456	24691357.80246912	4115226.30041152
 12345678.9012345679	24691357.8024691358	4115226.300411522633
-123456789.0123456000	246913578.0246912000	41152263.004115200000
-123456789.0123456789	246913578.0246913578	41152263.004115226300
-1234567890.1234560000	2469135780.2469120000	411522630.041152000000
-1234567890.1234567890	2469135780.2469135780	411522630.041152263000
+123456789.0123456	246913578.0246912	41152263.0041152
+123456789.0123456789	246913578.0246913578	41152263.0041152263
+1234567890.123456	2469135780.246912	411522630.041152
+1234567890.123456789	2469135780.246913578	411522630.041152263
 PREHOOK: query: SELECT dec, dec / 9 FROM DECIMAL_PRECISION ORDER BY dec
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_precision
@@ -325,13 +325,13 @@ NULL	NULL
 NULL	NULL
 NULL	NULL
 NULL	NULL
-0.0000000000	0.000000000000
-0.0000000000	0.000000000000
-0.0000000000	0.000000000000
-0.0000000000	0.000000000000
-0.0000000000	0.000000000000
-0.1234567890	0.013717421000
-0.1234567890	0.013717421000
+0	0
+0	0
+0	0
+0	0
+0	0
+0.123456789	0.013717421
+0.123456789	0.013717421
 1.2345678901	0.137174210011
 1.2345678901	0.137174210011
 1.2345678901	0.137174210011
@@ -348,14 +348,14 @@ NULL	NULL
 12345.6789012346	1371.742100137178
 123456.7890123456	13717.421001371733
 123456.7890123457	13717.421001371744
-1234567.8901234560	137174.210013717333
+1234567.890123456	137174.210013717333
 1234567.8901234568	137174.210013717422
-12345678.9012345600	1371742.100137173333
+12345678.90123456	1371742.100137173333
 12345678.9012345679	1371742.100137174211
-123456789.0123456000	13717421.001371733333
-123456789.0123456789	13717421.001371742100
-1234567890.1234560000	137174210.013717333333
-1234567890.1234567890	137174210.013717421000
+123456789.0123456	13717421.001371733333
+123456789.0123456789	13717421.0013717421
+1234567890.123456	137174210.013717333333
+1234567890.123456789	137174210.013717421
 PREHOOK: query: SELECT dec, dec / 27 FROM DECIMAL_PRECISION ORDER BY dec
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_precision
@@ -408,13 +408,13 @@ NULL	NULL
 NULL	NULL
 NULL	NULL
 NULL	NULL
-0.0000000000	0.0000000000000
-0.0000000000	0.0000000000000
-0.0000000000	0.0000000000000
-0.0000000000	0.0000000000000
-0.0000000000	0.0000000000000
-0.1234567890	0.0045724736667
-0.1234567890	0.0045724736667
+0	0
+0	0
+0	0
+0	0
+0	0
+0.123456789	0.0045724736667
+0.123456789	0.0045724736667
 1.2345678901	0.0457247366704
 1.2345678901	0.0457247366704
 1.2345678901	0.0457247366704
@@ -431,14 +431,14 @@ NULL	NULL
 12345.6789012346	457.2473667123926
 123456.7890123456	4572.4736671239111
 123456.7890123457	4572.4736671239148
-1234567.8901234560	45724.7366712391111
+1234567.890123456	45724.7366712391111
 1234567.8901234568	45724.7366712391407
-12345678.9012345600	457247.3667123911111
+12345678.90123456	457247.3667123911111
 12345678.9012345679	457247.3667123914037
-123456789.0123456000	4572473.6671239111111
+123456789.0123456	4572473.6671239111111
 123456789.0123456789	4572473.6671239140333
-1234567890.1234560000	45724736.6712391111111
-1234567890.1234567890	45724736.6712391403333
+1234567890.123456	45724736.6712391111111
+1234567890.123456789	45724736.6712391403333
 PREHOOK: query: SELECT dec, dec * dec FROM DECIMAL_PRECISION ORDER BY dec
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_precision
@@ -491,13 +491,13 @@ NULL	NULL
 NULL	NULL
 NULL	NULL
 NULL	NULL
-0.0000000000	0.00000000000000000000
-0.0000000000	0.00000000000000000000
-0.0000000000	0.00000000000000000000
-0.0000000000	0.00000000000000000000
-0.0000000000	0.00000000000000000000
-0.1234567890	0.01524157875019052100
-0.1234567890	0.01524157875019052100
+0	0
+0	0
+0	0
+0	0
+0	0
+0.123456789	0.015241578750190521
+0.123456789	0.015241578750190521
 1.2345678901	1.52415787526596567801
 1.2345678901	1.52415787526596567801
 1.2345678901	1.52415787526596567801
@@ -514,14 +514,14 @@ NULL	NULL
 12345.6789012346	152415787.53238916034140423716
 123456.7890123456	15241578753.23881726870921383936
 123456.7890123457	15241578753.23884196006701630849
-1234567.8901234560	1524157875323.88172687092138393600
+1234567.890123456	1524157875323.881726870921383936
 1234567.8901234568	1524157875323.88370217954558146624
-12345678.9012345600	152415787532388.17268709213839360000
+12345678.90123456	152415787532388.1726870921383936
 12345678.9012345679	152415787532388.36774881877789971041
-123456789.0123456000	15241578753238817.26870921383936000000
+123456789.0123456	15241578753238817.26870921383936
 123456789.0123456789	15241578753238836.75019051998750190521
-1234567890.1234560000	NULL
-1234567890.1234567890	NULL
+1234567890.123456	NULL
+1234567890.123456789	NULL
 PREHOOK: query: EXPLAIN SELECT avg(dec), sum(dec) FROM DECIMAL_PRECISION
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT avg(dec), sum(dec) FROM DECIMAL_PRECISION
@@ -613,7 +613,7 @@ POSTHOOK: query: SELECT MIN(cast('12345678901234567890.12345678' as decimal(38,1
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_precision
 #### A masked pattern was here ####
-12345678901234567890.123456780000000000
+12345678901234567890.12345678
 PREHOOK: query: SELECT COUNT(cast('12345678901234567890.12345678' as decimal(38,18))) FROM DECIMAL_PRECISION
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_precision
diff --git a/ql/src/test/results/clientpositive/decimal_precision2.q.out b/ql/src/test/results/clientpositive/decimal_precision2.q.out
index 344f0f6..7321889 100644
--- a/ql/src/test/results/clientpositive/decimal_precision2.q.out
+++ b/ql/src/test/results/clientpositive/decimal_precision2.q.out
@@ -172,4 +172,4 @@ POSTHOOK: query: select 0.09765625BD * 0.09765625BD * 0.0125BD * 578992BD
 POSTHOOK: type: QUERY
 POSTHOOK: Input: _dummy_database@_dummy_table
 #### A masked pattern was here ####
-69.02122497558593750000
+69.0212249755859375
diff --git a/ql/src/test/results/clientpositive/decimal_trailing.q.out b/ql/src/test/results/clientpositive/decimal_trailing.q.out
index 1b70737..6cfe282 100644
--- a/ql/src/test/results/clientpositive/decimal_trailing.q.out
+++ b/ql/src/test/results/clientpositive/decimal_trailing.q.out
@@ -40,16 +40,16 @@ POSTHOOK: query: SELECT * FROM DECIMAL_TRAILING ORDER BY id
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_trailing
 #### A masked pattern was here ####
-0	0.0000	0.00000000
-1	0.0000	0.00000000
+0	0	0
+1	0	0
 2	NULL	NULL
-3	1.0000	1.00000000
-4	10.0000	10.00000000
-5	100.0000	100.00000000
-6	1000.0000	1000.00000000
-7	10000.0000	10000.00000000
-8	100000.0000	100000.00000000
-9	NULL	1000000.00000000
+3	1	1
+4	10	10
+5	100	100
+6	1000	1000
+7	10000	10000
+8	100000	100000
+9	NULL	1000000
 10	NULL	NULL
 11	NULL	NULL
 12	NULL	NULL
@@ -58,18 +58,18 @@ POSTHOOK: Input: default@decimal_trailing
 15	NULL	NULL
 16	NULL	NULL
 17	NULL	NULL
-18	1.0000	1.00000000
-19	10.0000	10.00000000
-20	100.0000	100.00000000
-21	1000.0000	1000.00000000
-22	100000.0000	10000.00000000
-23	0.0000	0.00000000
-24	0.0000	0.00000000
-25	0.0000	0.00000000
-26	0.0000	0.00000000
-27	0.0000	0.00000000
-28	12313.2000	134134.31252500
-29	99999.9990	134134.31242553
+18	1	1
+19	10	10
+20	100	100
+21	1000	1000
+22	100000	10000
+23	0	0
+24	0	0
+25	0	0
+26	0	0
+27	0	0
+28	12313.2	134134.312525
+29	99999.999	134134.31242553
 PREHOOK: query: DROP TABLE DECIMAL_TRAILING
 PREHOOK: type: DROPTABLE
 PREHOOK: Input: default@decimal_trailing
diff --git a/ql/src/test/results/clientpositive/decimal_udf.q.out b/ql/src/test/results/clientpositive/decimal_udf.q.out
index 9aeb079..1b7e9f1 100644
--- a/ql/src/test/results/clientpositive/decimal_udf.q.out
+++ b/ql/src/test/results/clientpositive/decimal_udf.q.out
@@ -53,44 +53,44 @@ POSTHOOK: query: SELECT key + key FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
--8800.0000000000
+-8800
 NULL
-0.0000000000
-0.0000000000
-200.0000000000
-20.0000000000
-2.0000000000
-0.2000000000
-0.0200000000
-400.0000000000
-40.0000000000
-4.0000000000
-0.0000000000
-0.4000000000
-0.0400000000
-0.6000000000
-0.6600000000
-0.6660000000
--0.6000000000
--0.6600000000
--0.6660000000
-2.0000000000
-4.0000000000
-6.2800000000
--2.2400000000
--2.2400000000
--2.2440000000
-2.2400000000
-2.2440000000
-248.0000000000
-250.4000000000
--2510.9800000000
-6.2800000000
-6.2800000000
-6.2800000000
-2.0000000000
--2469135780.2469135780
-2469135780.2469135600
+0
+0
+200
+20
+2
+0.2
+0.02
+400
+40
+4
+0
+0.4
+0.04
+0.6
+0.66
+0.666
+-0.6
+-0.66
+-0.666
+2
+4
+6.28
+-2.24
+-2.24
+-2.244
+2.24
+2.244
+248
+250.4
+-2510.98
+6.28
+6.28
+6.28
+2
+-2469135780.246913578
+2469135780.24691356
 PREHOOK: query: EXPLAIN SELECT key + value FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT key + value FROM DECIMAL_UDF
@@ -120,44 +120,44 @@ POSTHOOK: query: SELECT key + value FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
-0.0000000000
+0
 NULL
-0.0000000000
-0.0000000000
-200.0000000000
-20.0000000000
-2.0000000000
-0.1000000000
-0.0100000000
-400.0000000000
-40.0000000000
-4.0000000000
-0.0000000000
-0.2000000000
-0.0200000000
-0.3000000000
-0.3300000000
-0.3330000000
--0.3000000000
--0.3300000000
--0.3330000000
-2.0000000000
-4.0000000000
-6.1400000000
--2.1200000000
--2.1200000000
--12.1220000000
-2.1200000000
-2.1220000000
-248.0000000000
-250.2000000000
--2510.4900000000
-6.1400000000
-6.1400000000
-7.1400000000
-2.0000000000
--2469135780.1234567890
-2469135780.1234567800
+0
+0
+200
+20
+2
+0.1
+0.01
+400
+40
+4
+0
+0.2
+0.02
+0.3
+0.33
+0.333
+-0.3
+-0.33
+-0.333
+2
+4
+6.14
+-2.12
+-2.12
+-12.122
+2.12
+2.122
+248
+250.2
+-2510.49
+6.14
+6.14
+7.14
+2
+-2469135780.123456789
+2469135780.12345678
 PREHOOK: query: EXPLAIN SELECT key + (value/2) FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT key + (value/2) FROM DECIMAL_UDF
@@ -321,44 +321,44 @@ POSTHOOK: query: SELECT key - key FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
-0.0000000000
+0
 NULL
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
 PREHOOK: query: EXPLAIN SELECT key - value FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT key - value FROM DECIMAL_UDF
@@ -388,44 +388,44 @@ POSTHOOK: query: SELECT key - value FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
--8800.0000000000
+-8800
 NULL
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.1000000000
-0.0100000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.2000000000
-0.0200000000
-0.3000000000
-0.3300000000
-0.3330000000
--0.3000000000
--0.3300000000
--0.3330000000
-0.0000000000
-0.0000000000
-0.1400000000
--0.1200000000
--0.1200000000
-9.8780000000
-0.1200000000
-0.1220000000
-0.0000000000
-0.2000000000
--0.4900000000
-0.1400000000
-0.1400000000
--0.8600000000
-0.0000000000
--0.1234567890
-0.1234567800
+0
+0
+0
+0
+0
+0.1
+0.01
+0
+0
+0
+0
+0.2
+0.02
+0.3
+0.33
+0.333
+-0.3
+-0.33
+-0.333
+0
+0
+0.14
+-0.12
+-0.12
+9.878
+0.12
+0.122
+0
+0.2
+-0.49
+0.14
+0.14
+-0.86
+0
+-0.123456789
+0.12345678
 PREHOOK: query: EXPLAIN SELECT key - (value/2) FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT key - (value/2) FROM DECIMAL_UDF
@@ -589,42 +589,42 @@ POSTHOOK: query: SELECT key * key FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
-19360000.00000000000000000000
+19360000
 NULL
-0.00000000000000000000
-0.00000000000000000000
-10000.00000000000000000000
-100.00000000000000000000
-1.00000000000000000000
-0.01000000000000000000
-0.00010000000000000000
-40000.00000000000000000000
-400.00000000000000000000
-4.00000000000000000000
-0.00000000000000000000
-0.04000000000000000000
-0.00040000000000000000
-0.09000000000000000000
-0.10890000000000000000
-0.11088900000000000000
-0.09000000000000000000
-0.10890000000000000000
-0.11088900000000000000
-1.00000000000000000000
-4.00000000000000000000
-9.85960000000000000000
-1.25440000000000000000
-1.25440000000000000000
-1.25888400000000000000
-1.25440000000000000000
-1.25888400000000000000
-15376.00000000000000000000
-15675.04000000000000000000
-1576255.14010000000000000000
-9.85960000000000000000
-9.85960000000000000000
-9.85960000000000000000
-1.00000000000000000000
+0
+0
+10000
+100
+1
+0.01
+0.0001
+40000
+400
+4
+0
+0.04
+0.0004
+0.09
+0.1089
+0.110889
+0.09
+0.1089
+0.110889
+1
+4
+9.8596
+1.2544
+1.2544
+1.258884
+1.2544
+1.258884
+15376
+15675.04
+1576255.1401
+9.8596
+9.8596
+9.8596
+1
 NULL
 NULL
 PREHOOK: query: EXPLAIN SELECT key, value FROM DECIMAL_UDF where key * value > 0
@@ -659,29 +659,29 @@ POSTHOOK: query: SELECT key, value FROM DECIMAL_UDF where key * value > 0
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
-100.0000000000	100
-10.0000000000	10
-1.0000000000	1
-200.0000000000	200
-20.0000000000	20
-2.0000000000	2
-1.0000000000	1
-2.0000000000	2
-3.1400000000	3
--1.1200000000	-1
--1.1200000000	-1
--1.1220000000	-11
-1.1200000000	1
-1.1220000000	1
-124.0000000000	124
-125.2000000000	125
--1255.4900000000	-1255
-3.1400000000	3
-3.1400000000	3
-3.1400000000	4
-1.0000000000	1
--1234567890.1234567890	-1234567890
-1234567890.1234567800	1234567890
+100	100
+10	10
+1	1
+200	200
+20	20
+2	2
+1	1
+2	2
+3.14	3
+-1.12	-1
+-1.12	-1
+-1.122	-11
+1.12	1
+1.122	1
+124	124
+125.2	125
+-1255.49	-1255
+3.14	3
+3.14	3
+3.14	4
+1	1
+-1234567890.123456789	-1234567890
+1234567890.12345678	1234567890
 PREHOOK: query: EXPLAIN SELECT key * value FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT key * value FROM DECIMAL_UDF
@@ -711,44 +711,44 @@ POSTHOOK: query: SELECT key * value FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
--19360000.0000000000
+-19360000
 NULL
-0.0000000000
-0.0000000000
-10000.0000000000
-100.0000000000
-1.0000000000
-0.0000000000
-0.0000000000
-40000.0000000000
-400.0000000000
-4.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-1.0000000000
-4.0000000000
-9.4200000000
-1.1200000000
-1.1200000000
-12.3420000000
-1.1200000000
-1.1220000000
-15376.0000000000
-15650.0000000000
-1575639.9500000000
-9.4200000000
-9.4200000000
-12.5600000000
-1.0000000000
-1524157875171467887.5019052100
-1524157875171467876.3907942000
+0
+0
+10000
+100
+1
+0
+0
+40000
+400
+4
+0
+0
+0
+0
+0
+0
+0
+0
+0
+1
+4
+9.42
+1.12
+1.12
+12.342
+1.12
+1.122
+15376
+15650
+1575639.95
+9.42
+9.42
+12.56
+1
+1524157875171467887.50190521
+1524157875171467876.3907942
 PREHOOK: query: EXPLAIN SELECT key * (value/2) FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT key * (value/2) FROM DECIMAL_UDF
@@ -981,40 +981,40 @@ POSTHOOK: query: SELECT key / key FROM DECIMAL_UDF WHERE key is not null and key
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
 PREHOOK: query: EXPLAIN SELECT key / value FROM DECIMAL_UDF WHERE value is not null and value <> 0
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT key / value FROM DECIMAL_UDF WHERE value is not null and value <> 0
@@ -1047,30 +1047,30 @@ POSTHOOK: query: SELECT key / value FROM DECIMAL_UDF WHERE value is not null and
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
--1.000000000000000000000
-1.000000000000000000000
-1.000000000000000000000
-1.000000000000000000000
-1.000000000000000000000
-1.000000000000000000000
-1.000000000000000000000
-1.000000000000000000000
-1.000000000000000000000
+-1
+1
+1
+1
+1
+1
+1
+1
+1
 1.046666666666666666667
-1.120000000000000000000
-1.120000000000000000000
-0.102000000000000000000
-1.120000000000000000000
-1.122000000000000000000
-1.000000000000000000000
-1.001600000000000000000
+1.12
+1.12
+0.102
+1.12
+1.122
+1
+1.0016
 1.000390438247011952191
 1.046666666666666666667
 1.046666666666666666667
-0.785000000000000000000
-1.000000000000000000000
-1.000000000100000000000
-1.000000000099999992710
+0.785
+1
+1.0000000001
+1.00000000009999999271
 PREHOOK: query: EXPLAIN SELECT key / (value/2) FROM DECIMAL_UDF  WHERE value is not null and value <> 0
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT key / (value/2) FROM DECIMAL_UDF  WHERE value is not null and value <> 0
@@ -1223,44 +1223,44 @@ POSTHOOK: query: SELECT abs(key) FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
-4400.0000000000
+4400
 NULL
-0.0000000000
-0.0000000000
-100.0000000000
-10.0000000000
-1.0000000000
-0.1000000000
-0.0100000000
-200.0000000000
-20.0000000000
-2.0000000000
-0.0000000000
-0.2000000000
-0.0200000000
-0.3000000000
-0.3300000000
-0.3330000000
-0.3000000000
-0.3300000000
-0.3330000000
-1.0000000000
-2.0000000000
-3.1400000000
-1.1200000000
-1.1200000000
-1.1220000000
-1.1200000000
-1.1220000000
-124.0000000000
-125.2000000000
-1255.4900000000
-3.1400000000
-3.1400000000
-3.1400000000
-1.0000000000
-1234567890.1234567890
-1234567890.1234567800
+0
+0
+100
+10
+1
+0.1
+0.01
+200
+20
+2
+0
+0.2
+0.02
+0.3
+0.33
+0.333
+0.3
+0.33
+0.333
+1
+2
+3.14
+1.12
+1.12
+1.122
+1.12
+1.122
+124
+125.2
+1255.49
+3.14
+3.14
+3.14
+1
+1234567890.123456789
+1234567890.12345678
 PREHOOK: query: EXPLAIN SELECT value, sum(key) / count(key), avg(key), sum(key) FROM DECIMAL_UDF GROUP BY value ORDER BY value
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT value, sum(key) / count(key), avg(key), sum(key) FROM DECIMAL_UDF GROUP BY value ORDER BY value
@@ -1347,23 +1347,23 @@ POSTHOOK: query: SELECT value, sum(key) / count(key), avg(key), sum(key) FROM DE
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
--1234567890	-1234567890.12345678900000000000000	-1234567890.12345678900000	-1234567890.1234567890
--1255	-1255.49000000000000000000000	-1255.49000000000000	-1255.4900000000
--11	-1.12200000000000000000000	-1.12200000000000	-1.1220000000
--1	-1.12000000000000000000000	-1.12000000000000	-2.2400000000
-0	0.02538461538461538461538	0.02538461538462	0.3300000000
-1	1.04840000000000000000000	1.04840000000000	5.2420000000
-2	2.00000000000000000000000	2.00000000000000	4.0000000000
-3	3.14000000000000000000000	3.14000000000000	9.4200000000
-4	3.14000000000000000000000	3.14000000000000	3.1400000000
-10	10.00000000000000000000000	10.00000000000000	10.0000000000
-20	20.00000000000000000000000	20.00000000000000	20.0000000000
-100	100.00000000000000000000000	100.00000000000000	100.0000000000
-124	124.00000000000000000000000	124.00000000000000	124.0000000000
-125	125.20000000000000000000000	125.20000000000000	125.2000000000
-200	200.00000000000000000000000	200.00000000000000	200.0000000000
-4400	-4400.00000000000000000000000	-4400.00000000000000	-4400.0000000000
-1234567890	1234567890.12345678000000000000000	1234567890.12345678000000	1234567890.1234567800
+-1234567890	-1234567890.123456789	-1234567890.123456789	-1234567890.123456789
+-1255	-1255.49	-1255.49	-1255.49
+-11	-1.122	-1.122	-1.122
+-1	-1.12	-1.12	-2.24
+0	0.02538461538461538461538	0.02538461538462	0.33
+1	1.0484	1.0484	5.242
+2	2	2	4
+3	3.14	3.14	9.42
+4	3.14	3.14	3.14
+10	10	10	10
+20	20	20	20
+100	100	100	100
+124	124	124	124
+125	125.2	125.2	125.2
+200	200	200	200
+4400	-4400	-4400	-4400
+1234567890	1234567890.12345678	1234567890.12345678	1234567890.12345678
 PREHOOK: query: EXPLAIN SELECT -key FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT -key FROM DECIMAL_UDF
@@ -1393,44 +1393,44 @@ POSTHOOK: query: SELECT -key FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
-4400.0000000000
+4400
 NULL
-0.0000000000
-0.0000000000
--100.0000000000
--10.0000000000
--1.0000000000
--0.1000000000
--0.0100000000
--200.0000000000
--20.0000000000
--2.0000000000
-0.0000000000
--0.2000000000
--0.0200000000
--0.3000000000
--0.3300000000
--0.3330000000
-0.3000000000
-0.3300000000
-0.3330000000
--1.0000000000
--2.0000000000
--3.1400000000
-1.1200000000
-1.1200000000
-1.1220000000
--1.1200000000
--1.1220000000
--124.0000000000
--125.2000000000
-1255.4900000000
--3.1400000000
--3.1400000000
--3.1400000000
--1.0000000000
-1234567890.1234567890
--1234567890.1234567800
+0
+0
+-100
+-10
+-1
+-0.1
+-0.01
+-200
+-20
+-2
+0
+-0.2
+-0.02
+-0.3
+-0.33
+-0.333
+0.3
+0.33
+0.333
+-1
+-2
+-3.14
+1.12
+1.12
+1.122
+-1.12
+-1.122
+-124
+-125.2
+1255.49
+-3.14
+-3.14
+-3.14
+-1
+1234567890.123456789
+-1234567890.12345678
 PREHOOK: query: EXPLAIN SELECT +key FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT +key FROM DECIMAL_UDF
@@ -1460,44 +1460,44 @@ POSTHOOK: query: SELECT +key FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
--4400.0000000000
+-4400
 NULL
-0.0000000000
-0.0000000000
-100.0000000000
-10.0000000000
-1.0000000000
-0.1000000000
-0.0100000000
-200.0000000000
-20.0000000000
-2.0000000000
-0.0000000000
-0.2000000000
-0.0200000000
-0.3000000000
-0.3300000000
-0.3330000000
--0.3000000000
--0.3300000000
--0.3330000000
-1.0000000000
-2.0000000000
-3.1400000000
--1.1200000000
--1.1200000000
--1.1220000000
-1.1200000000
-1.1220000000
-124.0000000000
-125.2000000000
--1255.4900000000
-3.1400000000
-3.1400000000
-3.1400000000
-1.0000000000
--1234567890.1234567890
-1234567890.1234567800
+0
+0
+100
+10
+1
+0.1
+0.01
+200
+20
+2
+0
+0.2
+0.02
+0.3
+0.33
+0.333
+-0.3
+-0.33
+-0.333
+1
+2
+3.14
+-1.12
+-1.12
+-1.122
+1.12
+1.122
+124
+125.2
+-1255.49
+3.14
+3.14
+3.14
+1
+-1234567890.123456789
+1234567890.12345678
 PREHOOK: query: EXPlAIN SELECT CEIL(key) FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPlAIN SELECT CEIL(key) FROM DECIMAL_UDF
@@ -1661,42 +1661,42 @@ POSTHOOK: query: SELECT ROUND(key, 2) FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
--4400.00
+-4400
 NULL
-0.00
-0.00
-100.00
-10.00
-1.00
-0.10
+0
+0
+100
+10
+1
+0.1
 0.01
-200.00
-20.00
-2.00
-0.00
-0.20
+200
+20
+2
+0
+0.2
 0.02
-0.30
+0.3
 0.33
 0.33
--0.30
+-0.3
 -0.33
 -0.33
-1.00
-2.00
+1
+2
 3.14
 -1.12
 -1.12
 -1.12
 1.12
 1.12
-124.00
-125.20
+124
+125.2
 -1255.49
 3.14
 3.14
 3.14
-1.00
+1
 -1234567890.12
 1234567890.12
 PREHOOK: query: EXPLAIN SELECT POWER(key, 2) FROM DECIMAL_UDF
@@ -1795,44 +1795,44 @@ POSTHOOK: query: SELECT (key + 1) % (key / 2) FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
--2199.000000000000
+-2199
 NULL
 NULL
 NULL
-1.000000000000
-1.000000000000
-0.000000000000
-0.000000000000
-0.000000000000
-1.000000000000
-1.000000000000
-0.000000000000
+1
+1
+0
+0
+0
+1
+1
+0
 NULL
-0.000000000000
-0.000000000000
-0.100000000000
-0.010000000000
-0.001000000000
-0.100000000000
-0.010000000000
-0.001000000000
-0.000000000000
-0.000000000000
-1.000000000000
--0.120000000000
--0.120000000000
--0.122000000000
-0.440000000000
-0.439000000000
-1.000000000000
-1.000000000000
--626.745000000000
-1.000000000000
-1.000000000000
-1.000000000000
-0.000000000000
--617283944.061728394500
-1.000000000000
+0
+0
+0.1
+0.01
+0.001
+0.1
+0.01
+0.001
+0
+0
+1
+-0.12
+-0.12
+-0.122
+0.44
+0.439
+1
+1
+-626.745
+1
+1
+1
+0
+-617283944.0617283945
+1
 PREHOOK: query: EXPLAIN SELECT value, stddev(key), variance(key) FROM DECIMAL_UDF GROUP BY value
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT value, stddev(key), variance(key) FROM DECIMAL_UDF GROUP BY value
@@ -2100,7 +2100,7 @@ POSTHOOK: query: SELECT MIN(key) FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
--1234567890.1234567890
+-1234567890.123456789
 PREHOOK: query: EXPLAIN SELECT MAX(key) FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT MAX(key) FROM DECIMAL_UDF
@@ -2157,7 +2157,7 @@ POSTHOOK: query: SELECT MAX(key) FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
-1234567890.1234567800
+1234567890.12345678
 PREHOOK: query: EXPLAIN SELECT COUNT(key) FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT COUNT(key) FROM DECIMAL_UDF
diff --git a/ql/src/test/results/clientpositive/insert_nonacid_from_acid.q.out b/ql/src/test/results/clientpositive/insert_nonacid_from_acid.q.out
index e6d2ac3..418d59b 100644
--- a/ql/src/test/results/clientpositive/insert_nonacid_from_acid.q.out
+++ b/ql/src/test/results/clientpositive/insert_nonacid_from_acid.q.out
@@ -23,11 +23,11 @@ POSTHOOK: query: select * from sample_06 where gpa = 3.00
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@sample_06
 #### A masked pattern was here ####
-eee	32	3.00
-ccc	32	3.00
-bbb	32	3.00
-ddd	35	3.00
-aaa	35	3.00
+eee	32	3
+ccc	32	3
+bbb	32	3
+ddd	35	3
+aaa	35	3
 PREHOOK: query: create table tab1 (name varchar(50), age int, gpa decimal(3, 2))
 PREHOOK: type: CREATETABLE
 PREHOOK: Output: database:default
@@ -55,8 +55,8 @@ POSTHOOK: query: select * from tab1
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@tab1
 #### A masked pattern was here ####
-eee	32	3.00
-ccc	32	3.00
-bbb	32	3.00
-ddd	35	3.00
-aaa	35	3.00
+eee	32	3
+ccc	32	3
+bbb	32	3
+ddd	35	3
+aaa	35	3
diff --git a/ql/src/test/results/clientpositive/metadata_only_queries.q.out b/ql/src/test/results/clientpositive/metadata_only_queries.q.out
index aae6938..90c76ed 100644
--- a/ql/src/test/results/clientpositive/metadata_only_queries.q.out
+++ b/ql/src/test/results/clientpositive/metadata_only_queries.q.out
@@ -338,7 +338,7 @@ POSTHOOK: query: select count(*), sum(1), sum(0.2), count(1), count(s), count(bo
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@stats_tbl
 #### A masked pattern was here ####
-9999	9999.000000000000000000	1999.800000000000000000	9999	9999	9999	9999	9999
+9999	9999	1999.8	9999	9999	9999	9999	9999
 PREHOOK: query: explain
 select min(i), max(i), min(b), max(b), min(f), max(f), min(d), max(d) from stats_tbl
 PREHOOK: type: QUERY
@@ -388,7 +388,7 @@ POSTHOOK: query: select count(*), sum(1), sum(0.2), count(1), count(s), count(bo
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@stats_tbl_part
 #### A masked pattern was here ####
-9489	9489.000000000000000000	1897.800000000000000000	9489	9489	9489	9489	9489
+9489	9489	1897.8	9489	9489	9489	9489	9489
 PREHOOK: query: explain
 select min(i), max(i), min(b), max(b), min(f), max(f), min(d), max(d) from stats_tbl_part
 PREHOOK: type: QUERY
diff --git a/ql/src/test/results/clientpositive/metadata_only_queries_with_filters.q.out b/ql/src/test/results/clientpositive/metadata_only_queries_with_filters.q.out
index a754cb8..5be958f 100644
--- a/ql/src/test/results/clientpositive/metadata_only_queries_with_filters.q.out
+++ b/ql/src/test/results/clientpositive/metadata_only_queries_with_filters.q.out
@@ -166,7 +166,7 @@ POSTHOOK: query: select count(*), count(1), sum(1), count(s), count(bo), count(b
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@stats_tbl_part
 #### A masked pattern was here ####
-2322	2322	2322.000000000000000000	2322	2322	2322	2322	65791	4294967296	99.9800033569336	0.03
+2322	2322	2322	2322	2322	2322	2322	65791	4294967296	99.9800033569336	0.03
 PREHOOK: query: explain 
 select count(*), count(1), sum(1), sum(2), count(s), count(bo), count(bin), count(si), max(i), min(b), max(f), min(d) from stats_tbl_part where dt > 2010
 PREHOOK: type: QUERY
@@ -191,7 +191,7 @@ POSTHOOK: query: select count(*), count(1), sum(1), sum(2), count(s), count(bo),
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@stats_tbl_part
 #### A masked pattern was here ####
-2219	2219	2219.000000000000000000	4438.000000000000000000	2219	2219	2219	2219	65791	4294967296	99.95999908447266	0.04
+2219	2219	2219	4438	2219	2219	2219	2219	65791	4294967296	99.95999908447266	0.04
 PREHOOK: query: select count(*) from stats_tbl_part
 PREHOOK: type: QUERY
 PREHOOK: Input: default@stats_tbl_part
diff --git a/ql/src/test/results/clientpositive/orc_predicate_pushdown.q.out b/ql/src/test/results/clientpositive/orc_predicate_pushdown.q.out
index 2266787..434017a 100644
--- a/ql/src/test/results/clientpositive/orc_predicate_pushdown.q.out
+++ b/ql/src/test/results/clientpositive/orc_predicate_pushdown.q.out
@@ -235,7 +235,7 @@ POSTHOOK: query: SELECT * FROM orc_pred WHERE t>2 limit 1
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@orc_pred
 #### A masked pattern was here ####
-124	336	65664	4294967435	74.72	42.47	true	bob davidson	2013-03-01 09:11:58.703302	45.40	yard duty
+124	336	65664	4294967435	74.72	42.47	true	bob davidson	2013-03-01 09:11:58.703302	45.4	yard duty
 PREHOOK: query: SELECT * FROM orc_pred WHERE t>2 limit 1
 PREHOOK: type: QUERY
 PREHOOK: Input: default@orc_pred
@@ -244,7 +244,7 @@ POSTHOOK: query: SELECT * FROM orc_pred WHERE t>2 limit 1
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@orc_pred
 #### A masked pattern was here ####
-124	336	65664	4294967435	74.72	42.47	true	bob davidson	2013-03-01 09:11:58.703302	45.40	yard duty
+124	336	65664	4294967435	74.72	42.47	true	bob davidson	2013-03-01 09:11:58.703302	45.4	yard duty
 PREHOOK: query: SELECT SUM(HASH(t)) FROM orc_pred
   WHERE t IS NOT NULL
   AND t < 0
diff --git a/ql/src/test/results/clientpositive/parquet_decimal.q.out b/ql/src/test/results/clientpositive/parquet_decimal.q.out
index a19cd6d..493bd4f 100644
--- a/ql/src/test/results/clientpositive/parquet_decimal.q.out
+++ b/ql/src/test/results/clientpositive/parquet_decimal.q.out
@@ -63,9 +63,9 @@ Mary	4.33
 Cluck	5.96
 Tom	-12.25
 Mary	33.33
-Tom	19.00
-Beck	0.00
-Beck	79.90
+Tom	19
+Beck	0
+Beck	79.9
 PREHOOK: query: SELECT value, count(*) FROM parq_dec GROUP BY value ORDER BY value
 PREHOOK: type: QUERY
 PREHOOK: Input: default@parq_dec
@@ -75,14 +75,14 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@parq_dec
 #### A masked pattern was here ####
 -12.25	1
-0.00	1
+0	1
 4.33	1
 5.96	1
-19.00	1
+19	1
 33.33	1
 55.71	1
 77.34	1
-79.90	1
+79.9	1
 234.79	1
 PREHOOK: query: TRUNCATE TABLE parq_dec
 PREHOOK: type: TRUNCATETABLE
@@ -158,12 +158,12 @@ POSTHOOK: Input: default@parq_dec1
 77.3
 55.7
 4.3
-6.0
+6
 12.3
 33.3
 0.2
 3.2
-8.0
+8
 PREHOOK: query: DROP TABLE dec
 PREHOOK: type: DROPTABLE
 PREHOOK: Input: default@dec
diff --git a/ql/src/test/results/clientpositive/parquet_ppd_boolean.q.out b/ql/src/test/results/clientpositive/parquet_ppd_boolean.q.out
index 6ded905..7eddc162 100644
--- a/ql/src/test/results/clientpositive/parquet_ppd_boolean.q.out
+++ b/ql/src/test/results/clientpositive/parquet_ppd_boolean.q.out
@@ -26,11 +26,11 @@ POSTHOOK: query: select * from newtypestbl where b=true
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	true
-apple     	bee	0.220	true
-apple     	bee	0.220	true
-apple     	bee	0.220	true
-apple     	bee	0.220	true
+apple     	bee	0.22	true
+apple     	bee	0.22	true
+apple     	bee	0.22	true
+apple     	bee	0.22	true
+apple     	bee	0.22	true
 PREHOOK: query: select * from newtypestbl where b!=true
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -39,11 +39,11 @@ POSTHOOK: query: select * from newtypestbl where b!=true
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-hello     	world	11.220	false
-hello     	world	11.220	false
-hello     	world	11.220	false
-hello     	world	11.220	false
-hello     	world	11.220	false
+hello     	world	11.22	false
+hello     	world	11.22	false
+hello     	world	11.22	false
+hello     	world	11.22	false
+hello     	world	11.22	false
 PREHOOK: query: select * from newtypestbl where b<true
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -52,11 +52,11 @@ POSTHOOK: query: select * from newtypestbl where b<true
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-hello     	world	11.220	false
-hello     	world	11.220	false
-hello     	world	11.220	false
-hello     	world	11.220	false
-hello     	world	11.220	false
+hello     	world	11.22	false
+hello     	world	11.22	false
+hello     	world	11.22	false
+hello     	world	11.22	false
+hello     	world	11.22	false
 PREHOOK: query: select * from newtypestbl where b>true
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -73,16 +73,16 @@ POSTHOOK: query: select * from newtypestbl where b<=true sort by c
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	true
-apple     	bee	0.220	true
-apple     	bee	0.220	true
-apple     	bee	0.220	true
-apple     	bee	0.220	true
-hello     	world	11.220	false
-hello     	world	11.220	false
-hello     	world	11.220	false
-hello     	world	11.220	false
-hello     	world	11.220	false
+apple     	bee	0.22	true
+apple     	bee	0.22	true
+apple     	bee	0.22	true
+apple     	bee	0.22	true
+apple     	bee	0.22	true
+hello     	world	11.22	false
+hello     	world	11.22	false
+hello     	world	11.22	false
+hello     	world	11.22	false
+hello     	world	11.22	false
 PREHOOK: query: select * from newtypestbl where b=false
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -91,11 +91,11 @@ POSTHOOK: query: select * from newtypestbl where b=false
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-hello     	world	11.220	false
-hello     	world	11.220	false
-hello     	world	11.220	false
-hello     	world	11.220	false
-hello     	world	11.220	false
+hello     	world	11.22	false
+hello     	world	11.22	false
+hello     	world	11.22	false
+hello     	world	11.22	false
+hello     	world	11.22	false
 PREHOOK: query: select * from newtypestbl where b!=false
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -104,11 +104,11 @@ POSTHOOK: query: select * from newtypestbl where b!=false
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	true
-apple     	bee	0.220	true
-apple     	bee	0.220	true
-apple     	bee	0.220	true
-apple     	bee	0.220	true
+apple     	bee	0.22	true
+apple     	bee	0.22	true
+apple     	bee	0.22	true
+apple     	bee	0.22	true
+apple     	bee	0.22	true
 PREHOOK: query: select * from newtypestbl where b<false
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -125,11 +125,11 @@ POSTHOOK: query: select * from newtypestbl where b>false
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	true
-apple     	bee	0.220	true
-apple     	bee	0.220	true
-apple     	bee	0.220	true
-apple     	bee	0.220	true
+apple     	bee	0.22	true
+apple     	bee	0.22	true
+apple     	bee	0.22	true
+apple     	bee	0.22	true
+apple     	bee	0.22	true
 PREHOOK: query: select * from newtypestbl where b<=false
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -138,11 +138,11 @@ POSTHOOK: query: select * from newtypestbl where b<=false
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-hello     	world	11.220	false
-hello     	world	11.220	false
-hello     	world	11.220	false
-hello     	world	11.220	false
-hello     	world	11.220	false
+hello     	world	11.22	false
+hello     	world	11.22	false
+hello     	world	11.22	false
+hello     	world	11.22	false
+hello     	world	11.22	false
 PREHOOK: query: select * from newtypestbl where b=true
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -151,11 +151,11 @@ POSTHOOK: query: select * from newtypestbl where b=true
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	true
-apple     	bee	0.220	true
-apple     	bee	0.220	true
-apple     	bee	0.220	true
-apple     	bee	0.220	true
+apple     	bee	0.22	true
+apple     	bee	0.22	true
+apple     	bee	0.22	true
+apple     	bee	0.22	true
+apple     	bee	0.22	true
 PREHOOK: query: select * from newtypestbl where b!=true
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -164,11 +164,11 @@ POSTHOOK: query: select * from newtypestbl where b!=true
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-hello     	world	11.220	false
-hello     	world	11.220	false
-hello     	world	11.220	false
-hello     	world	11.220	false
-hello     	world	11.220	false
+hello     	world	11.22	false
+hello     	world	11.22	false
+hello     	world	11.22	false
+hello     	world	11.22	false
+hello     	world	11.22	false
 PREHOOK: query: select * from newtypestbl where b<true
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -177,11 +177,11 @@ POSTHOOK: query: select * from newtypestbl where b<true
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-hello     	world	11.220	false
-hello     	world	11.220	false
-hello     	world	11.220	false
-hello     	world	11.220	false
-hello     	world	11.220	false
+hello     	world	11.22	false
+hello     	world	11.22	false
+hello     	world	11.22	false
+hello     	world	11.22	false
+hello     	world	11.22	false
 PREHOOK: query: select * from newtypestbl where b>true
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -198,16 +198,16 @@ POSTHOOK: query: select * from newtypestbl where b<=true sort by c
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	true
-apple     	bee	0.220	true
-apple     	bee	0.220	true
-apple     	bee	0.220	true
-apple     	bee	0.220	true
-hello     	world	11.220	false
-hello     	world	11.220	false
-hello     	world	11.220	false
-hello     	world	11.220	false
-hello     	world	11.220	false
+apple     	bee	0.22	true
+apple     	bee	0.22	true
+apple     	bee	0.22	true
+apple     	bee	0.22	true
+apple     	bee	0.22	true
+hello     	world	11.22	false
+hello     	world	11.22	false
+hello     	world	11.22	false
+hello     	world	11.22	false
+hello     	world	11.22	false
 PREHOOK: query: select * from newtypestbl where b=false
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -216,11 +216,11 @@ POSTHOOK: query: select * from newtypestbl where b=false
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-hello     	world	11.220	false
-hello     	world	11.220	false
-hello     	world	11.220	false
-hello     	world	11.220	false
-hello     	world	11.220	false
+hello     	world	11.22	false
+hello     	world	11.22	false
+hello     	world	11.22	false
+hello     	world	11.22	false
+hello     	world	11.22	false
 PREHOOK: query: select * from newtypestbl where b!=false
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -229,11 +229,11 @@ POSTHOOK: query: select * from newtypestbl where b!=false
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	true
-apple     	bee	0.220	true
-apple     	bee	0.220	true
-apple     	bee	0.220	true
-apple     	bee	0.220	true
+apple     	bee	0.22	true
+apple     	bee	0.22	true
+apple     	bee	0.22	true
+apple     	bee	0.22	true
+apple     	bee	0.22	true
 PREHOOK: query: select * from newtypestbl where b<false
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -250,11 +250,11 @@ POSTHOOK: query: select * from newtypestbl where b>false
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	true
-apple     	bee	0.220	true
-apple     	bee	0.220	true
-apple     	bee	0.220	true
-apple     	bee	0.220	true
+apple     	bee	0.22	true
+apple     	bee	0.22	true
+apple     	bee	0.22	true
+apple     	bee	0.22	true
+apple     	bee	0.22	true
 PREHOOK: query: select * from newtypestbl where b<=false
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -263,8 +263,8 @@ POSTHOOK: query: select * from newtypestbl where b<=false
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-hello     	world	11.220	false
-hello     	world	11.220	false
-hello     	world	11.220	false
-hello     	world	11.220	false
-hello     	world	11.220	false
+hello     	world	11.22	false
+hello     	world	11.22	false
+hello     	world	11.22	false
+hello     	world	11.22	false
+hello     	world	11.22	false
diff --git a/ql/src/test/results/clientpositive/parquet_ppd_char.q.out b/ql/src/test/results/clientpositive/parquet_ppd_char.q.out
index cbf013c..ae235c3 100644
--- a/ql/src/test/results/clientpositive/parquet_ppd_char.q.out
+++ b/ql/src/test/results/clientpositive/parquet_ppd_char.q.out
@@ -26,11 +26,11 @@ POSTHOOK: query: select * from newtypestbl where c="apple"
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where c="apple"
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -39,11 +39,11 @@ POSTHOOK: query: select * from newtypestbl where c="apple"
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where c!="apple"
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -52,11 +52,11 @@ POSTHOOK: query: select * from newtypestbl where c!="apple"
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where c!="apple"
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -65,11 +65,11 @@ POSTHOOK: query: select * from newtypestbl where c!="apple"
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where c<"hello"
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -78,11 +78,11 @@ POSTHOOK: query: select * from newtypestbl where c<"hello"
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where c<"hello"
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -91,11 +91,11 @@ POSTHOOK: query: select * from newtypestbl where c<"hello"
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where c<="hello" sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -104,16 +104,16 @@ POSTHOOK: query: select * from newtypestbl where c<="hello" sort by c
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where c<="hello" sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -122,16 +122,16 @@ POSTHOOK: query: select * from newtypestbl where c<="hello" sort by c
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where c="apple "
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -156,11 +156,11 @@ POSTHOOK: query: select * from newtypestbl where c in ("apple", "carrot")
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where c in ("apple", "carrot")
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -169,11 +169,11 @@ POSTHOOK: query: select * from newtypestbl where c in ("apple", "carrot")
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where c in ("apple", "hello") sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -182,16 +182,16 @@ POSTHOOK: query: select * from newtypestbl where c in ("apple", "hello") sort by
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where c in ("apple", "hello") sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -200,16 +200,16 @@ POSTHOOK: query: select * from newtypestbl where c in ("apple", "hello") sort by
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where c in ("carrot")
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -234,11 +234,11 @@ POSTHOOK: query: select * from newtypestbl where c between "apple" and "carrot"
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where c between "apple" and "carrot"
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -247,11 +247,11 @@ POSTHOOK: query: select * from newtypestbl where c between "apple" and "carrot"
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where c between "apple" and "zombie" sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -260,16 +260,16 @@ POSTHOOK: query: select * from newtypestbl where c between "apple" and "zombie"
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where c between "apple" and "zombie" sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -278,16 +278,16 @@ POSTHOOK: query: select * from newtypestbl where c between "apple" and "zombie"
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where c between "carrot" and "carrot1"
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
diff --git a/ql/src/test/results/clientpositive/parquet_ppd_decimal.q.out b/ql/src/test/results/clientpositive/parquet_ppd_decimal.q.out
index 84fc49a..3dc0599 100644
--- a/ql/src/test/results/clientpositive/parquet_ppd_decimal.q.out
+++ b/ql/src/test/results/clientpositive/parquet_ppd_decimal.q.out
@@ -26,11 +26,11 @@ POSTHOOK: query: select * from newtypestbl where d=0.22
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where d=0.22
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -39,11 +39,11 @@ POSTHOOK: query: select * from newtypestbl where d=0.22
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where d='0.22'
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -52,11 +52,11 @@ POSTHOOK: query: select * from newtypestbl where d='0.22'
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where d='0.22'
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -65,11 +65,11 @@ POSTHOOK: query: select * from newtypestbl where d='0.22'
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where d=cast('0.22' as float)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -78,11 +78,11 @@ POSTHOOK: query: select * from newtypestbl where d=cast('0.22' as float)
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where d=cast('0.22' as float)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -91,11 +91,11 @@ POSTHOOK: query: select * from newtypestbl where d=cast('0.22' as float)
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where d!=0.22
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -104,11 +104,11 @@ POSTHOOK: query: select * from newtypestbl where d!=0.22
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where d!=0.22
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -117,11 +117,11 @@ POSTHOOK: query: select * from newtypestbl where d!=0.22
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where d!='0.22'
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -130,11 +130,11 @@ POSTHOOK: query: select * from newtypestbl where d!='0.22'
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where d!='0.22'
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -143,11 +143,11 @@ POSTHOOK: query: select * from newtypestbl where d!='0.22'
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where d!=cast('0.22' as float)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -156,11 +156,11 @@ POSTHOOK: query: select * from newtypestbl where d!=cast('0.22' as float)
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where d!=cast('0.22' as float)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -169,11 +169,11 @@ POSTHOOK: query: select * from newtypestbl where d!=cast('0.22' as float)
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where d<11.22
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -182,11 +182,11 @@ POSTHOOK: query: select * from newtypestbl where d<11.22
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where d<11.22
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -195,11 +195,11 @@ POSTHOOK: query: select * from newtypestbl where d<11.22
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where d<'11.22'
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -208,11 +208,11 @@ POSTHOOK: query: select * from newtypestbl where d<'11.22'
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where d<'11.22'
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -221,11 +221,11 @@ POSTHOOK: query: select * from newtypestbl where d<'11.22'
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where d<cast('11.22' as float)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -234,11 +234,11 @@ POSTHOOK: query: select * from newtypestbl where d<cast('11.22' as float)
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where d<cast('11.22' as float)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -247,11 +247,11 @@ POSTHOOK: query: select * from newtypestbl where d<cast('11.22' as float)
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where d<1
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -260,11 +260,11 @@ POSTHOOK: query: select * from newtypestbl where d<1
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where d<1
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -273,11 +273,11 @@ POSTHOOK: query: select * from newtypestbl where d<1
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where d<=11.22 sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -286,16 +286,16 @@ POSTHOOK: query: select * from newtypestbl where d<=11.22 sort by c
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where d<=11.22 sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -304,16 +304,16 @@ POSTHOOK: query: select * from newtypestbl where d<=11.22 sort by c
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where d<='11.22' sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -322,16 +322,16 @@ POSTHOOK: query: select * from newtypestbl where d<='11.22' sort by c
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where d<='11.22' sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -340,16 +340,16 @@ POSTHOOK: query: select * from newtypestbl where d<='11.22' sort by c
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where d<=cast('11.22' as float) sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -358,16 +358,16 @@ POSTHOOK: query: select * from newtypestbl where d<=cast('11.22' as float) sort
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where d<=cast('11.22' as float) sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -376,16 +376,16 @@ POSTHOOK: query: select * from newtypestbl where d<=cast('11.22' as float) sort
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where d<=cast('11.22' as decimal)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -394,11 +394,11 @@ POSTHOOK: query: select * from newtypestbl where d<=cast('11.22' as decimal)
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where d<=cast('11.22' as decimal)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -407,11 +407,11 @@ POSTHOOK: query: select * from newtypestbl where d<=cast('11.22' as decimal)
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where d<=11.22BD sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -420,16 +420,16 @@ POSTHOOK: query: select * from newtypestbl where d<=11.22BD sort by c
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where d<=11.22BD sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -438,16 +438,16 @@ POSTHOOK: query: select * from newtypestbl where d<=11.22BD sort by c
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where d<=12 sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -456,16 +456,16 @@ POSTHOOK: query: select * from newtypestbl where d<=12 sort by c
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where d<=12 sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -474,16 +474,16 @@ POSTHOOK: query: select * from newtypestbl where d<=12 sort by c
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where d in ('0.22', '1.0')
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -492,11 +492,11 @@ POSTHOOK: query: select * from newtypestbl where d in ('0.22', '1.0')
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where d in ('0.22', '1.0')
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -505,11 +505,11 @@ POSTHOOK: query: select * from newtypestbl where d in ('0.22', '1.0')
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where d in ('0.22', '11.22') sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -518,16 +518,16 @@ POSTHOOK: query: select * from newtypestbl where d in ('0.22', '11.22') sort by
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where d in ('0.22', '11.22') sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -536,16 +536,16 @@ POSTHOOK: query: select * from newtypestbl where d in ('0.22', '11.22') sort by
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where d in ('0.9', '1.0')
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -570,11 +570,11 @@ POSTHOOK: query: select * from newtypestbl where d in ('0.9', 0.22)
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where d in ('0.9', 0.22)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -583,11 +583,11 @@ POSTHOOK: query: select * from newtypestbl where d in ('0.9', 0.22)
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where d in ('0.9', 0.22, cast('11.22' as float)) sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -596,16 +596,16 @@ POSTHOOK: query: select * from newtypestbl where d in ('0.9', 0.22, cast('11.22'
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where d in ('0.9', 0.22, cast('11.22' as float)) sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -614,16 +614,16 @@ POSTHOOK: query: select * from newtypestbl where d in ('0.9', 0.22, cast('11.22'
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where d between 0 and 1
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -632,11 +632,11 @@ POSTHOOK: query: select * from newtypestbl where d between 0 and 1
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where d between 0 and 1
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -645,11 +645,11 @@ POSTHOOK: query: select * from newtypestbl where d between 0 and 1
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where d between 0 and 1000 sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -658,16 +658,16 @@ POSTHOOK: query: select * from newtypestbl where d between 0 and 1000 sort by c
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where d between 0 and 1000 sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -676,16 +676,16 @@ POSTHOOK: query: select * from newtypestbl where d between 0 and 1000 sort by c
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where d between 0 and '2.0'
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -694,11 +694,11 @@ POSTHOOK: query: select * from newtypestbl where d between 0 and '2.0'
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where d between 0 and '2.0'
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -707,11 +707,11 @@ POSTHOOK: query: select * from newtypestbl where d between 0 and '2.0'
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where d between 0 and cast(3 as float)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -720,11 +720,11 @@ POSTHOOK: query: select * from newtypestbl where d between 0 and cast(3 as float
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where d between 0 and cast(3 as float)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -733,11 +733,11 @@ POSTHOOK: query: select * from newtypestbl where d between 0 and cast(3 as float
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where d between 1 and cast(30 as char(10))
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -746,11 +746,11 @@ POSTHOOK: query: select * from newtypestbl where d between 1 and cast(30 as char
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where d between 1 and cast(30 as char(10))
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -759,8 +759,8 @@ POSTHOOK: query: select * from newtypestbl where d between 1 and cast(30 as char
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
diff --git a/ql/src/test/results/clientpositive/parquet_ppd_timestamp.q.out b/ql/src/test/results/clientpositive/parquet_ppd_timestamp.q.out
index e39ab5d..d52df1a 100644
--- a/ql/src/test/results/clientpositive/parquet_ppd_timestamp.q.out
+++ b/ql/src/test/results/clientpositive/parquet_ppd_timestamp.q.out
@@ -26,11 +26,11 @@ POSTHOOK: query: select * from newtypestbl where cast(ts as string)='2011-01-01
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
 PREHOOK: query: select * from newtypestbl where cast(ts as string)='2011-01-01 01:01:01'
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -39,11 +39,11 @@ POSTHOOK: query: select * from newtypestbl where cast(ts as string)='2011-01-01
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
 PREHOOK: query: select * from newtypestbl where ts=cast('2011-01-01 01:01:01' as timestamp)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -52,11 +52,11 @@ POSTHOOK: query: select * from newtypestbl where ts=cast('2011-01-01 01:01:01' a
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
 PREHOOK: query: select * from newtypestbl where ts=cast('2011-01-01 01:01:01' as timestamp)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -65,11 +65,11 @@ POSTHOOK: query: select * from newtypestbl where ts=cast('2011-01-01 01:01:01' a
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
 PREHOOK: query: select * from newtypestbl where ts=cast('2011-01-01 01:01:01' as varchar(20))
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -78,11 +78,11 @@ POSTHOOK: query: select * from newtypestbl where ts=cast('2011-01-01 01:01:01' a
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
 PREHOOK: query: select * from newtypestbl where ts=cast('2011-01-01 01:01:01' as varchar(20))
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -91,11 +91,11 @@ POSTHOOK: query: select * from newtypestbl where ts=cast('2011-01-01 01:01:01' a
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
 PREHOOK: query: select * from newtypestbl where ts!=cast('2011-01-01 01:01:01' as timestamp)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -104,11 +104,11 @@ POSTHOOK: query: select * from newtypestbl where ts!=cast('2011-01-01 01:01:01'
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
 PREHOOK: query: select * from newtypestbl where ts!=cast('2011-01-01 01:01:01' as timestamp)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -117,11 +117,11 @@ POSTHOOK: query: select * from newtypestbl where ts!=cast('2011-01-01 01:01:01'
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
 PREHOOK: query: select * from newtypestbl where ts<cast('2011-01-20 01:01:01' as timestamp)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -130,11 +130,11 @@ POSTHOOK: query: select * from newtypestbl where ts<cast('2011-01-20 01:01:01' a
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
 PREHOOK: query: select * from newtypestbl where ts<cast('2011-01-20 01:01:01' as timestamp)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -143,11 +143,11 @@ POSTHOOK: query: select * from newtypestbl where ts<cast('2011-01-20 01:01:01' a
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
 PREHOOK: query: select * from newtypestbl where ts<cast('2011-01-22 01:01:01' as timestamp) sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -156,16 +156,16 @@ POSTHOOK: query: select * from newtypestbl where ts<cast('2011-01-22 01:01:01' a
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
 PREHOOK: query: select * from newtypestbl where ts<cast('2011-01-22 01:01:01' as timestamp) sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -174,16 +174,16 @@ POSTHOOK: query: select * from newtypestbl where ts<cast('2011-01-22 01:01:01' a
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
 PREHOOK: query: select * from newtypestbl where ts<cast('2010-10-01 01:01:01' as timestamp)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -208,11 +208,11 @@ POSTHOOK: query: select * from newtypestbl where ts<=cast('2011-01-01 01:01:01'
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
 PREHOOK: query: select * from newtypestbl where ts<=cast('2011-01-01 01:01:01' as timestamp)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -221,11 +221,11 @@ POSTHOOK: query: select * from newtypestbl where ts<=cast('2011-01-01 01:01:01'
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
 PREHOOK: query: select * from newtypestbl where ts<=cast('2011-01-20 01:01:01' as timestamp) sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -234,16 +234,16 @@ POSTHOOK: query: select * from newtypestbl where ts<=cast('2011-01-20 01:01:01'
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
 PREHOOK: query: select * from newtypestbl where ts<=cast('2011-01-20 01:01:01' as timestamp) sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -252,16 +252,16 @@ POSTHOOK: query: select * from newtypestbl where ts<=cast('2011-01-20 01:01:01'
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
 PREHOOK: query: select * from newtypestbl where ts in (cast('2011-01-02 01:01:01' as timestamp), cast('2011-01-20 01:01:01' as timestamp))
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -270,11 +270,11 @@ POSTHOOK: query: select * from newtypestbl where ts in (cast('2011-01-02 01:01:0
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
 PREHOOK: query: select * from newtypestbl where ts in (cast('2011-01-02 01:01:01' as timestamp), cast('2011-01-20 01:01:01' as timestamp))
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -283,11 +283,11 @@ POSTHOOK: query: select * from newtypestbl where ts in (cast('2011-01-02 01:01:0
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
 PREHOOK: query: select * from newtypestbl where ts in (cast('2011-01-01 01:01:01' as timestamp), cast('2011-01-20 01:01:01' as timestamp)) sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -296,16 +296,16 @@ POSTHOOK: query: select * from newtypestbl where ts in (cast('2011-01-01 01:01:0
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
 PREHOOK: query: select * from newtypestbl where ts in (cast('2011-01-01 01:01:01' as timestamp), cast('2011-01-20 01:01:01' as timestamp)) sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -314,16 +314,16 @@ POSTHOOK: query: select * from newtypestbl where ts in (cast('2011-01-01 01:01:0
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
 PREHOOK: query: select * from newtypestbl where ts in (cast('2011-01-02 01:01:01' as timestamp), cast('2011-01-08 01:01:01' as timestamp))
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -348,11 +348,11 @@ POSTHOOK: query: select * from newtypestbl where ts between cast('2010-10-01 01:
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
 PREHOOK: query: select * from newtypestbl where ts between cast('2010-10-01 01:01:01' as timestamp) and cast('2011-01-08 01:01:01' as timestamp)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -361,11 +361,11 @@ POSTHOOK: query: select * from newtypestbl where ts between cast('2010-10-01 01:
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
 PREHOOK: query: select * from newtypestbl where ts between cast('2010-10-01 01:01:01' as timestamp) and cast('2011-01-25 01:01:01' as timestamp) sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -374,16 +374,16 @@ POSTHOOK: query: select * from newtypestbl where ts between cast('2010-10-01 01:
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
 PREHOOK: query: select * from newtypestbl where ts between cast('2010-10-01 01:01:01' as timestamp) and cast('2011-01-25 01:01:01' as timestamp) sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -392,16 +392,16 @@ POSTHOOK: query: select * from newtypestbl where ts between cast('2010-10-01 01:
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-apple     	bee	0.220	2011-01-01 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
-hello     	world	11.220	2011-01-20 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+apple     	bee	0.22	2011-01-01 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
+hello     	world	11.22	2011-01-20 01:01:01
 PREHOOK: query: select * from newtypestbl where ts between cast('2010-10-01 01:01:01' as timestamp) and cast('2010-11-01 01:01:01' as timestamp)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
diff --git a/ql/src/test/results/clientpositive/parquet_ppd_varchar.q.out b/ql/src/test/results/clientpositive/parquet_ppd_varchar.q.out
index c2e29c6..48b5795 100644
--- a/ql/src/test/results/clientpositive/parquet_ppd_varchar.q.out
+++ b/ql/src/test/results/clientpositive/parquet_ppd_varchar.q.out
@@ -26,11 +26,11 @@ POSTHOOK: query: select * from newtypestbl where v="bee"
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where v="bee"
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -39,11 +39,11 @@ POSTHOOK: query: select * from newtypestbl where v="bee"
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where v!="bee"
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -52,11 +52,11 @@ POSTHOOK: query: select * from newtypestbl where v!="bee"
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where v!="bee"
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -65,11 +65,11 @@ POSTHOOK: query: select * from newtypestbl where v!="bee"
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where v<"world"
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -78,11 +78,11 @@ POSTHOOK: query: select * from newtypestbl where v<"world"
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where v<"world"
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -91,11 +91,11 @@ POSTHOOK: query: select * from newtypestbl where v<"world"
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where v<="world" sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -104,16 +104,16 @@ POSTHOOK: query: select * from newtypestbl where v<="world" sort by c
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where v<="world" sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -122,16 +122,16 @@ POSTHOOK: query: select * from newtypestbl where v<="world" sort by c
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where v="bee   "
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -156,11 +156,11 @@ POSTHOOK: query: select * from newtypestbl where v in ("bee", "orange")
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where v in ("bee", "orange")
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -169,11 +169,11 @@ POSTHOOK: query: select * from newtypestbl where v in ("bee", "orange")
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where v in ("bee", "world") sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -182,16 +182,16 @@ POSTHOOK: query: select * from newtypestbl where v in ("bee", "world") sort by c
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where v in ("bee", "world") sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -200,16 +200,16 @@ POSTHOOK: query: select * from newtypestbl where v in ("bee", "world") sort by c
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where v in ("orange")
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -234,11 +234,11 @@ POSTHOOK: query: select * from newtypestbl where v between "bee" and "orange"
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where v between "bee" and "orange"
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -247,11 +247,11 @@ POSTHOOK: query: select * from newtypestbl where v between "bee" and "orange"
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
 PREHOOK: query: select * from newtypestbl where v between "bee" and "zombie" sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -260,16 +260,16 @@ POSTHOOK: query: select * from newtypestbl where v between "bee" and "zombie" so
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where v between "bee" and "zombie" sort by c
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
@@ -278,16 +278,16 @@ POSTHOOK: query: select * from newtypestbl where v between "bee" and "zombie" so
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@newtypestbl
 #### A masked pattern was here ####
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-apple     	bee	0.220	1970-02-20
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
-hello     	world	11.220	1970-02-27
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+apple     	bee	0.22	1970-02-20
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
+hello     	world	11.22	1970-02-27
 PREHOOK: query: select * from newtypestbl where v between "orange" and "pine"
 PREHOOK: type: QUERY
 PREHOOK: Input: default@newtypestbl
diff --git a/ql/src/test/results/clientpositive/parquet_predicate_pushdown.q.out b/ql/src/test/results/clientpositive/parquet_predicate_pushdown.q.out
index c8eba8b..f7c865a 100644
--- a/ql/src/test/results/clientpositive/parquet_predicate_pushdown.q.out
+++ b/ql/src/test/results/clientpositive/parquet_predicate_pushdown.q.out
@@ -227,7 +227,7 @@ POSTHOOK: query: SELECT * FROM tbl_pred WHERE t>2 limit 1
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@tbl_pred
 #### A masked pattern was here ####
-124	336	65664	4294967435	74.72	42.47	true	bob davidson	2013-03-01 09:11:58.703302	45.40	yard duty
+124	336	65664	4294967435	74.72	42.47	true	bob davidson	2013-03-01 09:11:58.703302	45.4	yard duty
 PREHOOK: query: SELECT * FROM tbl_pred WHERE t>2 limit 1
 PREHOOK: type: QUERY
 PREHOOK: Input: default@tbl_pred
@@ -236,7 +236,7 @@ POSTHOOK: query: SELECT * FROM tbl_pred WHERE t>2 limit 1
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@tbl_pred
 #### A masked pattern was here ####
-124	336	65664	4294967435	74.72	42.47	true	bob davidson	2013-03-01 09:11:58.703302	45.40	yard duty
+124	336	65664	4294967435	74.72	42.47	true	bob davidson	2013-03-01 09:11:58.703302	45.4	yard duty
 PREHOOK: query: SELECT * FROM tbl_pred
   WHERE t IS NOT NULL
   AND t < 0
diff --git a/ql/src/test/results/clientpositive/serde_regex.q.out b/ql/src/test/results/clientpositive/serde_regex.q.out
index 0a7c0b8..19187ba 100644
--- a/ql/src/test/results/clientpositive/serde_regex.q.out
+++ b/ql/src/test/results/clientpositive/serde_regex.q.out
@@ -201,43 +201,43 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@serde_regex1
 #### A masked pattern was here ####
 NULL	0
--1234567890.123456789000000000	-1234567890
--4400.000000000000000000	4400
--1255.490000000000000000	-1255
--1.122000000000000000	-11
--1.120000000000000000	-1
--1.120000000000000000	-1
--0.333000000000000000	0
--0.330000000000000000	0
--0.300000000000000000	0
-0.000000000000000000	0
-0.000000000000000000	0
-0.000000000000000000	0
-0.010000000000000000	0
-0.020000000000000000	0
-0.100000000000000000	0
-0.200000000000000000	0
-0.300000000000000000	0
-0.330000000000000000	0
-0.333000000000000000	0
-1.000000000000000000	1
-1.000000000000000000	1
-1.000000000000000000	1
-1.120000000000000000	1
-1.122000000000000000	1
-2.000000000000000000	2
-2.000000000000000000	2
-3.140000000000000000	3
-3.140000000000000000	3
-3.140000000000000000	3
-3.140000000000000000	4
-10.000000000000000000	10
-20.000000000000000000	20
-100.000000000000000000	100
-124.000000000000000000	124
-125.200000000000000000	125
-200.000000000000000000	200
-1234567890.123456780000000000	1234567890
+-1234567890.123456789	-1234567890
+-4400	4400
+-1255.49	-1255
+-1.122	-11
+-1.12	-1
+-1.12	-1
+-0.333	0
+-0.33	0
+-0.3	0
+0	0
+0	0
+0	0
+0.01	0
+0.02	0
+0.1	0
+0.2	0
+0.3	0
+0.33	0
+0.333	0
+1	1
+1	1
+1	1
+1.12	1
+1.122	1
+2	2
+2	2
+3.14	3
+3.14	3
+3.14	3
+3.14	4
+10	10
+20	20
+100	100
+124	124
+125.2	125
+200	200
+1234567890.12345678	1234567890
 PREHOOK: query: DROP TABLE serde_regex1
 PREHOOK: type: DROPTABLE
 PREHOOK: Input: default@serde_regex1
diff --git a/ql/src/test/results/clientpositive/spark/avro_decimal_native.q.out b/ql/src/test/results/clientpositive/spark/avro_decimal_native.q.out
index cebc342..318be3d 100644
--- a/ql/src/test/results/clientpositive/spark/avro_decimal_native.q.out
+++ b/ql/src/test/results/clientpositive/spark/avro_decimal_native.q.out
@@ -92,9 +92,9 @@ Mary	4.33
 Cluck	5.96
 Tom	-12.25
 Mary	33.33
-Tom	19.00
-Beck	0.00
-Beck	79.90
+Tom	19
+Beck	0
+Beck	79.9
 PREHOOK: query: DROP TABLE IF EXISTS avro_dec1
 PREHOOK: type: DROPTABLE
 POSTHOOK: query: DROP TABLE IF EXISTS avro_dec1
@@ -143,10 +143,10 @@ POSTHOOK: Input: default@avro_dec1
 77.3
 55.7
 4.3
-6.0
+6
 12.3
 33.3
-19.0
+19
 3.2
 79.9
 PREHOOK: query: DROP TABLE dec
diff --git a/ql/src/test/results/clientpositive/spark/decimal_1_1.q.out b/ql/src/test/results/clientpositive/spark/decimal_1_1.q.out
index 46fbeb7..b2704c6 100644
--- a/ql/src/test/results/clientpositive/spark/decimal_1_1.q.out
+++ b/ql/src/test/results/clientpositive/spark/decimal_1_1.q.out
@@ -26,9 +26,9 @@ POSTHOOK: query: select * from decimal_1_1
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_1_1
 #### A masked pattern was here ####
-0.0
-0.0
-0.0
+0
+0
+0
 0.1
 0.2
 0.9
@@ -37,13 +37,13 @@ NULL
 0.3
 NULL
 NULL
-0.0
-0.0
+0
+0
 NULL
-0.0
-0.0
-0.0
-0.0
+0
+0
+0
+0
 -0.1
 -0.2
 -0.9
@@ -52,10 +52,10 @@ NULL
 -0.3
 NULL
 NULL
-0.0
-0.0
+0
+0
 NULL
-0.0
+0
 PREHOOK: query: select d from decimal_1_1 order by d desc
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_1_1
@@ -69,18 +69,18 @@ POSTHOOK: Input: default@decimal_1_1
 0.3
 0.2
 0.1
-0.0
-0.0
-0.0
-0.0
-0.0
-0.0
-0.0
-0.0
-0.0
-0.0
-0.0
-0.0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
 -0.1
 -0.2
 -0.3
diff --git a/ql/src/test/results/clientpositive/spark/mapjoin_decimal.q.out b/ql/src/test/results/clientpositive/spark/mapjoin_decimal.q.out
index 180dc4e..9aecf1b 100644
--- a/ql/src/test/results/clientpositive/spark/mapjoin_decimal.q.out
+++ b/ql/src/test/results/clientpositive/spark/mapjoin_decimal.q.out
@@ -155,112 +155,112 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@t1
 POSTHOOK: Input: default@t2
 #### A masked pattern was here ####
-14.00	14
-14.00	14
-14.00	14
-14.00	14
-14.00	14
-14.00	14
-14.00	14
-14.00	14
-14.00	14
-17.00	17
-17.00	17
-17.00	17
-17.00	17
-17.00	17
-17.00	17
-17.00	17
-17.00	17
-17.00	17
-17.00	17
-45.00	45
-45.00	45
-45.00	45
-45.00	45
-45.00	45
-6.00	6
-6.00	6
-6.00	6
-6.00	6
-6.00	6
-6.00	6
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-70.00	70
-70.00	70
-70.00	70
-70.00	70
-70.00	70
-70.00	70
-70.00	70
-79.00	79
-79.00	79
-79.00	79
-79.00	79
-79.00	79
-79.00	79
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
+14	14
+14	14
+14	14
+14	14
+14	14
+14	14
+14	14
+14	14
+14	14
+17	17
+17	17
+17	17
+17	17
+17	17
+17	17
+17	17
+17	17
+17	17
+17	17
+45	45
+45	45
+45	45
+45	45
+45	45
+6	6
+6	6
+6	6
+6	6
+6	6
+6	6
+62	62
+62	62
+62	62
+62	62
+62	62
+62	62
+62	62
+62	62
+62	62
+62	62
+62	62
+62	62
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+70	70
+70	70
+70	70
+70	70
+70	70
+70	70
+70	70
+79	79
+79	79
+79	79
+79	79
+79	79
+79	79
+89	89
+89	89
+89	89
+89	89
+89	89
+89	89
+89	89
+89	89
+89	89
+89	89
+89	89
+89	89
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
 PREHOOK: query: select t1.dec, t2.dec from t1 join t2 on (t1.dec=t2.dec)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@t1
@@ -271,109 +271,109 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@t1
 POSTHOOK: Input: default@t2
 #### A masked pattern was here ####
-14.00	14
-14.00	14
-14.00	14
-14.00	14
-14.00	14
-14.00	14
-14.00	14
-14.00	14
-14.00	14
-17.00	17
-17.00	17
-17.00	17
-17.00	17
-17.00	17
-17.00	17
-17.00	17
-17.00	17
-17.00	17
-17.00	17
-45.00	45
-45.00	45
-45.00	45
-45.00	45
-45.00	45
-6.00	6
-6.00	6
-6.00	6
-6.00	6
-6.00	6
-6.00	6
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-70.00	70
-70.00	70
-70.00	70
-70.00	70
-70.00	70
-70.00	70
-70.00	70
-79.00	79
-79.00	79
-79.00	79
-79.00	79
-79.00	79
-79.00	79
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
+14	14
+14	14
+14	14
+14	14
+14	14
+14	14
+14	14
+14	14
+14	14
+17	17
+17	17
+17	17
+17	17
+17	17
+17	17
+17	17
+17	17
+17	17
+17	17
+45	45
+45	45
+45	45
+45	45
+45	45
+6	6
+6	6
+6	6
+6	6
+6	6
+6	6
+62	62
+62	62
+62	62
+62	62
+62	62
+62	62
+62	62
+62	62
+62	62
+62	62
+62	62
+62	62
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+70	70
+70	70
+70	70
+70	70
+70	70
+70	70
+70	70
+79	79
+79	79
+79	79
+79	79
+79	79
+79	79
+89	89
+89	89
+89	89
+89	89
+89	89
+89	89
+89	89
+89	89
+89	89
+89	89
+89	89
+89	89
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
diff --git a/ql/src/test/results/clientpositive/spark/metadata_only_queries.q.out b/ql/src/test/results/clientpositive/spark/metadata_only_queries.q.out
index cfcbe21..bb464a4 100644
--- a/ql/src/test/results/clientpositive/spark/metadata_only_queries.q.out
+++ b/ql/src/test/results/clientpositive/spark/metadata_only_queries.q.out
@@ -350,7 +350,7 @@ POSTHOOK: query: select count(*), sum(1), sum(0.2), count(1), count(s), count(bo
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@stats_tbl
 #### A masked pattern was here ####
-9999	9999.000000000000000000	1999.800000000000000000	9999	9999	9999	9999	9999
+9999	9999	1999.8	9999	9999	9999	9999	9999
 PREHOOK: query: explain
 select min(i), max(i), min(b), max(b), min(f), max(f), min(d), max(d) from stats_tbl
 PREHOOK: type: QUERY
@@ -400,7 +400,7 @@ POSTHOOK: query: select count(*), sum(1), sum(0.2), count(1), count(s), count(bo
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@stats_tbl_part
 #### A masked pattern was here ####
-9489	9489.000000000000000000	1897.800000000000000000	9489	9489	9489	9489	9489
+9489	9489	1897.8	9489	9489	9489	9489	9489
 PREHOOK: query: explain
 select min(i), max(i), min(b), max(b), min(f), max(f), min(d), max(d) from stats_tbl_part
 PREHOOK: type: QUERY
diff --git a/ql/src/test/results/clientpositive/spark/metadata_only_queries_with_filters.q.out b/ql/src/test/results/clientpositive/spark/metadata_only_queries_with_filters.q.out
index a754cb8..5be958f 100644
--- a/ql/src/test/results/clientpositive/spark/metadata_only_queries_with_filters.q.out
+++ b/ql/src/test/results/clientpositive/spark/metadata_only_queries_with_filters.q.out
@@ -166,7 +166,7 @@ POSTHOOK: query: select count(*), count(1), sum(1), count(s), count(bo), count(b
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@stats_tbl_part
 #### A masked pattern was here ####
-2322	2322	2322.000000000000000000	2322	2322	2322	2322	65791	4294967296	99.9800033569336	0.03
+2322	2322	2322	2322	2322	2322	2322	65791	4294967296	99.9800033569336	0.03
 PREHOOK: query: explain 
 select count(*), count(1), sum(1), sum(2), count(s), count(bo), count(bin), count(si), max(i), min(b), max(f), min(d) from stats_tbl_part where dt > 2010
 PREHOOK: type: QUERY
@@ -191,7 +191,7 @@ POSTHOOK: query: select count(*), count(1), sum(1), sum(2), count(s), count(bo),
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@stats_tbl_part
 #### A masked pattern was here ####
-2219	2219	2219.000000000000000000	4438.000000000000000000	2219	2219	2219	2219	65791	4294967296	99.95999908447266	0.04
+2219	2219	2219	4438	2219	2219	2219	2219	65791	4294967296	99.95999908447266	0.04
 PREHOOK: query: select count(*) from stats_tbl_part
 PREHOOK: type: QUERY
 PREHOOK: Input: default@stats_tbl_part
diff --git a/ql/src/test/results/clientpositive/spark/vector_between_in.q.out b/ql/src/test/results/clientpositive/spark/vector_between_in.q.out
index d33188c..75520f4 100644
--- a/ql/src/test/results/clientpositive/spark/vector_between_in.q.out
+++ b/ql/src/test/results/clientpositive/spark/vector_between_in.q.out
@@ -650,34 +650,34 @@ POSTHOOK: Input: default@decimal_date_test
 -18.5162162162
 -17.3216216216
 -16.7243243243
--16.1270270270
+-16.127027027
 -15.5297297297
 -10.7513513514
 -9.5567567568
 -8.3621621622
--5.9729729730
+-5.972972973
 -3.5837837838
 4.1810810811
 4.7783783784
 4.7783783784
 5.3756756757
-5.9729729730
-5.9729729730
+5.972972973
+5.972972973
 11.3486486486
 11.3486486486
 11.9459459459
 14.9324324324
 19.1135135135
 20.3081081081
-22.1000000000
+22.1
 24.4891891892
 33.4486486486
 34.6432432432
 40.0189189189
 42.4081081081
 43.0054054054
-44.2000000000
-44.2000000000
+44.2
+44.2
 44.7972972973
 45.9918918919
 PREHOOK: query: SELECT COUNT(*) FROM decimal_date_test WHERE cdecimal1 NOT BETWEEN -2000 AND 4390.1351351351
diff --git a/ql/src/test/results/clientpositive/spark/vector_data_types.q.out b/ql/src/test/results/clientpositive/spark/vector_data_types.q.out
index e863f4a..e6f8727 100644
--- a/ql/src/test/results/clientpositive/spark/vector_data_types.q.out
+++ b/ql/src/test/results/clientpositive/spark/vector_data_types.q.out
@@ -158,7 +158,7 @@ POSTHOOK: Input: default@over1korc
 NULL	409	65536	4294967490	46.97	25.92	false	fred miller	2013-03-01 09:11:58.703116	33.45	history
 18	280	65536	4294967320	32.92	45.94	false	holly white	2013-03-01 09:11:58.703086	58.86	topology
 69	489	65536	4294967404	33.52	17.99	false	oscar ichabod	2013-03-01 09:11:58.703247	32.68	topology
-108	301	65536	4294967357	90.05	17.59	true	ethan johnson	2013-03-01 09:11:58.703271	75.70	undecided
+108	301	65536	4294967357	90.05	17.59	true	ethan johnson	2013-03-01 09:11:58.703271	75.7	undecided
 27	405	65536	4294967508	82.24	29.41	true	oscar ovid	2013-03-01 09:11:58.703166	16.85	biology
 42	495	65536	4294967431	43.57	46.81	false	tom johnson	2013-03-01 09:11:58.703245	62.25	american history
 118	497	65536	4294967381	50.32	12.72	false	david nixon	2013-03-01 09:11:58.703285	83.48	values clariffication
@@ -251,7 +251,7 @@ POSTHOOK: Input: default@over1korc
 NULL	409	65536	4294967490	46.97	25.92	false	fred miller	2013-03-01 09:11:58.703116	33.45	history
 18	280	65536	4294967320	32.92	45.94	false	holly white	2013-03-01 09:11:58.703086	58.86	topology
 69	489	65536	4294967404	33.52	17.99	false	oscar ichabod	2013-03-01 09:11:58.703247	32.68	topology
-108	301	65536	4294967357	90.05	17.59	true	ethan johnson	2013-03-01 09:11:58.703271	75.70	undecided
+108	301	65536	4294967357	90.05	17.59	true	ethan johnson	2013-03-01 09:11:58.703271	75.7	undecided
 27	405	65536	4294967508	82.24	29.41	true	oscar ovid	2013-03-01 09:11:58.703166	16.85	biology
 42	495	65536	4294967431	43.57	46.81	false	tom johnson	2013-03-01 09:11:58.703245	62.25	american history
 118	497	65536	4294967381	50.32	12.72	false	david nixon	2013-03-01 09:11:58.703285	83.48	values clariffication
diff --git a/ql/src/test/results/clientpositive/spark/vector_decimal_aggregate.q.out b/ql/src/test/results/clientpositive/spark/vector_decimal_aggregate.q.out
index d8b2b10..3449fe8 100644
--- a/ql/src/test/results/clientpositive/spark/vector_decimal_aggregate.q.out
+++ b/ql/src/test/results/clientpositive/spark/vector_decimal_aggregate.q.out
@@ -111,14 +111,14 @@ POSTHOOK: query: SELECT cint,
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_vgby
 #### A masked pattern was here ####
--3728	6	5831542.2692483780	-3367.6517567568	5817556.0411483778	6	6984454.21109769200000	-4033.44576923076900	6967702.86724384584710
--563	2	-515.6210729730	-3367.6517567568	-3883.2728297298	2	-617.56077692307690	-4033.44576923076900	-4651.00654615384590
-253665376	1024	9767.0054054054	-9779.5486486487	-347484.0818378374	1024	11697.96923076923100	-11712.99230769231000	-416182.64030769233089
-528534767	1024	5831542.2692483780	-9777.1594594595	11646372.8607481068	1024	6984454.21109769200000	-11710.13076923077100	13948892.79980307629003
-626923679	1024	9723.4027027027	-9778.9513513514	10541.0525297287	1024	11645.74615384615400	-11712.27692307692300	12625.04759999997746
-6981	3	5831542.2692483780	-515.6210729730	5830511.0271024320	3	6984454.21109769200000	-617.56077692307690	6983219.08954384584620
-762	2	5831542.2692483780	1531.2194054054	5833073.4886537834	2	6984454.21109769200000	1833.94569230769250	6986288.15678999969250
-NULL	3072	9318.4351351351	-4298.1513513514	5018444.1081079808	3072	11160.71538461538500	-5147.90769230769300	6010604.30769230735360
+-3728	6	5831542.269248378	-3367.6517567568	5817556.0411483778	6	6984454.211097692	-4033.445769230769	6967702.8672438458471
+-563	2	-515.621072973	-3367.6517567568	-3883.2728297298	2	-617.5607769230769	-4033.445769230769	-4651.0065461538459
+253665376	1024	9767.0054054054	-9779.5486486487	-347484.0818378374	1024	11697.969230769231	-11712.99230769231	-416182.64030769233089
+528534767	1024	5831542.269248378	-9777.1594594595	11646372.8607481068	1024	6984454.211097692	-11710.130769230771	13948892.79980307629003
+626923679	1024	9723.4027027027	-9778.9513513514	10541.0525297287	1024	11645.746153846154	-11712.276923076923	12625.04759999997746
+6981	3	5831542.269248378	-515.621072973	5830511.027102432	3	6984454.211097692	-617.5607769230769	6983219.0895438458462
+762	2	5831542.269248378	1531.2194054054	5833073.4886537834	2	6984454.211097692	1833.9456923076925	6986288.1567899996925
+NULL	3072	9318.4351351351	-4298.1513513514	5018444.1081079808	3072	11160.715384615385	-5147.907692307693	6010604.3076923073536
 PREHOOK: query: EXPLAIN SELECT cint,
     COUNT(cdecimal1), MAX(cdecimal1), MIN(cdecimal1), SUM(cdecimal1), AVG(cdecimal1), STDDEV_POP(cdecimal1), STDDEV_SAMP(cdecimal1),
     COUNT(cdecimal2), MAX(cdecimal2), MIN(cdecimal2), SUM(cdecimal2), AVG(cdecimal2), STDDEV_POP(cdecimal2), STDDEV_SAMP(cdecimal2)
@@ -213,11 +213,11 @@ POSTHOOK: query: SELECT cint,
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_vgby
 #### A masked pattern was here ####
--3728	6	5831542.2692483780	-3367.6517567568	5817556.0411483778	969592.67352472963333	2174330.2092403853	2381859.406131774	6	6984454.21109769200000	-4033.44576923076900	6967702.86724384584710	1161283.811207307641183333	2604201.2704476737	2852759.5602156054
--563	2	-515.6210729730	-3367.6517567568	-3883.2728297298	-1941.63641486490000	1426.0153418918999	2016.6902366556308	2	-617.56077692307690	-4033.44576923076900	-4651.00654615384590	-2325.503273076922950000	1707.9424961538462	2415.395441814127
-253665376	1024	9767.0054054054	-9779.5486486487	-347484.0818378374	-339.33992366976309	5708.9563478862	5711.745967572779	1024	11697.96923076923100	-11712.99230769231000	-416182.64030769233089	-406.428359675480791885	6837.632716002934	6840.973851172274
-528534767	1024	5831542.2692483780	-9777.1594594595	11646372.8607481068	11373.41099682432305	257528.92988206653	257654.7686043977	1024	6984454.21109769200000	-11710.13076923077100	13948892.79980307629003	13621.965624807691689482	308443.1074570801	308593.82484083984
-626923679	1024	9723.4027027027	-9778.9513513514	10541.0525297287	10.29399661106318	5742.09145323734	5744.897264034267	1024	11645.74615384615400	-11712.27692307692300	12625.04759999997746	12.329148046874977988	6877.318722794877	6880.679250101603
-6981	3	5831542.2692483780	-515.6210729730	5830511.0271024320	1943503.67570081066667	2749258.455012492	3367140.1929065133	3	6984454.21109769200000	-617.56077692307690	6983219.08954384584620	2327739.696514615282066667	3292794.4113115156	4032833.0678006653
-762	2	5831542.2692483780	1531.2194054054	5833073.4886537834	2916536.74432689170000	2915005.5249214866	4122440.3477364695	2	6984454.21109769200000	1833.94569230769250	6986288.15678999969250	3493144.078394999846250000	3491310.1327026924	4937458.140118758
-NULL	3072	9318.4351351351	-4298.1513513514	5018444.1081079808	1633.60810810806667	5695.483082135364	5696.4103077145055	3072	11160.71538461538500	-5147.90769230769300	6010604.30769230735360	1956.576923076922966667	6821.495748565159	6822.606289190924
+-3728	6	5831542.269248378	-3367.6517567568	5817556.0411483778	969592.67352472963333	2174330.2092403853	2381859.406131774	6	6984454.211097692	-4033.445769230769	6967702.8672438458471	1161283.811207307641183333	2604201.2704476737	2852759.5602156054
+-563	2	-515.621072973	-3367.6517567568	-3883.2728297298	-1941.6364148649	1426.0153418918999	2016.6902366556308	2	-617.5607769230769	-4033.445769230769	-4651.0065461538459	-2325.50327307692295	1707.9424961538462	2415.395441814127
+253665376	1024	9767.0054054054	-9779.5486486487	-347484.0818378374	-339.33992366976309	5708.9563478862	5711.745967572779	1024	11697.969230769231	-11712.99230769231	-416182.64030769233089	-406.428359675480791885	6837.632716002934	6840.973851172274
+528534767	1024	5831542.269248378	-9777.1594594595	11646372.8607481068	11373.41099682432305	257528.92988206653	257654.7686043977	1024	6984454.211097692	-11710.130769230771	13948892.79980307629003	13621.965624807691689482	308443.1074570801	308593.82484083984
+626923679	1024	9723.4027027027	-9778.9513513514	10541.0525297287	10.29399661106318	5742.09145323734	5744.897264034267	1024	11645.746153846154	-11712.276923076923	12625.04759999997746	12.329148046874977988	6877.318722794877	6880.679250101603
+6981	3	5831542.269248378	-515.621072973	5830511.027102432	1943503.67570081066667	2749258.455012492	3367140.1929065133	3	6984454.211097692	-617.5607769230769	6983219.0895438458462	2327739.696514615282066667	3292794.4113115156	4032833.0678006653
+762	2	5831542.269248378	1531.2194054054	5833073.4886537834	2916536.7443268917	2915005.5249214866	4122440.3477364695	2	6984454.211097692	1833.9456923076925	6986288.1567899996925	3493144.07839499984625	3491310.1327026924	4937458.140118758
+NULL	3072	9318.4351351351	-4298.1513513514	5018444.1081079808	1633.60810810806667	5695.483082135364	5696.4103077145055	3072	11160.715384615385	-5147.907692307693	6010604.3076923073536	1956.576923076922966667	6821.495748565159	6822.606289190924
diff --git a/ql/src/test/results/clientpositive/spark/vector_decimal_mapjoin.q.out b/ql/src/test/results/clientpositive/spark/vector_decimal_mapjoin.q.out
index 5cfbdf8..ffefc2e 100644
--- a/ql/src/test/results/clientpositive/spark/vector_decimal_mapjoin.q.out
+++ b/ql/src/test/results/clientpositive/spark/vector_decimal_mapjoin.q.out
@@ -108,57 +108,57 @@ POSTHOOK: query: SELECT l.cint, r.cint, l.cdecimal1, r.cdecimal2
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_mapjoin
 #### A masked pattern was here ####
-6981	6981	-515.6210729730	-617.56077692307690
-6981	6981	-515.6210729730	-617.56077692307690
-6981	6981	-515.6210729730	-617.56077692307690
-6981	6981	-515.6210729730	-617.56077692307690
-6981	6981	-515.6210729730	6984454.21109769200000
-6981	6981	-515.6210729730	6984454.21109769200000
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	5831542.2692483780	-617.56077692307690
-6981	6981	5831542.2692483780	-617.56077692307690
-6981	6981	5831542.2692483780	6984454.21109769200000
-6981	6981	5831542.2692483780	NULL
-6981	6981	5831542.2692483780	NULL
-6981	6981	5831542.2692483780	NULL
-6981	6981	5831542.2692483780	NULL
-6981	6981	5831542.2692483780	NULL
-6981	6981	5831542.2692483780	NULL
-6981	6981	5831542.2692483780	NULL
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	6984454.21109769200000
-6981	6981	NULL	6984454.21109769200000
-6981	6981	NULL	6984454.21109769200000
-6981	6981	NULL	6984454.21109769200000
-6981	6981	NULL	6984454.21109769200000
-6981	6981	NULL	6984454.21109769200000
-6981	6981	NULL	6984454.21109769200000
+6981	6981	-515.621072973	-617.5607769230769
+6981	6981	-515.621072973	-617.5607769230769
+6981	6981	-515.621072973	-617.5607769230769
+6981	6981	-515.621072973	-617.5607769230769
+6981	6981	-515.621072973	6984454.211097692
+6981	6981	-515.621072973	6984454.211097692
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	5831542.269248378	-617.5607769230769
+6981	6981	5831542.269248378	-617.5607769230769
+6981	6981	5831542.269248378	6984454.211097692
+6981	6981	5831542.269248378	NULL
+6981	6981	5831542.269248378	NULL
+6981	6981	5831542.269248378	NULL
+6981	6981	5831542.269248378	NULL
+6981	6981	5831542.269248378	NULL
+6981	6981	5831542.269248378	NULL
+6981	6981	5831542.269248378	NULL
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	6984454.211097692
+6981	6981	NULL	6984454.211097692
+6981	6981	NULL	6984454.211097692
+6981	6981	NULL	6984454.211097692
+6981	6981	NULL	6984454.211097692
+6981	6981	NULL	6984454.211097692
+6981	6981	NULL	6984454.211097692
 6981	6981	NULL	NULL
 6981	6981	NULL	NULL
 6981	6981	NULL	NULL
diff --git a/ql/src/test/results/clientpositive/sum_expr_with_order.q.out b/ql/src/test/results/clientpositive/sum_expr_with_order.q.out
index 5e00930..00318e8 100644
--- a/ql/src/test/results/clientpositive/sum_expr_with_order.q.out
+++ b/ql/src/test/results/clientpositive/sum_expr_with_order.q.out
@@ -12,4 +12,4 @@ order by c1
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
 #### A masked pattern was here ####
-13009100.000
+13009100
diff --git a/ql/src/test/results/clientpositive/tez/mapjoin_decimal.q.out b/ql/src/test/results/clientpositive/tez/mapjoin_decimal.q.out
index 8c95902..8cbc573 100644
--- a/ql/src/test/results/clientpositive/tez/mapjoin_decimal.q.out
+++ b/ql/src/test/results/clientpositive/tez/mapjoin_decimal.q.out
@@ -149,112 +149,112 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@t1
 POSTHOOK: Input: default@t2
 #### A masked pattern was here ####
-14.00	14
-14.00	14
-14.00	14
-14.00	14
-14.00	14
-14.00	14
-14.00	14
-14.00	14
-14.00	14
-17.00	17
-17.00	17
-17.00	17
-17.00	17
-17.00	17
-17.00	17
-17.00	17
-17.00	17
-17.00	17
-17.00	17
-45.00	45
-45.00	45
-45.00	45
-45.00	45
-45.00	45
-6.00	6
-6.00	6
-6.00	6
-6.00	6
-6.00	6
-6.00	6
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-70.00	70
-70.00	70
-70.00	70
-70.00	70
-70.00	70
-70.00	70
-70.00	70
-79.00	79
-79.00	79
-79.00	79
-79.00	79
-79.00	79
-79.00	79
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
+14	14
+14	14
+14	14
+14	14
+14	14
+14	14
+14	14
+14	14
+14	14
+17	17
+17	17
+17	17
+17	17
+17	17
+17	17
+17	17
+17	17
+17	17
+17	17
+45	45
+45	45
+45	45
+45	45
+45	45
+6	6
+6	6
+6	6
+6	6
+6	6
+6	6
+62	62
+62	62
+62	62
+62	62
+62	62
+62	62
+62	62
+62	62
+62	62
+62	62
+62	62
+62	62
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+70	70
+70	70
+70	70
+70	70
+70	70
+70	70
+70	70
+79	79
+79	79
+79	79
+79	79
+79	79
+79	79
+89	89
+89	89
+89	89
+89	89
+89	89
+89	89
+89	89
+89	89
+89	89
+89	89
+89	89
+89	89
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
 PREHOOK: query: select t1.dec, t2.dec from t1 join t2 on (t1.dec=t2.dec)
 PREHOOK: type: QUERY
 PREHOOK: Input: default@t1
@@ -265,109 +265,109 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@t1
 POSTHOOK: Input: default@t2
 #### A masked pattern was here ####
-14.00	14
-14.00	14
-14.00	14
-14.00	14
-14.00	14
-14.00	14
-14.00	14
-14.00	14
-14.00	14
-17.00	17
-17.00	17
-17.00	17
-17.00	17
-17.00	17
-17.00	17
-17.00	17
-17.00	17
-17.00	17
-17.00	17
-45.00	45
-45.00	45
-45.00	45
-45.00	45
-45.00	45
-6.00	6
-6.00	6
-6.00	6
-6.00	6
-6.00	6
-6.00	6
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-62.00	62
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-64.00	64
-70.00	70
-70.00	70
-70.00	70
-70.00	70
-70.00	70
-70.00	70
-70.00	70
-79.00	79
-79.00	79
-79.00	79
-79.00	79
-79.00	79
-79.00	79
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-89.00	89
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
-9.00	9
+14	14
+14	14
+14	14
+14	14
+14	14
+14	14
+14	14
+14	14
+14	14
+17	17
+17	17
+17	17
+17	17
+17	17
+17	17
+17	17
+17	17
+17	17
+17	17
+45	45
+45	45
+45	45
+45	45
+45	45
+6	6
+6	6
+6	6
+6	6
+6	6
+6	6
+62	62
+62	62
+62	62
+62	62
+62	62
+62	62
+62	62
+62	62
+62	62
+62	62
+62	62
+62	62
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+64	64
+70	70
+70	70
+70	70
+70	70
+70	70
+70	70
+70	70
+79	79
+79	79
+79	79
+79	79
+79	79
+79	79
+89	89
+89	89
+89	89
+89	89
+89	89
+89	89
+89	89
+89	89
+89	89
+89	89
+89	89
+89	89
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
+9	9
diff --git a/ql/src/test/results/clientpositive/tez/update_all_types.q.out b/ql/src/test/results/clientpositive/tez/update_all_types.q.out
index 5413de2..0e268b9 100644
--- a/ql/src/test/results/clientpositive/tez/update_all_types.q.out
+++ b/ql/src/test/results/clientpositive/tez/update_all_types.q.out
@@ -87,16 +87,16 @@ POSTHOOK: query: select * from acid_uat order by i
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@acid_uat
 #### A masked pattern was here ####
-11	NULL	-1073279343	-1595604468	11.0	NULL	11.00	1969-12-31 16:00:02.351	NULL	oj1YrV5Wa	oj1YrV5Wa	P76636jJ6qM17d7DIy                  	true
+11	NULL	-1073279343	-1595604468	11.0	NULL	11	1969-12-31 16:00:02.351	NULL	oj1YrV5Wa	oj1YrV5Wa	P76636jJ6qM17d7DIy                  	true
 NULL	-7382	-1073051226	-1887561756	NULL	-7382.0	NULL	NULL	1969-12-31	A34p7oRr2WvUJNf	A34p7oRr2WvUJNf	4hA4KQj2vD3fI6gX82220d              	false
-11	NULL	-1072910839	2048385991	11.0	NULL	11.00	1969-12-31 16:00:02.351	NULL	0iqrc5	0iqrc5	KbaDXiN85adbHRx58v                  	false
+11	NULL	-1072910839	2048385991	11.0	NULL	11	1969-12-31 16:00:02.351	NULL	0iqrc5	0iqrc5	KbaDXiN85adbHRx58v                  	false
 NULL	8373	-1072081801	1864027286	NULL	8373.0	NULL	NULL	1969-12-31	dPkN74F7	dPkN74F7	4KWs6gw7lv2WYd66P                   	true
 NULL	-5470	-1072076362	1864027286	NULL	-5470.0	NULL	NULL	1969-12-31	2uLyD28144vklju213J1mr	2uLyD28144vklju213J1mr	4KWs6gw7lv2WYd66P                   	true
--51	NULL	-1071480828	-1401575336	-51.0	NULL	-51.00	1969-12-31 16:00:08.451	NULL	aw724t8c5558x2xneC624	aw724t8c5558x2xneC624	4uE7l74tESBiKfu7c8wM7GA             	true
-8	NULL	-1071363017	1349676361	8.0	NULL	8.00	1969-12-31 16:00:15.892	NULL	Anj0oF	Anj0oF	IwE1G7Qb0B1NEfV030g                 	true
+-51	NULL	-1071480828	-1401575336	-51.0	NULL	-51	1969-12-31 16:00:08.451	NULL	aw724t8c5558x2xneC624	aw724t8c5558x2xneC624	4uE7l74tESBiKfu7c8wM7GA             	true
+8	NULL	-1071363017	1349676361	8.0	NULL	8	1969-12-31 16:00:15.892	NULL	Anj0oF	Anj0oF	IwE1G7Qb0B1NEfV030g                 	true
 NULL	-741	-1070883071	-1645852809	NULL	-741.0	NULL	NULL	1969-12-31	0ruyd6Y50JpdGRf6HqD	0ruyd6Y50JpdGRf6HqD	xH7445Rals48VOulSyR5F               	false
 NULL	-947	-1070551679	1864027286	NULL	-947.0	NULL	NULL	1969-12-31	iUR3Q	iUR3Q	4KWs6gw7lv2WYd66P                   	false
-11	NULL	-1069736047	-453772520	11.0	NULL	11.00	1969-12-31 16:00:02.351	NULL	k17Am8uPHWk02cEf1jet	k17Am8uPHWk02cEf1jet	qrXLLNX1                            	true
+11	NULL	-1069736047	-453772520	11.0	NULL	11	1969-12-31 16:00:02.351	NULL	k17Am8uPHWk02cEf1jet	k17Am8uPHWk02cEf1jet	qrXLLNX1                            	true
 PREHOOK: query: update acid_uat set
     ti = 1,
     si = 2,
@@ -141,15 +141,15 @@ POSTHOOK: query: select * from acid_uat order by i
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@acid_uat
 #### A masked pattern was here ####
-11	NULL	-1073279343	-1595604468	11.0	NULL	11.00	1969-12-31 16:00:02.351	NULL	oj1YrV5Wa	oj1YrV5Wa	P76636jJ6qM17d7DIy                  	true
+11	NULL	-1073279343	-1595604468	11.0	NULL	11	1969-12-31 16:00:02.351	NULL	oj1YrV5Wa	oj1YrV5Wa	P76636jJ6qM17d7DIy                  	true
 NULL	-7382	-1073051226	-1887561756	NULL	-7382.0	NULL	NULL	1969-12-31	A34p7oRr2WvUJNf	A34p7oRr2WvUJNf	4hA4KQj2vD3fI6gX82220d              	false
-11	NULL	-1072910839	2048385991	11.0	NULL	11.00	1969-12-31 16:00:02.351	NULL	0iqrc5	0iqrc5	KbaDXiN85adbHRx58v                  	false
+11	NULL	-1072910839	2048385991	11.0	NULL	11	1969-12-31 16:00:02.351	NULL	0iqrc5	0iqrc5	KbaDXiN85adbHRx58v                  	false
 NULL	8373	-1072081801	1864027286	NULL	8373.0	NULL	NULL	1969-12-31	dPkN74F7	dPkN74F7	4KWs6gw7lv2WYd66P                   	true
 NULL	-5470	-1072076362	1864027286	NULL	-5470.0	NULL	NULL	1969-12-31	2uLyD28144vklju213J1mr	2uLyD28144vklju213J1mr	4KWs6gw7lv2WYd66P                   	true
--51	NULL	-1071480828	-1401575336	-51.0	NULL	-51.00	1969-12-31 16:00:08.451	NULL	aw724t8c5558x2xneC624	aw724t8c5558x2xneC624	4uE7l74tESBiKfu7c8wM7GA             	true
-8	NULL	-1071363017	1349676361	8.0	NULL	8.00	1969-12-31 16:00:15.892	NULL	Anj0oF	Anj0oF	IwE1G7Qb0B1NEfV030g                 	true
+-51	NULL	-1071480828	-1401575336	-51.0	NULL	-51	1969-12-31 16:00:08.451	NULL	aw724t8c5558x2xneC624	aw724t8c5558x2xneC624	4uE7l74tESBiKfu7c8wM7GA             	true
+8	NULL	-1071363017	1349676361	8.0	NULL	8	1969-12-31 16:00:15.892	NULL	Anj0oF	Anj0oF	IwE1G7Qb0B1NEfV030g                 	true
 NULL	-947	-1070551679	1864027286	NULL	-947.0	NULL	NULL	1969-12-31	iUR3Q	iUR3Q	4KWs6gw7lv2WYd66P                   	false
-11	NULL	-1069736047	-453772520	11.0	NULL	11.00	1969-12-31 16:00:02.351	NULL	k17Am8uPHWk02cEf1jet	k17Am8uPHWk02cEf1jet	qrXLLNX1                            	true
+11	NULL	-1069736047	-453772520	11.0	NULL	11	1969-12-31 16:00:02.351	NULL	k17Am8uPHWk02cEf1jet	k17Am8uPHWk02cEf1jet	qrXLLNX1                            	true
 1	2	3	4	3.14	6.28	5.99	NULL	2014-09-01	its a beautiful day in the neighbhorhood	a beautiful day for a neighbor	wont you be mine                    	true
 PREHOOK: query: update acid_uat set
   ti = ti * 2,
@@ -175,13 +175,13 @@ POSTHOOK: query: select * from acid_uat order by i
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@acid_uat
 #### A masked pattern was here ####
-11	NULL	-1073279343	-1595604468	11.0	NULL	11.00	1969-12-31 16:00:02.351	NULL	oj1YrV5Wa	oj1YrV5Wa	P76636jJ6qM17d7DIy                  	true
+11	NULL	-1073279343	-1595604468	11.0	NULL	11	1969-12-31 16:00:02.351	NULL	oj1YrV5Wa	oj1YrV5Wa	P76636jJ6qM17d7DIy                  	true
 NULL	-7382	-1073051226	-1887561756	NULL	-7382.0	NULL	NULL	1969-12-31	A34p7oRr2WvUJNf	A34p7oRr2WvUJNf	4hA4KQj2vD3fI6gX82220d              	false
-11	NULL	-1072910839	2048385991	11.0	NULL	11.00	1969-12-31 16:00:02.351	NULL	0iqrc5	0iqrc5	KbaDXiN85adbHRx58v                  	false
+11	NULL	-1072910839	2048385991	11.0	NULL	11	1969-12-31 16:00:02.351	NULL	0iqrc5	0iqrc5	KbaDXiN85adbHRx58v                  	false
 NULL	8373	-1072081801	1864027286	NULL	8373.0	NULL	NULL	1969-12-31	dPkN74F7	dPkN74F7	4KWs6gw7lv2WYd66P                   	true
 NULL	-5470	-1072076362	1864027286	NULL	-5470.0	NULL	NULL	1969-12-31	2uLyD28144vklju213J1mr	2uLyD28144vklju213J1mr	4KWs6gw7lv2WYd66P                   	true
--102	-51	-1071480828	-1401575336	-51.0	-51.0	-51.00	1969-12-31 16:00:08.451	NULL	aw724t8c5558x2xneC624	aw724t8c5558x2xneC624	4uE7l74tESBiKfu7c8wM7GA             	true
-8	NULL	-1071363017	1349676361	8.0	NULL	8.00	1969-12-31 16:00:15.892	NULL	Anj0oF	Anj0oF	IwE1G7Qb0B1NEfV030g                 	true
+-102	-51	-1071480828	-1401575336	-51.0	-51.0	-51	1969-12-31 16:00:08.451	NULL	aw724t8c5558x2xneC624	aw724t8c5558x2xneC624	4uE7l74tESBiKfu7c8wM7GA             	true
+8	NULL	-1071363017	1349676361	8.0	NULL	8	1969-12-31 16:00:15.892	NULL	Anj0oF	Anj0oF	IwE1G7Qb0B1NEfV030g                 	true
 NULL	-947	-1070551679	1864027286	NULL	-947.0	NULL	NULL	1969-12-31	iUR3Q	iUR3Q	4KWs6gw7lv2WYd66P                   	false
-11	NULL	-1069736047	-453772520	11.0	NULL	11.00	1969-12-31 16:00:02.351	NULL	k17Am8uPHWk02cEf1jet	k17Am8uPHWk02cEf1jet	qrXLLNX1                            	true
+11	NULL	-1069736047	-453772520	11.0	NULL	11	1969-12-31 16:00:02.351	NULL	k17Am8uPHWk02cEf1jet	k17Am8uPHWk02cEf1jet	qrXLLNX1                            	true
 1	2	3	4	3.14	6.28	5.99	NULL	2014-09-01	its a beautiful day in the neighbhorhood	a beautiful day for a neighbor	wont you be mine                    	true
diff --git a/ql/src/test/results/clientpositive/tez/vector_aggregate_9.q.out b/ql/src/test/results/clientpositive/tez/vector_aggregate_9.q.out
index f815d6b..9645b13 100644
--- a/ql/src/test/results/clientpositive/tez/vector_aggregate_9.q.out
+++ b/ql/src/test/results/clientpositive/tez/vector_aggregate_9.q.out
@@ -144,13 +144,17 @@ STAGE PLANS:
                 mode: mergepartial
                 outputColumnNames: _col0, _col1, _col2, _col3
                 Statistics: Num rows: 1 Data size: 448 Basic stats: COMPLETE Column stats: NONE
-                File Output Operator
-                  compressed: false
+                Select Operator
+                  expressions: _col0 (type: decimal(38,18)), _col1 (type: decimal(38,18)), _col2 (type: decimal(38,18)), _col3 (type: decimal(38,18))
+                  outputColumnNames: _col0, _col1, _col2, _col3
                   Statistics: Num rows: 1 Data size: 448 Basic stats: COMPLETE Column stats: NONE
-                  table:
-                      input format: org.apache.hadoop.mapred.TextInputFormat
-                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
+                  File Output Operator
+                    compressed: false
+                    Statistics: Num rows: 1 Data size: 448 Basic stats: COMPLETE Column stats: NONE
+                    table:
+                        input format: org.apache.hadoop.mapred.TextInputFormat
+                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
+                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
 
   Stage: Stage-0
     Fetch Operator
@@ -166,4 +170,4 @@ POSTHOOK: query: select min(dc), max(dc), sum(dc), avg(dc) from vectortab2korc
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@vectortab2korc
 #### A masked pattern was here ####
--4997414117561.546875000000000000	4994550248722.298828000000000000	-10252745435816.024410000000000000	-5399023399.587163986308583465
+-4997414117561.546875	4994550248722.298828	-10252745435816.024410	-5399023399.587163986308583465
diff --git a/ql/src/test/results/clientpositive/tez/vector_between_in.q.out b/ql/src/test/results/clientpositive/tez/vector_between_in.q.out
index 909549b..61e215e 100644
--- a/ql/src/test/results/clientpositive/tez/vector_between_in.q.out
+++ b/ql/src/test/results/clientpositive/tez/vector_between_in.q.out
@@ -650,34 +650,34 @@ POSTHOOK: Input: default@decimal_date_test
 -18.5162162162
 -17.3216216216
 -16.7243243243
--16.1270270270
+-16.127027027
 -15.5297297297
 -10.7513513514
 -9.5567567568
 -8.3621621622
--5.9729729730
+-5.972972973
 -3.5837837838
 4.1810810811
 4.7783783784
 4.7783783784
 5.3756756757
-5.9729729730
-5.9729729730
+5.972972973
+5.972972973
 11.3486486486
 11.3486486486
 11.9459459459
 14.9324324324
 19.1135135135
 20.3081081081
-22.1000000000
+22.1
 24.4891891892
 33.4486486486
 34.6432432432
 40.0189189189
 42.4081081081
 43.0054054054
-44.2000000000
-44.2000000000
+44.2
+44.2
 44.7972972973
 45.9918918919
 PREHOOK: query: SELECT COUNT(*) FROM decimal_date_test WHERE cdecimal1 NOT BETWEEN -2000 AND 4390.1351351351
diff --git a/ql/src/test/results/clientpositive/tez/vector_cast_constant.q.java1.7.out b/ql/src/test/results/clientpositive/tez/vector_cast_constant.q.java1.7.out
index 5b3c122..ac8e02b 100644
--- a/ql/src/test/results/clientpositive/tez/vector_cast_constant.q.java1.7.out
+++ b/ql/src/test/results/clientpositive/tez/vector_cast_constant.q.java1.7.out
@@ -204,13 +204,13 @@ POSTHOOK: query: SELECT
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@over1korc
 #### A masked pattern was here ####
-65536	50.0	50.0	50.0000
-65537	50.0	50.0	50.0000
-65538	50.0	50.0	50.0000
-65539	50.0	50.0	50.0000
-65540	50.0	50.0	50.0000
-65541	50.0	50.0	50.0000
-65542	50.0	50.0	50.0000
-65543	50.0	50.0	50.0000
-65544	50.0	50.0	50.0000
-65545	50.0	50.0	50.0000
+65536	50.0	50.0	50
+65537	50.0	50.0	50
+65538	50.0	50.0	50
+65539	50.0	50.0	50
+65540	50.0	50.0	50
+65541	50.0	50.0	50
+65542	50.0	50.0	50
+65543	50.0	50.0	50
+65544	50.0	50.0	50
+65545	50.0	50.0	50
diff --git a/ql/src/test/results/clientpositive/tez/vector_data_types.q.out b/ql/src/test/results/clientpositive/tez/vector_data_types.q.out
index 3566a8c..643c97a 100644
--- a/ql/src/test/results/clientpositive/tez/vector_data_types.q.out
+++ b/ql/src/test/results/clientpositive/tez/vector_data_types.q.out
@@ -155,7 +155,7 @@ POSTHOOK: query: SELECT t, si, i, b, f, d, bo, s, ts, dec, bin FROM over1korc OR
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@over1korc
 #### A masked pattern was here ####
-108	301	65536	4294967357	90.05	17.59	true	ethan johnson	2013-03-01 09:11:58.703271	75.70	undecided
+108	301	65536	4294967357	90.05	17.59	true	ethan johnson	2013-03-01 09:11:58.703271	75.7	undecided
 118	497	65536	4294967381	50.32	12.72	false	david nixon	2013-03-01 09:11:58.703285	83.48	values clariffication
 18	280	65536	4294967320	32.92	45.94	false	holly white	2013-03-01 09:11:58.703086	58.86	topology
 69	489	65536	4294967404	33.52	17.99	false	oscar ichabod	2013-03-01 09:11:58.703247	32.68	topology
@@ -248,7 +248,7 @@ POSTHOOK: query: SELECT t, si, i, b, f, d, bo, s, ts, dec, bin FROM over1korc OR
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@over1korc
 #### A masked pattern was here ####
-108	301	65536	4294967357	90.05	17.59	true	ethan johnson	2013-03-01 09:11:58.703271	75.70	undecided
+108	301	65536	4294967357	90.05	17.59	true	ethan johnson	2013-03-01 09:11:58.703271	75.7	undecided
 118	497	65536	4294967381	50.32	12.72	false	david nixon	2013-03-01 09:11:58.703285	83.48	values clariffication
 18	280	65536	4294967320	32.92	45.94	false	holly white	2013-03-01 09:11:58.703086	58.86	topology
 69	489	65536	4294967404	33.52	17.99	false	oscar ichabod	2013-03-01 09:11:58.703247	32.68	topology
diff --git a/ql/src/test/results/clientpositive/tez/vector_decimal_2.q.out b/ql/src/test/results/clientpositive/tez/vector_decimal_2.q.out
index 20bb1fd..01f3f90 100644
--- a/ql/src/test/results/clientpositive/tez/vector_decimal_2.q.out
+++ b/ql/src/test/results/clientpositive/tez/vector_decimal_2.q.out
@@ -1193,7 +1193,7 @@ POSTHOOK: query: select cast(cast('2012-12-19 11:12:19.1234567' as timestamp) as
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_2
 #### A masked pattern was here ####
-1355944339.12345670
+1355944339.1234567
 PREHOOK: query: explain
 select cast(true as decimal) as c from decimal_2 order by c
 PREHOOK: type: QUERY
@@ -1618,7 +1618,7 @@ POSTHOOK: query: select cast(0.99999999999999999999 as decimal(20,19)) as c from
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_2
 #### A masked pattern was here ####
-1.0000000000000000000
+1
 PREHOOK: query: explain
 select cast('0.99999999999999999999' as decimal(20,20)) as c from decimal_2 order by c
 PREHOOK: type: QUERY
diff --git a/ql/src/test/results/clientpositive/tez/vector_decimal_3.q.out b/ql/src/test/results/clientpositive/tez/vector_decimal_3.q.out
index eea91bb..75f872e 100644
--- a/ql/src/test/results/clientpositive/tez/vector_decimal_3.q.out
+++ b/ql/src/test/results/clientpositive/tez/vector_decimal_3.q.out
@@ -47,43 +47,43 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_3
 #### A masked pattern was here ####
 NULL	0
--1234567890.123456789000000000	-1234567890
--4400.000000000000000000	4400
--1255.490000000000000000	-1255
--1.122000000000000000	-11
--1.120000000000000000	-1
--1.120000000000000000	-1
--0.333000000000000000	0
--0.330000000000000000	0
--0.300000000000000000	0
-0.000000000000000000	0
-0.000000000000000000	0
-0.000000000000000000	0
-0.010000000000000000	0
-0.020000000000000000	0
-0.100000000000000000	0
-0.200000000000000000	0
-0.300000000000000000	0
-0.330000000000000000	0
-0.333000000000000000	0
-1.000000000000000000	1
-1.000000000000000000	1
-1.000000000000000000	1
-1.120000000000000000	1
-1.122000000000000000	1
-2.000000000000000000	2
-2.000000000000000000	2
-3.140000000000000000	3
-3.140000000000000000	3
-3.140000000000000000	3
-3.140000000000000000	4
-10.000000000000000000	10
-20.000000000000000000	20
-100.000000000000000000	100
-124.000000000000000000	124
-125.200000000000000000	125
-200.000000000000000000	200
-1234567890.123456780000000000	1234567890
+-1234567890.123456789	-1234567890
+-4400	4400
+-1255.49	-1255
+-1.122	-11
+-1.12	-1
+-1.12	-1
+-0.333	0
+-0.33	0
+-0.3	0
+0	0
+0	0
+0	0
+0.01	0
+0.02	0
+0.1	0
+0.2	0
+0.3	0
+0.33	0
+0.333	0
+1	1
+1	1
+1	1
+1.12	1
+1.122	1
+2	2
+2	2
+3.14	3
+3.14	3
+3.14	3
+3.14	4
+10	10
+20	20
+100	100
+124	124
+125.2	125
+200	200
+1234567890.12345678	1234567890
 PREHOOK: query: SELECT * FROM DECIMAL_3 ORDER BY key DESC, value DESC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_3
@@ -92,43 +92,43 @@ POSTHOOK: query: SELECT * FROM DECIMAL_3 ORDER BY key DESC, value DESC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_3
 #### A masked pattern was here ####
-1234567890.123456780000000000	1234567890
-200.000000000000000000	200
-125.200000000000000000	125
-124.000000000000000000	124
-100.000000000000000000	100
-20.000000000000000000	20
-10.000000000000000000	10
-3.140000000000000000	4
-3.140000000000000000	3
-3.140000000000000000	3
-3.140000000000000000	3
-2.000000000000000000	2
-2.000000000000000000	2
-1.122000000000000000	1
-1.120000000000000000	1
-1.000000000000000000	1
-1.000000000000000000	1
-1.000000000000000000	1
-0.333000000000000000	0
-0.330000000000000000	0
-0.300000000000000000	0
-0.200000000000000000	0
-0.100000000000000000	0
-0.020000000000000000	0
-0.010000000000000000	0
-0.000000000000000000	0
-0.000000000000000000	0
-0.000000000000000000	0
--0.300000000000000000	0
--0.330000000000000000	0
--0.333000000000000000	0
--1.120000000000000000	-1
--1.120000000000000000	-1
--1.122000000000000000	-11
--1255.490000000000000000	-1255
--4400.000000000000000000	4400
--1234567890.123456789000000000	-1234567890
+1234567890.12345678	1234567890
+200	200
+125.2	125
+124	124
+100	100
+20	20
+10	10
+3.14	4
+3.14	3
+3.14	3
+3.14	3
+2	2
+2	2
+1.122	1
+1.12	1
+1	1
+1	1
+1	1
+0.333	0
+0.33	0
+0.3	0
+0.2	0
+0.1	0
+0.02	0
+0.01	0
+0	0
+0	0
+0	0
+-0.3	0
+-0.33	0
+-0.333	0
+-1.12	-1
+-1.12	-1
+-1.122	-11
+-1255.49	-1255
+-4400	4400
+-1234567890.123456789	-1234567890
 NULL	0
 PREHOOK: query: SELECT * FROM DECIMAL_3 ORDER BY key, value
 PREHOOK: type: QUERY
@@ -139,43 +139,43 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_3
 #### A masked pattern was here ####
 NULL	0
--1234567890.123456789000000000	-1234567890
--4400.000000000000000000	4400
--1255.490000000000000000	-1255
--1.122000000000000000	-11
--1.120000000000000000	-1
--1.120000000000000000	-1
--0.333000000000000000	0
--0.330000000000000000	0
--0.300000000000000000	0
-0.000000000000000000	0
-0.000000000000000000	0
-0.000000000000000000	0
-0.010000000000000000	0
-0.020000000000000000	0
-0.100000000000000000	0
-0.200000000000000000	0
-0.300000000000000000	0
-0.330000000000000000	0
-0.333000000000000000	0
-1.000000000000000000	1
-1.000000000000000000	1
-1.000000000000000000	1
-1.120000000000000000	1
-1.122000000000000000	1
-2.000000000000000000	2
-2.000000000000000000	2
-3.140000000000000000	3
-3.140000000000000000	3
-3.140000000000000000	3
-3.140000000000000000	4
-10.000000000000000000	10
-20.000000000000000000	20
-100.000000000000000000	100
-124.000000000000000000	124
-125.200000000000000000	125
-200.000000000000000000	200
-1234567890.123456780000000000	1234567890
+-1234567890.123456789	-1234567890
+-4400	4400
+-1255.49	-1255
+-1.122	-11
+-1.12	-1
+-1.12	-1
+-0.333	0
+-0.33	0
+-0.3	0
+0	0
+0	0
+0	0
+0.01	0
+0.02	0
+0.1	0
+0.2	0
+0.3	0
+0.33	0
+0.333	0
+1	1
+1	1
+1	1
+1.12	1
+1.122	1
+2	2
+2	2
+3.14	3
+3.14	3
+3.14	3
+3.14	4
+10	10
+20	20
+100	100
+124	124
+125.2	125
+200	200
+1234567890.12345678	1234567890
 PREHOOK: query: SELECT DISTINCT key FROM DECIMAL_3 ORDER BY key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_3
@@ -185,34 +185,34 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_3
 #### A masked pattern was here ####
 NULL
--1234567890.123456789000000000
--4400.000000000000000000
--1255.490000000000000000
--1.122000000000000000
--1.120000000000000000
--0.333000000000000000
--0.330000000000000000
--0.300000000000000000
-0.000000000000000000
-0.010000000000000000
-0.020000000000000000
-0.100000000000000000
-0.200000000000000000
-0.300000000000000000
-0.330000000000000000
-0.333000000000000000
-1.000000000000000000
-1.120000000000000000
-1.122000000000000000
-2.000000000000000000
-3.140000000000000000
-10.000000000000000000
-20.000000000000000000
-100.000000000000000000
-124.000000000000000000
-125.200000000000000000
-200.000000000000000000
-1234567890.123456780000000000
+-1234567890.123456789
+-4400
+-1255.49
+-1.122
+-1.12
+-0.333
+-0.33
+-0.3
+0
+0.01
+0.02
+0.1
+0.2
+0.3
+0.33
+0.333
+1
+1.12
+1.122
+2
+3.14
+10
+20
+100
+124
+125.2
+200
+1234567890.12345678
 PREHOOK: query: SELECT key, sum(value) FROM DECIMAL_3 GROUP BY key ORDER BY key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_3
@@ -222,34 +222,34 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_3
 #### A masked pattern was here ####
 NULL	0
--1234567890.123456789000000000	-1234567890
--4400.000000000000000000	4400
--1255.490000000000000000	-1255
--1.122000000000000000	-11
--1.120000000000000000	-2
--0.333000000000000000	0
--0.330000000000000000	0
--0.300000000000000000	0
-0.000000000000000000	0
-0.010000000000000000	0
-0.020000000000000000	0
-0.100000000000000000	0
-0.200000000000000000	0
-0.300000000000000000	0
-0.330000000000000000	0
-0.333000000000000000	0
-1.000000000000000000	3
-1.120000000000000000	1
-1.122000000000000000	1
-2.000000000000000000	4
-3.140000000000000000	13
-10.000000000000000000	10
-20.000000000000000000	20
-100.000000000000000000	100
-124.000000000000000000	124
-125.200000000000000000	125
-200.000000000000000000	200
-1234567890.123456780000000000	1234567890
+-1234567890.123456789	-1234567890
+-4400	4400
+-1255.49	-1255
+-1.122	-11
+-1.12	-2
+-0.333	0
+-0.33	0
+-0.3	0
+0	0
+0.01	0
+0.02	0
+0.1	0
+0.2	0
+0.3	0
+0.33	0
+0.333	0
+1	3
+1.12	1
+1.122	1
+2	4
+3.14	13
+10	10
+20	20
+100	100
+124	124
+125.2	125
+200	200
+1234567890.12345678	1234567890
 PREHOOK: query: SELECT value, sum(key) FROM DECIMAL_3 GROUP BY value ORDER BY value
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_3
@@ -258,23 +258,23 @@ POSTHOOK: query: SELECT value, sum(key) FROM DECIMAL_3 GROUP BY value ORDER BY v
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_3
 #### A masked pattern was here ####
--1234567890	-1234567890.123456789000000000
--1255	-1255.490000000000000000
--11	-1.122000000000000000
--1	-2.240000000000000000
-0	0.330000000000000000
-1	5.242000000000000000
-2	4.000000000000000000
-3	9.420000000000000000
-4	3.140000000000000000
-10	10.000000000000000000
-20	20.000000000000000000
-100	100.000000000000000000
-124	124.000000000000000000
-125	125.200000000000000000
-200	200.000000000000000000
-4400	-4400.000000000000000000
-1234567890	1234567890.123456780000000000
+-1234567890	-1234567890.123456789
+-1255	-1255.49
+-11	-1.122
+-1	-2.24
+0	0.33
+1	5.242
+2	4
+3	9.42
+4	3.14
+10	10
+20	20
+100	100
+124	124
+125	125.2
+200	200
+4400	-4400
+1234567890	1234567890.12345678
 PREHOOK: query: SELECT * FROM DECIMAL_3 a JOIN DECIMAL_3 b ON (a.key = b.key) ORDER BY a.key, a.value, b.value
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_3
@@ -283,71 +283,71 @@ POSTHOOK: query: SELECT * FROM DECIMAL_3 a JOIN DECIMAL_3 b ON (a.key = b.key) O
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_3
 #### A masked pattern was here ####
--1234567890.123456789000000000	-1234567890	-1234567890.123456789000000000	-1234567890
--4400.000000000000000000	4400	-4400.000000000000000000	4400
--1255.490000000000000000	-1255	-1255.490000000000000000	-1255
--1.122000000000000000	-11	-1.122000000000000000	-11
--1.120000000000000000	-1	-1.120000000000000000	-1
--1.120000000000000000	-1	-1.120000000000000000	-1
--1.120000000000000000	-1	-1.120000000000000000	-1
--1.120000000000000000	-1	-1.120000000000000000	-1
--0.333000000000000000	0	-0.333000000000000000	0
--0.330000000000000000	0	-0.330000000000000000	0
--0.300000000000000000	0	-0.300000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.010000000000000000	0	0.010000000000000000	0
-0.020000000000000000	0	0.020000000000000000	0
-0.100000000000000000	0	0.100000000000000000	0
-0.200000000000000000	0	0.200000000000000000	0
-0.300000000000000000	0	0.300000000000000000	0
-0.330000000000000000	0	0.330000000000000000	0
-0.333000000000000000	0	0.333000000000000000	0
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.120000000000000000	1	1.120000000000000000	1
-1.122000000000000000	1	1.122000000000000000	1
-2.000000000000000000	2	2.000000000000000000	2
-2.000000000000000000	2	2.000000000000000000	2
-2.000000000000000000	2	2.000000000000000000	2
-2.000000000000000000	2	2.000000000000000000	2
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	4
-3.140000000000000000	3	3.140000000000000000	4
-3.140000000000000000	3	3.140000000000000000	4
-3.140000000000000000	4	3.140000000000000000	3
-3.140000000000000000	4	3.140000000000000000	3
-3.140000000000000000	4	3.140000000000000000	3
-3.140000000000000000	4	3.140000000000000000	4
-10.000000000000000000	10	10.000000000000000000	10
-20.000000000000000000	20	20.000000000000000000	20
-100.000000000000000000	100	100.000000000000000000	100
-124.000000000000000000	124	124.000000000000000000	124
-125.200000000000000000	125	125.200000000000000000	125
-200.000000000000000000	200	200.000000000000000000	200
-1234567890.123456780000000000	1234567890	1234567890.123456780000000000	1234567890
+-1234567890.123456789	-1234567890	-1234567890.123456789	-1234567890
+-4400	4400	-4400	4400
+-1255.49	-1255	-1255.49	-1255
+-1.122	-11	-1.122	-11
+-1.12	-1	-1.12	-1
+-1.12	-1	-1.12	-1
+-1.12	-1	-1.12	-1
+-1.12	-1	-1.12	-1
+-0.333	0	-0.333	0
+-0.33	0	-0.33	0
+-0.3	0	-0.3	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0.01	0	0.01	0
+0.02	0	0.02	0
+0.1	0	0.1	0
+0.2	0	0.2	0
+0.3	0	0.3	0
+0.33	0	0.33	0
+0.333	0	0.333	0
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1.12	1	1.12	1
+1.122	1	1.122	1
+2	2	2	2
+2	2	2	2
+2	2	2	2
+2	2	2	2
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	4
+3.14	3	3.14	4
+3.14	3	3.14	4
+3.14	4	3.14	3
+3.14	4	3.14	3
+3.14	4	3.14	3
+3.14	4	3.14	4
+10	10	10	10
+20	20	20	20
+100	100	100	100
+124	124	124	124
+125.2	125	125.2	125
+200	200	200	200
+1234567890.12345678	1234567890	1234567890.12345678	1234567890
 PREHOOK: query: SELECT * FROM DECIMAL_3 WHERE key=3.14 ORDER BY key, value
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_3
@@ -356,10 +356,10 @@ POSTHOOK: query: SELECT * FROM DECIMAL_3 WHERE key=3.14 ORDER BY key, value
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_3
 #### A masked pattern was here ####
-3.140000000000000000	3
-3.140000000000000000	3
-3.140000000000000000	3
-3.140000000000000000	4
+3.14	3
+3.14	3
+3.14	3
+3.14	4
 PREHOOK: query: SELECT * FROM DECIMAL_3 WHERE key=3.140 ORDER BY key, value
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_3
@@ -368,10 +368,10 @@ POSTHOOK: query: SELECT * FROM DECIMAL_3 WHERE key=3.140 ORDER BY key, value
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_3
 #### A masked pattern was here ####
-3.140000000000000000	3
-3.140000000000000000	3
-3.140000000000000000	3
-3.140000000000000000	4
+3.14	3
+3.14	3
+3.14	3
+3.14	4
 PREHOOK: query: DROP TABLE DECIMAL_3_txt
 PREHOOK: type: DROPTABLE
 PREHOOK: Input: default@decimal_3_txt
diff --git a/ql/src/test/results/clientpositive/tez/vector_decimal_4.q.out b/ql/src/test/results/clientpositive/tez/vector_decimal_4.q.out
index c7d3d9e..613f5a8 100644
--- a/ql/src/test/results/clientpositive/tez/vector_decimal_4.q.out
+++ b/ql/src/test/results/clientpositive/tez/vector_decimal_4.q.out
@@ -57,43 +57,43 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_4_1
 #### A masked pattern was here ####
 NULL	0
--1234567890.1234567890000000000000000	-1234567890
--4400.0000000000000000000000000	4400
--1255.4900000000000000000000000	-1255
--1.1220000000000000000000000	-11
--1.1200000000000000000000000	-1
--1.1200000000000000000000000	-1
--0.3330000000000000000000000	0
--0.3300000000000000000000000	0
--0.3000000000000000000000000	0
-0.0000000000000000000000000	0
-0.0000000000000000000000000	0
-0.0000000000000000000000000	0
-0.0100000000000000000000000	0
-0.0200000000000000000000000	0
-0.1000000000000000000000000	0
-0.2000000000000000000000000	0
-0.3000000000000000000000000	0
-0.3300000000000000000000000	0
-0.3330000000000000000000000	0
+-1234567890.123456789	-1234567890
+-4400	4400
+-1255.49	-1255
+-1.122	-11
+-1.12	-1
+-1.12	-1
+-0.333	0
+-0.33	0
+-0.3	0
+0	0
+0	0
+0	0
+0.01	0
+0.02	0
+0.1	0
+0.2	0
+0.3	0
+0.33	0
+0.333	0
 0.9999999999999999999999999	1
-1.0000000000000000000000000	1
-1.0000000000000000000000000	1
-1.1200000000000000000000000	1
-1.1220000000000000000000000	1
-2.0000000000000000000000000	2
-2.0000000000000000000000000	2
-3.1400000000000000000000000	3
-3.1400000000000000000000000	3
-3.1400000000000000000000000	3
-3.1400000000000000000000000	4
-10.0000000000000000000000000	10
-20.0000000000000000000000000	20
-100.0000000000000000000000000	100
-124.0000000000000000000000000	124
-125.2000000000000000000000000	125
-200.0000000000000000000000000	200
-1234567890.1234567800000000000000000	1234567890
+1	1
+1	1
+1.12	1
+1.122	1
+2	2
+2	2
+3.14	3
+3.14	3
+3.14	3
+3.14	4
+10	10
+20	20
+100	100
+124	124
+125.2	125
+200	200
+1234567890.12345678	1234567890
 PREHOOK: query: SELECT * FROM DECIMAL_4_2 ORDER BY key, value
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_4_2
@@ -103,43 +103,43 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_4_2
 #### A masked pattern was here ####
 NULL	NULL
--1234567890.1234567890000000000000000	-3703703670.3703703670000000000000000
--4400.0000000000000000000000000	-13200.0000000000000000000000000
--1255.4900000000000000000000000	-3766.4700000000000000000000000
--1.1220000000000000000000000	-3.3660000000000000000000000
--1.1200000000000000000000000	-3.3600000000000000000000000
--1.1200000000000000000000000	-3.3600000000000000000000000
--0.3330000000000000000000000	-0.9990000000000000000000000
--0.3300000000000000000000000	-0.9900000000000000000000000
--0.3000000000000000000000000	-0.9000000000000000000000000
-0.0000000000000000000000000	0.0000000000000000000000000
-0.0000000000000000000000000	0.0000000000000000000000000
-0.0000000000000000000000000	0.0000000000000000000000000
-0.0100000000000000000000000	0.0300000000000000000000000
-0.0200000000000000000000000	0.0600000000000000000000000
-0.1000000000000000000000000	0.3000000000000000000000000
-0.2000000000000000000000000	0.6000000000000000000000000
-0.3000000000000000000000000	0.9000000000000000000000000
-0.3300000000000000000000000	0.9900000000000000000000000
-0.3330000000000000000000000	0.9990000000000000000000000
+-1234567890.123456789	-3703703670.370370367
+-4400	-13200
+-1255.49	-3766.47
+-1.122	-3.366
+-1.12	-3.36
+-1.12	-3.36
+-0.333	-0.999
+-0.33	-0.99
+-0.3	-0.9
+0	0
+0	0
+0	0
+0.01	0.03
+0.02	0.06
+0.1	0.3
+0.2	0.6
+0.3	0.9
+0.33	0.99
+0.333	0.999
 0.9999999999999999999999999	2.9999999999999999999999997
-1.0000000000000000000000000	3.0000000000000000000000000
-1.0000000000000000000000000	3.0000000000000000000000000
-1.1200000000000000000000000	3.3600000000000000000000000
-1.1220000000000000000000000	3.3660000000000000000000000
-2.0000000000000000000000000	6.0000000000000000000000000
-2.0000000000000000000000000	6.0000000000000000000000000
-3.1400000000000000000000000	9.4200000000000000000000000
-3.1400000000000000000000000	9.4200000000000000000000000
-3.1400000000000000000000000	9.4200000000000000000000000
-3.1400000000000000000000000	9.4200000000000000000000000
-10.0000000000000000000000000	30.0000000000000000000000000
-20.0000000000000000000000000	60.0000000000000000000000000
-100.0000000000000000000000000	300.0000000000000000000000000
-124.0000000000000000000000000	372.0000000000000000000000000
-125.2000000000000000000000000	375.6000000000000000000000000
-200.0000000000000000000000000	600.0000000000000000000000000
-1234567890.1234567800000000000000000	3703703670.3703703400000000000000000
+1	3
+1	3
+1.12	3.36
+1.122	3.366
+2	6
+2	6
+3.14	9.42
+3.14	9.42
+3.14	9.42
+3.14	9.42
+10	30
+20	60
+100	300
+124	372
+125.2	375.6
+200	600
+1234567890.12345678	3703703670.37037034
 PREHOOK: query: SELECT * FROM DECIMAL_4_2 ORDER BY key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_4_2
@@ -149,43 +149,43 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_4_2
 #### A masked pattern was here ####
 NULL	NULL
--1234567890.1234567890000000000000000	-3703703670.3703703670000000000000000
--4400.0000000000000000000000000	-13200.0000000000000000000000000
--1255.4900000000000000000000000	-3766.4700000000000000000000000
--1.1220000000000000000000000	-3.3660000000000000000000000
--1.1200000000000000000000000	-3.3600000000000000000000000
--1.1200000000000000000000000	-3.3600000000000000000000000
--0.3330000000000000000000000	-0.9990000000000000000000000
--0.3300000000000000000000000	-0.9900000000000000000000000
--0.3000000000000000000000000	-0.9000000000000000000000000
-0.0000000000000000000000000	0.0000000000000000000000000
-0.0000000000000000000000000	0.0000000000000000000000000
-0.0000000000000000000000000	0.0000000000000000000000000
-0.0100000000000000000000000	0.0300000000000000000000000
-0.0200000000000000000000000	0.0600000000000000000000000
-0.1000000000000000000000000	0.3000000000000000000000000
-0.2000000000000000000000000	0.6000000000000000000000000
-0.3000000000000000000000000	0.9000000000000000000000000
-0.3300000000000000000000000	0.9900000000000000000000000
-0.3330000000000000000000000	0.9990000000000000000000000
+-1234567890.123456789	-3703703670.370370367
+-4400	-13200
+-1255.49	-3766.47
+-1.122	-3.366
+-1.12	-3.36
+-1.12	-3.36
+-0.333	-0.999
+-0.33	-0.99
+-0.3	-0.9
+0	0
+0	0
+0	0
+0.01	0.03
+0.02	0.06
+0.1	0.3
+0.2	0.6
+0.3	0.9
+0.33	0.99
+0.333	0.999
 0.9999999999999999999999999	2.9999999999999999999999997
-1.0000000000000000000000000	3.0000000000000000000000000
-1.0000000000000000000000000	3.0000000000000000000000000
-1.1200000000000000000000000	3.3600000000000000000000000
-1.1220000000000000000000000	3.3660000000000000000000000
-2.0000000000000000000000000	6.0000000000000000000000000
-2.0000000000000000000000000	6.0000000000000000000000000
-3.1400000000000000000000000	9.4200000000000000000000000
-3.1400000000000000000000000	9.4200000000000000000000000
-3.1400000000000000000000000	9.4200000000000000000000000
-3.1400000000000000000000000	9.4200000000000000000000000
-10.0000000000000000000000000	30.0000000000000000000000000
-20.0000000000000000000000000	60.0000000000000000000000000
-100.0000000000000000000000000	300.0000000000000000000000000
-124.0000000000000000000000000	372.0000000000000000000000000
-125.2000000000000000000000000	375.6000000000000000000000000
-200.0000000000000000000000000	600.0000000000000000000000000
-1234567890.1234567800000000000000000	3703703670.3703703400000000000000000
+1	3
+1	3
+1.12	3.36
+1.122	3.366
+2	6
+2	6
+3.14	9.42
+3.14	9.42
+3.14	9.42
+3.14	9.42
+10	30
+20	60
+100	300
+124	372
+125.2	375.6
+200	600
+1234567890.12345678	3703703670.37037034
 PREHOOK: query: SELECT * FROM DECIMAL_4_2 ORDER BY key, value
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_4_2
@@ -195,43 +195,43 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_4_2
 #### A masked pattern was here ####
 NULL	NULL
--1234567890.1234567890000000000000000	-3703703670.3703703670000000000000000
--4400.0000000000000000000000000	-13200.0000000000000000000000000
--1255.4900000000000000000000000	-3766.4700000000000000000000000
--1.1220000000000000000000000	-3.3660000000000000000000000
--1.1200000000000000000000000	-3.3600000000000000000000000
--1.1200000000000000000000000	-3.3600000000000000000000000
--0.3330000000000000000000000	-0.9990000000000000000000000
--0.3300000000000000000000000	-0.9900000000000000000000000
--0.3000000000000000000000000	-0.9000000000000000000000000
-0.0000000000000000000000000	0.0000000000000000000000000
-0.0000000000000000000000000	0.0000000000000000000000000
-0.0000000000000000000000000	0.0000000000000000000000000
-0.0100000000000000000000000	0.0300000000000000000000000
-0.0200000000000000000000000	0.0600000000000000000000000
-0.1000000000000000000000000	0.3000000000000000000000000
-0.2000000000000000000000000	0.6000000000000000000000000
-0.3000000000000000000000000	0.9000000000000000000000000
-0.3300000000000000000000000	0.9900000000000000000000000
-0.3330000000000000000000000	0.9990000000000000000000000
+-1234567890.123456789	-3703703670.370370367
+-4400	-13200
+-1255.49	-3766.47
+-1.122	-3.366
+-1.12	-3.36
+-1.12	-3.36
+-0.333	-0.999
+-0.33	-0.99
+-0.3	-0.9
+0	0
+0	0
+0	0
+0.01	0.03
+0.02	0.06
+0.1	0.3
+0.2	0.6
+0.3	0.9
+0.33	0.99
+0.333	0.999
 0.9999999999999999999999999	2.9999999999999999999999997
-1.0000000000000000000000000	3.0000000000000000000000000
-1.0000000000000000000000000	3.0000000000000000000000000
-1.1200000000000000000000000	3.3600000000000000000000000
-1.1220000000000000000000000	3.3660000000000000000000000
-2.0000000000000000000000000	6.0000000000000000000000000
-2.0000000000000000000000000	6.0000000000000000000000000
-3.1400000000000000000000000	9.4200000000000000000000000
-3.1400000000000000000000000	9.4200000000000000000000000
-3.1400000000000000000000000	9.4200000000000000000000000
-3.1400000000000000000000000	9.4200000000000000000000000
-10.0000000000000000000000000	30.0000000000000000000000000
-20.0000000000000000000000000	60.0000000000000000000000000
-100.0000000000000000000000000	300.0000000000000000000000000
-124.0000000000000000000000000	372.0000000000000000000000000
-125.2000000000000000000000000	375.6000000000000000000000000
-200.0000000000000000000000000	600.0000000000000000000000000
-1234567890.1234567800000000000000000	3703703670.3703703400000000000000000
+1	3
+1	3
+1.12	3.36
+1.122	3.366
+2	6
+2	6
+3.14	9.42
+3.14	9.42
+3.14	9.42
+3.14	9.42
+10	30
+20	60
+100	300
+124	372
+125.2	375.6
+200	600
+1234567890.12345678	3703703670.37037034
 PREHOOK: query: DROP TABLE DECIMAL_4_1
 PREHOOK: type: DROPTABLE
 PREHOOK: Input: default@decimal_4_1
diff --git a/ql/src/test/results/clientpositive/tez/vector_decimal_5.q.out b/ql/src/test/results/clientpositive/tez/vector_decimal_5.q.out
index 0bfd12e..34c3351 100644
--- a/ql/src/test/results/clientpositive/tez/vector_decimal_5.q.out
+++ b/ql/src/test/results/clientpositive/tez/vector_decimal_5.q.out
@@ -59,41 +59,41 @@ POSTHOOK: Input: default@decimal_5
 NULL
 NULL
 NULL
--4400.00000
--1255.49000
--1.12200
--1.12000
--1.12000
--0.33300
--0.33000
--0.30000
-0.00000
-0.00000
-0.00000
-0.01000
-0.02000
-0.10000
-0.20000
-0.30000
-0.33000
-0.33300
-1.00000
-1.00000
-1.00000
-1.12000
-1.12200
-2.00000
-2.00000
-3.14000
-3.14000
-3.14000
-3.14000
-10.00000
-20.00000
-100.00000
-124.00000
-125.20000
-200.00000
+-4400
+-1255.49
+-1.122
+-1.12
+-1.12
+-0.333
+-0.33
+-0.3
+0
+0
+0
+0.01
+0.02
+0.1
+0.2
+0.3
+0.33
+0.333
+1
+1
+1
+1.12
+1.122
+2
+2
+3.14
+3.14
+3.14
+3.14
+10
+20
+100
+124
+125.2
+200
 PREHOOK: query: SELECT DISTINCT key FROM DECIMAL_5 ORDER BY key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_5
@@ -103,32 +103,32 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_5
 #### A masked pattern was here ####
 NULL
--4400.00000
--1255.49000
--1.12200
--1.12000
--0.33300
--0.33000
--0.30000
-0.00000
-0.01000
-0.02000
-0.10000
-0.20000
-0.30000
-0.33000
-0.33300
-1.00000
-1.12000
-1.12200
-2.00000
-3.14000
-10.00000
-20.00000
-100.00000
-124.00000
-125.20000
-200.00000
+-4400
+-1255.49
+-1.122
+-1.12
+-0.333
+-0.33
+-0.3
+0
+0.01
+0.02
+0.1
+0.2
+0.3
+0.33
+0.333
+1
+1.12
+1.122
+2
+3.14
+10
+20
+100
+124
+125.2
+200
 PREHOOK: query: SELECT cast(key as decimal) FROM DECIMAL_5
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_5
@@ -185,40 +185,40 @@ POSTHOOK: Input: default@decimal_5
 #### A masked pattern was here ####
 NULL
 NULL
-0.000
-0.000
-100.000
-10.000
-1.000
-0.100
-0.010
-200.000
-20.000
-2.000
-0.000
-0.200
-0.020
-0.300
-0.330
+0
+0
+100
+10
+1
+0.1
+0.01
+200
+20
+2
+0
+0.2
+0.02
+0.3
+0.33
 0.333
--0.300
--0.330
+-0.3
+-0.33
 -0.333
-1.000
-2.000
-3.140
--1.120
--1.120
+1
+2
+3.14
+-1.12
+-1.12
 -1.122
-1.120
+1.12
 1.122
-124.000
-125.200
+124
+125.2
 NULL
-3.140
-3.140
-3.140
-1.000
+3.14
+3.14
+3.14
+1
 NULL
 NULL
 PREHOOK: query: DROP TABLE DECIMAL_5_txt
diff --git a/ql/src/test/results/clientpositive/tez/vector_decimal_6.q.out b/ql/src/test/results/clientpositive/tez/vector_decimal_6.q.out
index e0ccbc6..9cdd7fc 100644
--- a/ql/src/test/results/clientpositive/tez/vector_decimal_6.q.out
+++ b/ql/src/test/results/clientpositive/tez/vector_decimal_6.q.out
@@ -119,27 +119,27 @@ NULL	0
 NULL	3
 NULL	4
 NULL	1234567890
--4400.00000	4400
--1255.49000	-1255
--1.12200	-11
--1.12000	-1
--0.33300	0
--0.30000	0
-0.00000	0
-0.00000	0
-0.33300	0
-1.00000	1
-1.00000	1
-1.12000	1
-1.12200	1
-2.00000	2
-3.14000	3
-3.14000	3
-3.14000	4
-10.00000	10
+-4400	4400
+-1255.49	-1255
+-1.122	-11
+-1.12	-1
+-0.333	0
+-0.3	0
+0	0
+0	0
+0.333	0
+1	1
+1	1
+1.12	1
+1.122	1
+2	2
+3.14	3
+3.14	3
+3.14	4
+10	10
 10.73433	5
-124.00000	124
-125.20000	125
+124	124
+125.2	125
 23232.23435	2
 PREHOOK: query: SELECT * FROM DECIMAL_6_2 ORDER BY key, value
 PREHOOK: type: QUERY
@@ -151,27 +151,27 @@ POSTHOOK: Input: default@decimal_6_2
 #### A masked pattern was here ####
 NULL	0
 -1234567890.1235	-1234567890
--4400.0000	4400
--1255.4900	-1255
--1.1220	-11
--1.1200	-1
--0.3330	0
--0.3000	0
-0.0000	0
-0.0000	0
-0.3330	0
-1.0000	1
-1.0000	1
-1.1200	1
-1.1220	1
-2.0000	2
-3.1400	3
-3.1400	3
-3.1400	4
-10.0000	10
+-4400	4400
+-1255.49	-1255
+-1.122	-11
+-1.12	-1
+-0.333	0
+-0.3	0
+0	0
+0	0
+0.333	0
+1	1
+1	1
+1.12	1
+1.122	1
+2	2
+3.14	3
+3.14	3
+3.14	4
+10	10
 10.7343	5
-124.0000	124
-125.2000	125
+124	124
+125.2	125
 23232.2344	2
 2389432.2375	3
 2389432.2375	4
@@ -200,54 +200,54 @@ NULL
 NULL
 NULL
 NULL
--1234567890.12350
--4400.00000
--4400.00000
--1255.49000
--1255.49000
--1.12200
--1.12200
--1.12000
--1.12000
--0.33300
--0.33300
--0.30000
--0.30000
-0.00000
-0.00000
-0.00000
-0.00000
-0.33300
-0.33300
-1.00000
-1.00000
-1.00000
-1.00000
-1.12000
-1.12000
-1.12200
-1.12200
-2.00000
-2.00000
-3.14000
-3.14000
-3.14000
-3.14000
-3.14000
-3.14000
-10.00000
-10.00000
-10.73430
+-1234567890.1235
+-4400
+-4400
+-1255.49
+-1255.49
+-1.122
+-1.122
+-1.12
+-1.12
+-0.333
+-0.333
+-0.3
+-0.3
+0
+0
+0
+0
+0.333
+0.333
+1
+1
+1
+1
+1.12
+1.12
+1.122
+1.122
+2
+2
+3.14
+3.14
+3.14
+3.14
+3.14
+3.14
+10
+10
+10.7343
 10.73433
-124.00000
-124.00000
-125.20000
-125.20000
+124
+124
+125.2
+125.2
 23232.23435
-23232.23440
-2389432.23750
-2389432.23750
-1234567890.12350
+23232.2344
+2389432.2375
+2389432.2375
+1234567890.1235
 PREHOOK: query: CREATE TABLE DECIMAL_6_3 STORED AS ORC AS SELECT key + 5.5 AS k, value * 11 AS v from DECIMAL_6_1 ORDER BY v
 PREHOOK: type: CREATETABLE_AS_SELECT
 PREHOOK: Input: default@decimal_6_1
diff --git a/ql/src/test/results/clientpositive/tez/vector_decimal_aggregate.q.out b/ql/src/test/results/clientpositive/tez/vector_decimal_aggregate.q.out
index beb3e44..28d1d39 100644
--- a/ql/src/test/results/clientpositive/tez/vector_decimal_aggregate.q.out
+++ b/ql/src/test/results/clientpositive/tez/vector_decimal_aggregate.q.out
@@ -111,16 +111,15 @@ POSTHOOK: query: SELECT cint,
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_vgby
 #### A masked pattern was here ####
--3728	6	5831542.2692483780	-3367.6517567568	5817556.0411483778	6	6984454.21109769200000	-4033.44576923076900	6967702.86724384584710
--563	2	-515.6210729730	-3367.6517567568	-3883.2728297298	2	-617.56077692307690	-4033.44576923076900	-4651.00654615384590
-253665376	1024	9767.0054054054	-9779.5486486487	-347484.0818378374	1024	11697.96923076923100	-11712.99230769231000	-416182.64030769233089
-528534767	1024	5831542.2692483780	-9777.1594594595	11646372.8607481068	1024	6984454.21109769200000	-11710.13076923077100	13948892.79980307629003
-626923679	1024	9723.4027027027	-9778.9513513514	10541.0525297287	1024	11645.74615384615400	-11712.27692307692300	12625.04759999997746
-6981	3	5831542.2692483780	-515.6210729730	5830511.0271024320	3	6984454.21109769200000	-617.56077692307690	6983219.08954384584620
-762	2	5831542.2692483780	1531.2194054054	5833073.4886537834	2	6984454.21109769200000	1833.94569230769250	6986288.15678999969250
-NULL	3072	9318.4351351351	-4298.1513513514	5018444.1081079808	3072	11160.71538461538500	-5147.90769230769300	6010604.30769230735360
-PREHOOK: query: -- Now add the others...
-EXPLAIN SELECT cint,
+-3728	6	5831542.269248378	-3367.6517567568	5817556.0411483778	6	6984454.211097692	-4033.445769230769	6967702.8672438458471
+-563	2	-515.621072973	-3367.6517567568	-3883.2728297298	2	-617.5607769230769	-4033.445769230769	-4651.0065461538459
+253665376	1024	9767.0054054054	-9779.5486486487	-347484.0818378374	1024	11697.969230769231	-11712.99230769231	-416182.64030769233089
+528534767	1024	5831542.269248378	-9777.1594594595	11646372.8607481068	1024	6984454.211097692	-11710.130769230771	13948892.79980307629003
+626923679	1024	9723.4027027027	-9778.9513513514	10541.0525297287	1024	11645.746153846154	-11712.276923076923	12625.04759999997746
+6981	3	5831542.269248378	-515.621072973	5830511.027102432	3	6984454.211097692	-617.5607769230769	6983219.0895438458462
+762	2	5831542.269248378	1531.2194054054	5833073.4886537834	2	6984454.211097692	1833.9456923076925	6986288.1567899996925
+NULL	3072	9318.4351351351	-4298.1513513514	5018444.1081079808	3072	11160.715384615385	-5147.907692307693	6010604.3076923073536
+PREHOOK: query: EXPLAIN SELECT cint,
     COUNT(cdecimal1), MAX(cdecimal1), MIN(cdecimal1), SUM(cdecimal1), AVG(cdecimal1), STDDEV_POP(cdecimal1), STDDEV_SAMP(cdecimal1),
     COUNT(cdecimal2), MAX(cdecimal2), MIN(cdecimal2), SUM(cdecimal2), AVG(cdecimal2), STDDEV_POP(cdecimal2), STDDEV_SAMP(cdecimal2)
     FROM decimal_vgby
@@ -214,11 +213,11 @@ POSTHOOK: query: SELECT cint,
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_vgby
 #### A masked pattern was here ####
--3728	6	5831542.2692483780	-3367.6517567568	5817556.0411483778	969592.67352472963333	2174330.2092403853	2381859.406131774	6	6984454.21109769200000	-4033.44576923076900	6967702.86724384584710	1161283.811207307641183333	2604201.2704476737	2852759.5602156054
--563	2	-515.6210729730	-3367.6517567568	-3883.2728297298	-1941.63641486490000	1426.0153418918999	2016.6902366556308	2	-617.56077692307690	-4033.44576923076900	-4651.00654615384590	-2325.503273076922950000	1707.9424961538462	2415.395441814127
-253665376	1024	9767.0054054054	-9779.5486486487	-347484.0818378374	-339.33992366976309	5708.9563478862	5711.745967572779	1024	11697.96923076923100	-11712.99230769231000	-416182.64030769233089	-406.428359675480791885	6837.632716002934	6840.973851172274
-528534767	1024	5831542.2692483780	-9777.1594594595	11646372.8607481068	11373.41099682432305	257528.92988206653	257654.7686043977	1024	6984454.21109769200000	-11710.13076923077100	13948892.79980307629003	13621.965624807691689482	308443.1074570801	308593.82484083984
-626923679	1024	9723.4027027027	-9778.9513513514	10541.0525297287	10.29399661106318	5742.09145323734	5744.897264034267	1024	11645.74615384615400	-11712.27692307692300	12625.04759999997746	12.329148046874977988	6877.318722794877	6880.679250101603
-6981	3	5831542.2692483780	-515.6210729730	5830511.0271024320	1943503.67570081066667	2749258.455012492	3367140.1929065133	3	6984454.21109769200000	-617.56077692307690	6983219.08954384584620	2327739.696514615282066667	3292794.4113115156	4032833.0678006653
-762	2	5831542.2692483780	1531.2194054054	5833073.4886537834	2916536.74432689170000	2915005.5249214866	4122440.3477364695	2	6984454.21109769200000	1833.94569230769250	6986288.15678999969250	3493144.078394999846250000	3491310.1327026924	4937458.140118758
-NULL	3072	9318.4351351351	-4298.1513513514	5018444.1081079808	1633.60810810806667	5695.483082135364	5696.4103077145055	3072	11160.71538461538500	-5147.90769230769300	6010604.30769230735360	1956.576923076922966667	6821.495748565159	6822.606289190924
+-3728	6	5831542.269248378	-3367.6517567568	5817556.0411483778	969592.67352472963333	2174330.2092403853	2381859.406131774	6	6984454.211097692	-4033.445769230769	6967702.8672438458471	1161283.811207307641183333	2604201.2704476737	2852759.5602156054
+-563	2	-515.621072973	-3367.6517567568	-3883.2728297298	-1941.6364148649	1426.0153418918999	2016.6902366556308	2	-617.5607769230769	-4033.445769230769	-4651.0065461538459	-2325.50327307692295	1707.9424961538462	2415.395441814127
+253665376	1024	9767.0054054054	-9779.5486486487	-347484.0818378374	-339.33992366976309	5708.9563478862	5711.745967572779	1024	11697.969230769231	-11712.99230769231	-416182.64030769233089	-406.428359675480791885	6837.632716002934	6840.973851172274
+528534767	1024	5831542.269248378	-9777.1594594595	11646372.8607481068	11373.41099682432305	257528.92988206653	257654.7686043977	1024	6984454.211097692	-11710.130769230771	13948892.79980307629003	13621.965624807691689482	308443.1074570801	308593.82484083984
+626923679	1024	9723.4027027027	-9778.9513513514	10541.0525297287	10.29399661106318	5742.09145323734	5744.897264034267	1024	11645.746153846154	-11712.276923076923	12625.04759999997746	12.329148046874977988	6877.318722794877	6880.679250101603
+6981	3	5831542.269248378	-515.621072973	5830511.027102432	1943503.67570081066667	2749258.455012492	3367140.1929065133	3	6984454.211097692	-617.5607769230769	6983219.0895438458462	2327739.696514615282066667	3292794.4113115156	4032833.0678006653
+762	2	5831542.269248378	1531.2194054054	5833073.4886537834	2916536.7443268917	2915005.5249214866	4122440.3477364695	2	6984454.211097692	1833.9456923076925	6986288.1567899996925	3493144.07839499984625	3491310.1327026924	4937458.140118758
+NULL	3072	9318.4351351351	-4298.1513513514	5018444.1081079808	1633.60810810806667	5695.483082135364	5696.4103077145055	3072	11160.715384615385	-5147.907692307693	6010604.3076923073536	1956.576923076922966667	6821.495748565159	6822.606289190924
diff --git a/ql/src/test/results/clientpositive/tez/vector_decimal_cast.q.out b/ql/src/test/results/clientpositive/tez/vector_decimal_cast.q.out
index 35b7e87..59b80f2 100644
--- a/ql/src/test/results/clientpositive/tez/vector_decimal_cast.q.out
+++ b/ql/src/test/results/clientpositive/tez/vector_decimal_cast.q.out
@@ -29,13 +29,13 @@ POSTHOOK: query: SELECT cdouble, cint, cboolean1, ctimestamp1, CAST(cdouble AS D
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@alltypesorc
 #### A masked pattern was here ####
--13326.0	528534767	true	1969-12-31 15:59:46.674	-13326.0000000000	528534767.00000000000000	1.00	-13
--15813.0	528534767	true	1969-12-31 15:59:55.787	-15813.0000000000	528534767.00000000000000	1.00	-4
--9566.0	528534767	true	1969-12-31 15:59:44.187	-9566.0000000000	528534767.00000000000000	1.00	-16
-15007.0	528534767	true	1969-12-31 15:59:50.434	15007.0000000000	528534767.00000000000000	1.00	-10
-7021.0	528534767	true	1969-12-31 16:00:15.007	7021.0000000000	528534767.00000000000000	1.00	15
-4963.0	528534767	true	1969-12-31 16:00:07.021	4963.0000000000	528534767.00000000000000	1.00	7
--7824.0	528534767	true	1969-12-31 16:00:04.963	-7824.0000000000	528534767.00000000000000	1.00	5
--15431.0	528534767	true	1969-12-31 15:59:52.176	-15431.0000000000	528534767.00000000000000	1.00	-8
--15549.0	528534767	true	1969-12-31 15:59:44.569	-15549.0000000000	528534767.00000000000000	1.00	-15
-5780.0	528534767	true	1969-12-31 15:59:44.451	5780.0000000000	528534767.00000000000000	1.00	-16
+-13326.0	528534767	true	1969-12-31 15:59:46.674	-13326	528534767	1	-13
+-15813.0	528534767	true	1969-12-31 15:59:55.787	-15813	528534767	1	-4
+-9566.0	528534767	true	1969-12-31 15:59:44.187	-9566	528534767	1	-16
+15007.0	528534767	true	1969-12-31 15:59:50.434	15007	528534767	1	-10
+7021.0	528534767	true	1969-12-31 16:00:15.007	7021	528534767	1	15
+4963.0	528534767	true	1969-12-31 16:00:07.021	4963	528534767	1	7
+-7824.0	528534767	true	1969-12-31 16:00:04.963	-7824	528534767	1	5
+-15431.0	528534767	true	1969-12-31 15:59:52.176	-15431	528534767	1	-8
+-15549.0	528534767	true	1969-12-31 15:59:44.569	-15549	528534767	1	-15
+5780.0	528534767	true	1969-12-31 15:59:44.451	5780	528534767	1	-16
diff --git a/ql/src/test/results/clientpositive/tez/vector_decimal_expressions.q.out b/ql/src/test/results/clientpositive/tez/vector_decimal_expressions.q.out
index 01052af..6730a7e 100644
--- a/ql/src/test/results/clientpositive/tez/vector_decimal_expressions.q.out
+++ b/ql/src/test/results/clientpositive/tez/vector_decimal_expressions.q.out
@@ -39,13 +39,13 @@ POSTHOOK: query: SELECT cdecimal1 + cdecimal2, cdecimal1 - (2*cdecimal2), ((cdec
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_test
 #### A masked pattern was here ####
-19699.41746361742300	-12507.91330561334600	0.8351496686995997	2.8303425077026896E7	3.6405405405	8963	10735	-17	8963	true	10735.776923076923	8963.641	10735.776923076923	1969-12-31 18:29:23.64054054
-9216.33970893968500	-5851.80644490647000	0.8353975893550668	6195112.1797296945	3.6243243243	4193	5022	-98	4193	true	5022.715384615385	4193.6245	5022.715384615385	1969-12-31 17:09:53.624324324
-6514.84033264034640	-4136.52120582119280	0.8355907765708067	3095563.9418919063	4.3864864865	2964	3550	-34	2964	true	3550.4538461538464	2964.3865	3550.4538461538464	1969-12-31 16:49:24.386486486
-7587.30145530147700	-4817.46777546775400	0.8354976172734904	4198623.24324327	2.3783783784	3452	4134	38	3452	true	4134.923076923077	3452.3784	4134.923076923077	1969-12-31 16:57:32.378378378
-19197.97297297300000	-12189.52702702700000	0.835155361813429	2.6880848817567654E7	5.4729729730	8735	10462	-34	8735	true	10462.5	8735.473	10462.5	1969-12-31 18:25:35.472972973
-17098.99459459460000	-10856.80540540540000	0.8351828165813104	2.132423090270272E7	0.3945945946	7780	9318	102	7780	true	9318.6	7780.3945	9318.6	1969-12-31 18:09:40.394594594
-12433.72307692307700	-7894.64615384615400	0.8352770361086894	1.12754688E7	7.6000000000	5657	6776	120	5657	true	6776.123076923077	5657.6	6776.123076923077	1969-12-31 17:34:17.6
-7247.31683991686200	-4601.59854469852400	0.8355241651897876	3830775.6932432684	7.6783783784	3297	3949	109	3297	true	3949.638461538462	3297.6785	3949.638461538462	1969-12-31 16:54:57.678378378
-14757.17006237004650	-9369.89147609149300	0.8352226654922171	1.5883214124324286E7	4.8162162162	6714	8042	106	6714	true	8042.3538461538465	6714.8164	8042.3538461538465	1969-12-31 17:51:54.816216216
-10964.83201663199300	-6961.99106029108600	0.8353232978714221	8768719.779729689	9.2243243243	4989	5975	87	4989	true	5975.607692307693	4989.224	5975.607692307693	1969-12-31 17:23:09.224324324
+19699.417463617423	-12507.913305613346	0.8351496686995997	2.8303425077026896E7	3.6405405405	8963	10735	-17	8963	true	10735.776923076923	8963.641	10735.776923076923	1969-12-31 18:29:23.64054054
+9216.339708939685	-5851.80644490647	0.8353975893550668	6195112.1797296945	3.6243243243	4193	5022	-98	4193	true	5022.715384615385	4193.6245	5022.715384615385	1969-12-31 17:09:53.624324324
+6514.8403326403464	-4136.5212058211928	0.8355907765708067	3095563.9418919063	4.3864864865	2964	3550	-34	2964	true	3550.4538461538464	2964.3865	3550.4538461538464	1969-12-31 16:49:24.386486486
+7587.301455301477	-4817.467775467754	0.8354976172734904	4198623.24324327	2.3783783784	3452	4134	38	3452	true	4134.923076923077	3452.3784	4134.923076923077	1969-12-31 16:57:32.378378378
+19197.972972973	-12189.527027027	0.835155361813429	2.6880848817567654E7	5.472972973	8735	10462	-34	8735	true	10462.5	8735.473	10462.5	1969-12-31 18:25:35.472972973
+17098.9945945946	-10856.8054054054	0.8351828165813104	2.132423090270272E7	0.3945945946	7780	9318	102	7780	true	9318.6	7780.3945	9318.6	1969-12-31 18:09:40.394594594
+12433.723076923077	-7894.646153846154	0.8352770361086894	1.12754688E7	7.6	5657	6776	120	5657	true	6776.123076923077	5657.6	6776.123076923077	1969-12-31 17:34:17.6
+7247.316839916862	-4601.598544698524	0.8355241651897876	3830775.6932432684	7.6783783784	3297	3949	109	3297	true	3949.638461538462	3297.6785	3949.638461538462	1969-12-31 16:54:57.678378378
+14757.1700623700465	-9369.891476091493	0.8352226654922171	1.5883214124324286E7	4.8162162162	6714	8042	106	6714	true	8042.3538461538465	6714.8164	8042.3538461538465	1969-12-31 17:51:54.816216216
+10964.832016631993	-6961.991060291086	0.8353232978714221	8768719.779729689	9.2243243243	4989	5975	87	4989	true	5975.607692307693	4989.224	5975.607692307693	1969-12-31 17:23:09.224324324
diff --git a/ql/src/test/results/clientpositive/tez/vector_decimal_mapjoin.q.out b/ql/src/test/results/clientpositive/tez/vector_decimal_mapjoin.q.out
index c85b9f3..697472e 100644
--- a/ql/src/test/results/clientpositive/tez/vector_decimal_mapjoin.q.out
+++ b/ql/src/test/results/clientpositive/tez/vector_decimal_mapjoin.q.out
@@ -103,57 +103,57 @@ POSTHOOK: query: SELECT l.cint, r.cint, l.cdecimal1, r.cdecimal2
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_mapjoin
 #### A masked pattern was here ####
-6981	6981	-515.6210729730	-617.56077692307690
-6981	6981	-515.6210729730	-617.56077692307690
-6981	6981	-515.6210729730	-617.56077692307690
-6981	6981	-515.6210729730	-617.56077692307690
-6981	6981	-515.6210729730	6984454.21109769200000
-6981	6981	-515.6210729730	6984454.21109769200000
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	5831542.2692483780	-617.56077692307690
-6981	6981	5831542.2692483780	-617.56077692307690
-6981	6981	5831542.2692483780	6984454.21109769200000
-6981	6981	5831542.2692483780	NULL
-6981	6981	5831542.2692483780	NULL
-6981	6981	5831542.2692483780	NULL
-6981	6981	5831542.2692483780	NULL
-6981	6981	5831542.2692483780	NULL
-6981	6981	5831542.2692483780	NULL
-6981	6981	5831542.2692483780	NULL
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	6984454.21109769200000
-6981	6981	NULL	6984454.21109769200000
-6981	6981	NULL	6984454.21109769200000
-6981	6981	NULL	6984454.21109769200000
-6981	6981	NULL	6984454.21109769200000
-6981	6981	NULL	6984454.21109769200000
-6981	6981	NULL	6984454.21109769200000
+6981	6981	-515.621072973	-617.5607769230769
+6981	6981	-515.621072973	-617.5607769230769
+6981	6981	-515.621072973	-617.5607769230769
+6981	6981	-515.621072973	-617.5607769230769
+6981	6981	-515.621072973	6984454.211097692
+6981	6981	-515.621072973	6984454.211097692
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	5831542.269248378	-617.5607769230769
+6981	6981	5831542.269248378	-617.5607769230769
+6981	6981	5831542.269248378	6984454.211097692
+6981	6981	5831542.269248378	NULL
+6981	6981	5831542.269248378	NULL
+6981	6981	5831542.269248378	NULL
+6981	6981	5831542.269248378	NULL
+6981	6981	5831542.269248378	NULL
+6981	6981	5831542.269248378	NULL
+6981	6981	5831542.269248378	NULL
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	6984454.211097692
+6981	6981	NULL	6984454.211097692
+6981	6981	NULL	6984454.211097692
+6981	6981	NULL	6984454.211097692
+6981	6981	NULL	6984454.211097692
+6981	6981	NULL	6984454.211097692
+6981	6981	NULL	6984454.211097692
 6981	6981	NULL	NULL
 6981	6981	NULL	NULL
 6981	6981	NULL	NULL
diff --git a/ql/src/test/results/clientpositive/tez/vector_decimal_precision.q.out b/ql/src/test/results/clientpositive/tez/vector_decimal_precision.q.out
index 40e5ad3..4e1b654 100644
--- a/ql/src/test/results/clientpositive/tez/vector_decimal_precision.q.out
+++ b/ql/src/test/results/clientpositive/tez/vector_decimal_precision.q.out
@@ -99,13 +99,13 @@ NULL
 NULL
 NULL
 NULL
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.1234567890
-0.1234567890
+0
+0
+0
+0
+0
+0.123456789
+0.123456789
 1.2345678901
 1.2345678901
 1.2345678901
@@ -122,14 +122,14 @@ NULL
 12345.6789012346
 123456.7890123456
 123456.7890123457
-1234567.8901234560
+1234567.890123456
 1234567.8901234568
-12345678.9012345600
+12345678.90123456
 12345678.9012345679
-123456789.0123456000
+123456789.0123456
 123456789.0123456789
-1234567890.1234560000
-1234567890.1234567890
+1234567890.123456
+1234567890.123456789
 PREHOOK: query: SELECT dec, dec + 1, dec - 1 FROM DECIMAL_PRECISION ORDER BY dec
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_precision
@@ -182,13 +182,13 @@ NULL	NULL	NULL
 NULL	NULL	NULL
 NULL	NULL	NULL
 NULL	NULL	NULL
-0.0000000000	1.0000000000	-1.0000000000
-0.0000000000	1.0000000000	-1.0000000000
-0.0000000000	1.0000000000	-1.0000000000
-0.0000000000	1.0000000000	-1.0000000000
-0.0000000000	1.0000000000	-1.0000000000
-0.1234567890	1.1234567890	-0.8765432110
-0.1234567890	1.1234567890	-0.8765432110
+0	1	-1
+0	1	-1
+0	1	-1
+0	1	-1
+0	1	-1
+0.123456789	1.123456789	-0.876543211
+0.123456789	1.123456789	-0.876543211
 1.2345678901	2.2345678901	0.2345678901
 1.2345678901	2.2345678901	0.2345678901
 1.2345678901	2.2345678901	0.2345678901
@@ -205,14 +205,14 @@ NULL	NULL	NULL
 12345.6789012346	12346.6789012346	12344.6789012346
 123456.7890123456	123457.7890123456	123455.7890123456
 123456.7890123457	123457.7890123457	123455.7890123457
-1234567.8901234560	1234568.8901234560	1234566.8901234560
+1234567.890123456	1234568.890123456	1234566.890123456
 1234567.8901234568	1234568.8901234568	1234566.8901234568
-12345678.9012345600	12345679.9012345600	12345677.9012345600
+12345678.90123456	12345679.90123456	12345677.90123456
 12345678.9012345679	12345679.9012345679	12345677.9012345679
-123456789.0123456000	123456790.0123456000	123456788.0123456000
+123456789.0123456	123456790.0123456	123456788.0123456
 123456789.0123456789	123456790.0123456789	123456788.0123456789
-1234567890.1234560000	1234567891.1234560000	1234567889.1234560000
-1234567890.1234567890	1234567891.1234567890	1234567889.1234567890
+1234567890.123456	1234567891.123456	1234567889.123456
+1234567890.123456789	1234567891.123456789	1234567889.123456789
 PREHOOK: query: SELECT dec, dec * 2, dec / 3  FROM DECIMAL_PRECISION ORDER BY dec
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_precision
@@ -265,37 +265,37 @@ NULL	NULL	NULL
 NULL	NULL	NULL
 NULL	NULL	NULL
 NULL	NULL	NULL
-0.0000000000	0.0000000000	0.000000000000
-0.0000000000	0.0000000000	0.000000000000
-0.0000000000	0.0000000000	0.000000000000
-0.0000000000	0.0000000000	0.000000000000
-0.0000000000	0.0000000000	0.000000000000
-0.1234567890	0.2469135780	0.041152263000
-0.1234567890	0.2469135780	0.041152263000
+0	0	0
+0	0	0
+0	0	0
+0	0	0
+0	0	0
+0.123456789	0.246913578	0.041152263
+0.123456789	0.246913578	0.041152263
 1.2345678901	2.4691357802	0.411522630033
 1.2345678901	2.4691357802	0.411522630033
 1.2345678901	2.4691357802	0.411522630033
-12.3456789012	24.6913578024	4.115226300400
-12.3456789012	24.6913578024	4.115226300400
-12.3456789012	24.6913578024	4.115226300400
-123.4567890123	246.9135780246	41.152263004100
-123.4567890123	246.9135780246	41.152263004100
-123.4567890123	246.9135780246	41.152263004100
-1234.5678901235	2469.1357802470	411.522630041167
-1234.5678901235	2469.1357802470	411.522630041167
-1234.5678901235	2469.1357802470	411.522630041167
+12.3456789012	24.6913578024	4.1152263004
+12.3456789012	24.6913578024	4.1152263004
+12.3456789012	24.6913578024	4.1152263004
+123.4567890123	246.9135780246	41.1522630041
+123.4567890123	246.9135780246	41.1522630041
+123.4567890123	246.9135780246	41.1522630041
+1234.5678901235	2469.135780247	411.522630041167
+1234.5678901235	2469.135780247	411.522630041167
+1234.5678901235	2469.135780247	411.522630041167
 12345.6789012346	24691.3578024692	4115.226300411533
 12345.6789012346	24691.3578024692	4115.226300411533
-123456.7890123456	246913.5780246912	41152.263004115200
+123456.7890123456	246913.5780246912	41152.2630041152
 123456.7890123457	246913.5780246914	41152.263004115233
-1234567.8901234560	2469135.7802469120	411522.630041152000
+1234567.890123456	2469135.780246912	411522.630041152
 1234567.8901234568	2469135.7802469136	411522.630041152267
-12345678.9012345600	24691357.8024691200	4115226.300411520000
+12345678.90123456	24691357.80246912	4115226.30041152
 12345678.9012345679	24691357.8024691358	4115226.300411522633
-123456789.0123456000	246913578.0246912000	41152263.004115200000
-123456789.0123456789	246913578.0246913578	41152263.004115226300
-1234567890.1234560000	2469135780.2469120000	411522630.041152000000
-1234567890.1234567890	2469135780.2469135780	411522630.041152263000
+123456789.0123456	246913578.0246912	41152263.0041152
+123456789.0123456789	246913578.0246913578	41152263.0041152263
+1234567890.123456	2469135780.246912	411522630.041152
+1234567890.123456789	2469135780.246913578	411522630.041152263
 PREHOOK: query: SELECT dec, dec / 9 FROM DECIMAL_PRECISION ORDER BY dec
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_precision
@@ -348,13 +348,13 @@ NULL	NULL
 NULL	NULL
 NULL	NULL
 NULL	NULL
-0.0000000000	0.000000000000
-0.0000000000	0.000000000000
-0.0000000000	0.000000000000
-0.0000000000	0.000000000000
-0.0000000000	0.000000000000
-0.1234567890	0.013717421000
-0.1234567890	0.013717421000
+0	0
+0	0
+0	0
+0	0
+0	0
+0.123456789	0.013717421
+0.123456789	0.013717421
 1.2345678901	0.137174210011
 1.2345678901	0.137174210011
 1.2345678901	0.137174210011
@@ -371,14 +371,14 @@ NULL	NULL
 12345.6789012346	1371.742100137178
 123456.7890123456	13717.421001371733
 123456.7890123457	13717.421001371744
-1234567.8901234560	137174.210013717333
+1234567.890123456	137174.210013717333
 1234567.8901234568	137174.210013717422
-12345678.9012345600	1371742.100137173333
+12345678.90123456	1371742.100137173333
 12345678.9012345679	1371742.100137174211
-123456789.0123456000	13717421.001371733333
-123456789.0123456789	13717421.001371742100
-1234567890.1234560000	137174210.013717333333
-1234567890.1234567890	137174210.013717421000
+123456789.0123456	13717421.001371733333
+123456789.0123456789	13717421.0013717421
+1234567890.123456	137174210.013717333333
+1234567890.123456789	137174210.013717421
 PREHOOK: query: SELECT dec, dec / 27 FROM DECIMAL_PRECISION ORDER BY dec
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_precision
@@ -431,13 +431,13 @@ NULL	NULL
 NULL	NULL
 NULL	NULL
 NULL	NULL
-0.0000000000	0.0000000000000
-0.0000000000	0.0000000000000
-0.0000000000	0.0000000000000
-0.0000000000	0.0000000000000
-0.0000000000	0.0000000000000
-0.1234567890	0.0045724736667
-0.1234567890	0.0045724736667
+0	0
+0	0
+0	0
+0	0
+0	0
+0.123456789	0.0045724736667
+0.123456789	0.0045724736667
 1.2345678901	0.0457247366704
 1.2345678901	0.0457247366704
 1.2345678901	0.0457247366704
@@ -454,14 +454,14 @@ NULL	NULL
 12345.6789012346	457.2473667123926
 123456.7890123456	4572.4736671239111
 123456.7890123457	4572.4736671239148
-1234567.8901234560	45724.7366712391111
+1234567.890123456	45724.7366712391111
 1234567.8901234568	45724.7366712391407
-12345678.9012345600	457247.3667123911111
+12345678.90123456	457247.3667123911111
 12345678.9012345679	457247.3667123914037
-123456789.0123456000	4572473.6671239111111
+123456789.0123456	4572473.6671239111111
 123456789.0123456789	4572473.6671239140333
-1234567890.1234560000	45724736.6712391111111
-1234567890.1234567890	45724736.6712391403333
+1234567890.123456	45724736.6712391111111
+1234567890.123456789	45724736.6712391403333
 PREHOOK: query: SELECT dec, dec * dec FROM DECIMAL_PRECISION ORDER BY dec
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_precision
@@ -514,13 +514,13 @@ NULL	NULL
 NULL	NULL
 NULL	NULL
 NULL	NULL
-0.0000000000	0.00000000000000000000
-0.0000000000	0.00000000000000000000
-0.0000000000	0.00000000000000000000
-0.0000000000	0.00000000000000000000
-0.0000000000	0.00000000000000000000
-0.1234567890	0.01524157875019052100
-0.1234567890	0.01524157875019052100
+0	0
+0	0
+0	0
+0	0
+0	0
+0.123456789	0.015241578750190521
+0.123456789	0.015241578750190521
 1.2345678901	1.52415787526596567801
 1.2345678901	1.52415787526596567801
 1.2345678901	1.52415787526596567801
@@ -537,14 +537,14 @@ NULL	NULL
 12345.6789012346	152415787.53238916034140423716
 123456.7890123456	15241578753.23881726870921383936
 123456.7890123457	15241578753.23884196006701630849
-1234567.8901234560	1524157875323.88172687092138393600
+1234567.890123456	1524157875323.881726870921383936
 1234567.8901234568	1524157875323.88370217954558146624
-12345678.9012345600	152415787532388.17268709213839360000
+12345678.90123456	152415787532388.1726870921383936
 12345678.9012345679	152415787532388.36774881877789971041
-123456789.0123456000	15241578753238817.26870921383936000000
+123456789.0123456	15241578753238817.26870921383936
 123456789.0123456789	15241578753238836.75019051998750190521
-1234567890.1234560000	NULL
-1234567890.1234567890	NULL
+1234567890.123456	NULL
+1234567890.123456789	NULL
 PREHOOK: query: EXPLAIN SELECT avg(dec), sum(dec) FROM DECIMAL_PRECISION
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT avg(dec), sum(dec) FROM DECIMAL_PRECISION
@@ -643,7 +643,7 @@ POSTHOOK: query: SELECT MIN(cast('12345678901234567890.12345678' as decimal(38,1
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_precision
 #### A masked pattern was here ####
-12345678901234567890.123456780000000000
+12345678901234567890.12345678
 PREHOOK: query: SELECT COUNT(cast('12345678901234567890.12345678' as decimal(38,18))) FROM DECIMAL_PRECISION
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_precision
diff --git a/ql/src/test/results/clientpositive/tez/vector_decimal_round_2.q.out b/ql/src/test/results/clientpositive/tez/vector_decimal_round_2.q.out
index 5336f38..65efe87 100644
--- a/ql/src/test/results/clientpositive/tez/vector_decimal_round_2.q.out
+++ b/ql/src/test/results/clientpositive/tez/vector_decimal_round_2.q.out
@@ -25,7 +25,7 @@ POSTHOOK: query: select * from decimal_tbl_1_orc
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_tbl_1_orc
 #### A masked pattern was here ####
-55555.000000000000000000
+55555
 PREHOOK: query: EXPLAIN
 SELECT
   round(dec) as d, round(dec, 0), round(dec, 1), round(dec, 2), round(dec, 3),
@@ -132,7 +132,7 @@ POSTHOOK: query: select * from decimal_tbl_2_orc
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_tbl_2_orc
 #### A masked pattern was here ####
-125.315000000000000000	-125.315000000000000000
+125.315	-125.315
 PREHOOK: query: EXPLAIN
 SELECT
   round(pos) as p, round(pos, 0),
@@ -250,7 +250,7 @@ POSTHOOK: query: select * from decimal_tbl_3_orc
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_tbl_3_orc
 #### A masked pattern was here ####
-3.141592653589793000
+3.141592653589793
 PREHOOK: query: EXPLAIN
 SELECT
   round(dec, -15) as d, round(dec, -16),
@@ -413,7 +413,7 @@ POSTHOOK: query: select * from decimal_tbl_4_orc
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_tbl_4_orc
 #### A masked pattern was here ####
-1809242.315111134400000000	-1809242.315111134400000000
+1809242.3151111344	-1809242.3151111344
 PREHOOK: query: EXPLAIN
 SELECT round(pos, 9) as p, round(neg, 9), round(1809242.3151111344BD, 9), round(-1809242.3151111344BD, 9)
 FROM decimal_tbl_4_orc ORDER BY p
diff --git a/ql/src/test/results/clientpositive/tez/vector_decimal_trailing.q.out b/ql/src/test/results/clientpositive/tez/vector_decimal_trailing.q.out
index 7dea1a2..ffdb1c9 100644
--- a/ql/src/test/results/clientpositive/tez/vector_decimal_trailing.q.out
+++ b/ql/src/test/results/clientpositive/tez/vector_decimal_trailing.q.out
@@ -73,16 +73,16 @@ POSTHOOK: query: SELECT * FROM DECIMAL_TRAILING ORDER BY id
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_trailing
 #### A masked pattern was here ####
-0	0.0000	0.00000000
-1	0.0000	0.00000000
+0	0	0
+1	0	0
 2	NULL	NULL
-3	1.0000	1.00000000
-4	10.0000	10.00000000
-5	100.0000	100.00000000
-6	1000.0000	1000.00000000
-7	10000.0000	10000.00000000
-8	100000.0000	100000.00000000
-9	NULL	1000000.00000000
+3	1	1
+4	10	10
+5	100	100
+6	1000	1000
+7	10000	10000
+8	100000	100000
+9	NULL	1000000
 10	NULL	NULL
 11	NULL	NULL
 12	NULL	NULL
@@ -91,18 +91,18 @@ POSTHOOK: Input: default@decimal_trailing
 15	NULL	NULL
 16	NULL	NULL
 17	NULL	NULL
-18	1.0000	1.00000000
-19	10.0000	10.00000000
-20	100.0000	100.00000000
-21	1000.0000	1000.00000000
-22	100000.0000	10000.00000000
-23	0.0000	0.00000000
-24	0.0000	0.00000000
-25	0.0000	0.00000000
-26	0.0000	0.00000000
-27	0.0000	0.00000000
-28	12313.2000	134134.31252500
-29	99999.9990	134134.31242553
+18	1	1
+19	10	10
+20	100	100
+21	1000	1000
+22	100000	10000
+23	0	0
+24	0	0
+25	0	0
+26	0	0
+27	0	0
+28	12313.2	134134.312525
+29	99999.999	134134.31242553
 PREHOOK: query: DROP TABLE DECIMAL_TRAILING_txt
 PREHOOK: type: DROPTABLE
 PREHOOK: Input: default@decimal_trailing_txt
diff --git a/ql/src/test/results/clientpositive/tez/vector_decimal_udf.q.out b/ql/src/test/results/clientpositive/tez/vector_decimal_udf.q.out
index 3803f69..3f22907 100644
--- a/ql/src/test/results/clientpositive/tez/vector_decimal_udf.q.out
+++ b/ql/src/test/results/clientpositive/tez/vector_decimal_udf.q.out
@@ -93,44 +93,44 @@ POSTHOOK: query: SELECT key + key FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
--8800.0000000000
+-8800
 NULL
-0.0000000000
-0.0000000000
-200.0000000000
-20.0000000000
-2.0000000000
-0.2000000000
-0.0200000000
-400.0000000000
-40.0000000000
-4.0000000000
-0.0000000000
-0.4000000000
-0.0400000000
-0.6000000000
-0.6600000000
-0.6660000000
--0.6000000000
--0.6600000000
--0.6660000000
-2.0000000000
-4.0000000000
-6.2800000000
--2.2400000000
--2.2400000000
--2.2440000000
-2.2400000000
-2.2440000000
-248.0000000000
-250.4000000000
--2510.9800000000
-6.2800000000
-6.2800000000
-6.2800000000
-2.0000000000
--2469135780.2469135780
-2469135780.2469135600
+0
+0
+200
+20
+2
+0.2
+0.02
+400
+40
+4
+0
+0.4
+0.04
+0.6
+0.66
+0.666
+-0.6
+-0.66
+-0.666
+2
+4
+6.28
+-2.24
+-2.24
+-2.244
+2.24
+2.244
+248
+250.4
+-2510.98
+6.28
+6.28
+6.28
+2
+-2469135780.246913578
+2469135780.24691356
 PREHOOK: query: EXPLAIN SELECT key + value FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT key + value FROM DECIMAL_UDF
@@ -176,44 +176,44 @@ POSTHOOK: query: SELECT key + value FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
-0.0000000000
+0
 NULL
-0.0000000000
-0.0000000000
-200.0000000000
-20.0000000000
-2.0000000000
-0.1000000000
-0.0100000000
-400.0000000000
-40.0000000000
-4.0000000000
-0.0000000000
-0.2000000000
-0.0200000000
-0.3000000000
-0.3300000000
-0.3330000000
--0.3000000000
--0.3300000000
--0.3330000000
-2.0000000000
-4.0000000000
-6.1400000000
--2.1200000000
--2.1200000000
--12.1220000000
-2.1200000000
-2.1220000000
-248.0000000000
-250.2000000000
--2510.4900000000
-6.1400000000
-6.1400000000
-7.1400000000
-2.0000000000
--2469135780.1234567890
-2469135780.1234567800
+0
+0
+200
+20
+2
+0.1
+0.01
+400
+40
+4
+0
+0.2
+0.02
+0.3
+0.33
+0.333
+-0.3
+-0.33
+-0.333
+2
+4
+6.14
+-2.12
+-2.12
+-12.122
+2.12
+2.122
+248
+250.2
+-2510.49
+6.14
+6.14
+7.14
+2
+-2469135780.123456789
+2469135780.12345678
 PREHOOK: query: EXPLAIN SELECT key + (value/2) FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT key + (value/2) FROM DECIMAL_UDF
@@ -425,44 +425,44 @@ POSTHOOK: query: SELECT key - key FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
-0.0000000000
+0
 NULL
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
 PREHOOK: query: EXPLAIN SELECT key - value FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT key - value FROM DECIMAL_UDF
@@ -508,44 +508,44 @@ POSTHOOK: query: SELECT key - value FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
--8800.0000000000
+-8800
 NULL
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.1000000000
-0.0100000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.2000000000
-0.0200000000
-0.3000000000
-0.3300000000
-0.3330000000
--0.3000000000
--0.3300000000
--0.3330000000
-0.0000000000
-0.0000000000
-0.1400000000
--0.1200000000
--0.1200000000
-9.8780000000
-0.1200000000
-0.1220000000
-0.0000000000
-0.2000000000
--0.4900000000
-0.1400000000
-0.1400000000
--0.8600000000
-0.0000000000
--0.1234567890
-0.1234567800
+0
+0
+0
+0
+0
+0.1
+0.01
+0
+0
+0
+0
+0.2
+0.02
+0.3
+0.33
+0.333
+-0.3
+-0.33
+-0.333
+0
+0
+0.14
+-0.12
+-0.12
+9.878
+0.12
+0.122
+0
+0.2
+-0.49
+0.14
+0.14
+-0.86
+0
+-0.123456789
+0.12345678
 PREHOOK: query: EXPLAIN SELECT key - (value/2) FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT key - (value/2) FROM DECIMAL_UDF
@@ -757,42 +757,42 @@ POSTHOOK: query: SELECT key * key FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
-19360000.00000000000000000000
+19360000
 NULL
-0.00000000000000000000
-0.00000000000000000000
-10000.00000000000000000000
-100.00000000000000000000
-1.00000000000000000000
-0.01000000000000000000
-0.00010000000000000000
-40000.00000000000000000000
-400.00000000000000000000
-4.00000000000000000000
-0.00000000000000000000
-0.04000000000000000000
-0.00040000000000000000
-0.09000000000000000000
-0.10890000000000000000
-0.11088900000000000000
-0.09000000000000000000
-0.10890000000000000000
-0.11088900000000000000
-1.00000000000000000000
-4.00000000000000000000
-9.85960000000000000000
-1.25440000000000000000
-1.25440000000000000000
-1.25888400000000000000
-1.25440000000000000000
-1.25888400000000000000
-15376.00000000000000000000
-15675.04000000000000000000
-1576255.14010000000000000000
-9.85960000000000000000
-9.85960000000000000000
-9.85960000000000000000
-1.00000000000000000000
+0
+0
+10000
+100
+1
+0.01
+0.0001
+40000
+400
+4
+0
+0.04
+0.0004
+0.09
+0.1089
+0.110889
+0.09
+0.1089
+0.110889
+1
+4
+9.8596
+1.2544
+1.2544
+1.258884
+1.2544
+1.258884
+15376
+15675.04
+1576255.1401
+9.8596
+9.8596
+9.8596
+1
 NULL
 NULL
 PREHOOK: query: EXPLAIN SELECT key, value FROM DECIMAL_UDF where key * value > 0
@@ -843,29 +843,29 @@ POSTHOOK: query: SELECT key, value FROM DECIMAL_UDF where key * value > 0
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
-100.0000000000	100
-10.0000000000	10
-1.0000000000	1
-200.0000000000	200
-20.0000000000	20
-2.0000000000	2
-1.0000000000	1
-2.0000000000	2
-3.1400000000	3
--1.1200000000	-1
--1.1200000000	-1
--1.1220000000	-11
-1.1200000000	1
-1.1220000000	1
-124.0000000000	124
-125.2000000000	125
--1255.4900000000	-1255
-3.1400000000	3
-3.1400000000	3
-3.1400000000	4
-1.0000000000	1
--1234567890.1234567890	-1234567890
-1234567890.1234567800	1234567890
+100	100
+10	10
+1	1
+200	200
+20	20
+2	2
+1	1
+2	2
+3.14	3
+-1.12	-1
+-1.12	-1
+-1.122	-11
+1.12	1
+1.122	1
+124	124
+125.2	125
+-1255.49	-1255
+3.14	3
+3.14	3
+3.14	4
+1	1
+-1234567890.123456789	-1234567890
+1234567890.12345678	1234567890
 PREHOOK: query: EXPLAIN SELECT key * value FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT key * value FROM DECIMAL_UDF
@@ -911,44 +911,44 @@ POSTHOOK: query: SELECT key * value FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
--19360000.0000000000
+-19360000
 NULL
-0.0000000000
-0.0000000000
-10000.0000000000
-100.0000000000
-1.0000000000
-0.0000000000
-0.0000000000
-40000.0000000000
-400.0000000000
-4.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-1.0000000000
-4.0000000000
-9.4200000000
-1.1200000000
-1.1200000000
-12.3420000000
-1.1200000000
-1.1220000000
-15376.0000000000
-15650.0000000000
-1575639.9500000000
-9.4200000000
-9.4200000000
-12.5600000000
-1.0000000000
-1524157875171467887.5019052100
-1524157875171467876.3907942000
+0
+0
+10000
+100
+1
+0
+0
+40000
+400
+4
+0
+0
+0
+0
+0
+0
+0
+0
+0
+1
+4
+9.42
+1.12
+1.12
+12.342
+1.12
+1.122
+15376
+15650
+1575639.95
+9.42
+9.42
+12.56
+1
+1524157875171467887.50190521
+1524157875171467876.3907942
 PREHOOK: query: EXPLAIN SELECT key * (value/2) FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT key * (value/2) FROM DECIMAL_UDF
@@ -1260,40 +1260,40 @@ POSTHOOK: query: SELECT key / key FROM DECIMAL_UDF WHERE key is not null and key
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
 PREHOOK: query: EXPLAIN SELECT key / value FROM DECIMAL_UDF WHERE value is not null and value <> 0
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT key / value FROM DECIMAL_UDF WHERE value is not null and value <> 0
@@ -1342,30 +1342,30 @@ POSTHOOK: query: SELECT key / value FROM DECIMAL_UDF WHERE value is not null and
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
--1.000000000000000000000
-1.000000000000000000000
-1.000000000000000000000
-1.000000000000000000000
-1.000000000000000000000
-1.000000000000000000000
-1.000000000000000000000
-1.000000000000000000000
-1.000000000000000000000
+-1
+1
+1
+1
+1
+1
+1
+1
+1
 1.046666666666666666667
-1.120000000000000000000
-1.120000000000000000000
-0.102000000000000000000
-1.120000000000000000000
-1.122000000000000000000
-1.000000000000000000000
-1.001600000000000000000
+1.12
+1.12
+0.102
+1.12
+1.122
+1
+1.0016
 1.000390438247011952191
 1.046666666666666666667
 1.046666666666666666667
-0.785000000000000000000
-1.000000000000000000000
-1.000000000100000000000
-1.000000000099999992710
+0.785
+1
+1.0000000001
+1.00000000009999999271
 PREHOOK: query: EXPLAIN SELECT key / (value/2) FROM DECIMAL_UDF  WHERE value is not null and value <> 0
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT key / (value/2) FROM DECIMAL_UDF  WHERE value is not null and value <> 0
@@ -1566,46 +1566,45 @@ POSTHOOK: query: SELECT abs(key) FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
-4400.0000000000
+4400
 NULL
-0.0000000000
-0.0000000000
-100.0000000000
-10.0000000000
-1.0000000000
-0.1000000000
-0.0100000000
-200.0000000000
-20.0000000000
-2.0000000000
-0.0000000000
-0.2000000000
-0.0200000000
-0.3000000000
-0.3300000000
-0.3330000000
-0.3000000000
-0.3300000000
-0.3330000000
-1.0000000000
-2.0000000000
-3.1400000000
-1.1200000000
-1.1200000000
-1.1220000000
-1.1200000000
-1.1220000000
-124.0000000000
-125.2000000000
-1255.4900000000
-3.1400000000
-3.1400000000
-3.1400000000
-1.0000000000
-1234567890.1234567890
-1234567890.1234567800
-PREHOOK: query: -- avg
-EXPLAIN SELECT value, sum(key) / count(key), avg(key), sum(key) FROM DECIMAL_UDF GROUP BY value ORDER BY value
+0
+0
+100
+10
+1
+0.1
+0.01
+200
+20
+2
+0
+0.2
+0.02
+0.3
+0.33
+0.333
+0.3
+0.33
+0.333
+1
+2
+3.14
+1.12
+1.12
+1.122
+1.12
+1.122
+124
+125.2
+1255.49
+3.14
+3.14
+3.14
+1
+1234567890.123456789
+1234567890.12345678
+PREHOOK: query: EXPLAIN SELECT value, sum(key) / count(key), avg(key), sum(key) FROM DECIMAL_UDF GROUP BY value ORDER BY value
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT value, sum(key) / count(key), avg(key), sum(key) FROM DECIMAL_UDF GROUP BY value ORDER BY value
 POSTHOOK: type: QUERY
@@ -1689,25 +1688,24 @@ POSTHOOK: query: SELECT value, sum(key) / count(key), avg(key), sum(key) FROM DE
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
--1234567890	-1234567890.12345678900000000000000	-1234567890.12345678900000	-1234567890.1234567890
--1255	-1255.49000000000000000000000	-1255.49000000000000	-1255.4900000000
--11	-1.12200000000000000000000	-1.12200000000000	-1.1220000000
--1	-1.12000000000000000000000	-1.12000000000000	-2.2400000000
-0	0.02538461538461538461538	0.02538461538462	0.3300000000
-1	1.04840000000000000000000	1.04840000000000	5.2420000000
-2	2.00000000000000000000000	2.00000000000000	4.0000000000
-3	3.14000000000000000000000	3.14000000000000	9.4200000000
-4	3.14000000000000000000000	3.14000000000000	3.1400000000
-10	10.00000000000000000000000	10.00000000000000	10.0000000000
-20	20.00000000000000000000000	20.00000000000000	20.0000000000
-100	100.00000000000000000000000	100.00000000000000	100.0000000000
-124	124.00000000000000000000000	124.00000000000000	124.0000000000
-125	125.20000000000000000000000	125.20000000000000	125.2000000000
-200	200.00000000000000000000000	200.00000000000000	200.0000000000
-4400	-4400.00000000000000000000000	-4400.00000000000000	-4400.0000000000
-1234567890	1234567890.12345678000000000000000	1234567890.12345678000000	1234567890.1234567800
-PREHOOK: query: -- negative
-EXPLAIN SELECT -key FROM DECIMAL_UDF
+-1234567890	-1234567890.123456789	-1234567890.123456789	-1234567890.123456789
+-1255	-1255.49	-1255.49	-1255.49
+-11	-1.122	-1.122	-1.122
+-1	-1.12	-1.12	-2.24
+0	0.02538461538461538461538	0.02538461538462	0.33
+1	1.0484	1.0484	5.242
+2	2	2	4
+3	3.14	3.14	9.42
+4	3.14	3.14	3.14
+10	10	10	10
+20	20	20	20
+100	100	100	100
+124	124	124	124
+125	125.2	125.2	125.2
+200	200	200	200
+4400	-4400	-4400	-4400
+1234567890	1234567890.12345678	1234567890.12345678	1234567890.12345678
+PREHOOK: query: EXPLAIN SELECT -key FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT -key FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
@@ -1752,46 +1750,45 @@ POSTHOOK: query: SELECT -key FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
-4400.0000000000
+4400
 NULL
-0.0000000000
-0.0000000000
--100.0000000000
--10.0000000000
--1.0000000000
--0.1000000000
--0.0100000000
--200.0000000000
--20.0000000000
--2.0000000000
-0.0000000000
--0.2000000000
--0.0200000000
--0.3000000000
--0.3300000000
--0.3330000000
-0.3000000000
-0.3300000000
-0.3330000000
--1.0000000000
--2.0000000000
--3.1400000000
-1.1200000000
-1.1200000000
-1.1220000000
--1.1200000000
--1.1220000000
--124.0000000000
--125.2000000000
-1255.4900000000
--3.1400000000
--3.1400000000
--3.1400000000
--1.0000000000
-1234567890.1234567890
--1234567890.1234567800
-PREHOOK: query: -- positive
-EXPLAIN SELECT +key FROM DECIMAL_UDF
+0
+0
+-100
+-10
+-1
+-0.1
+-0.01
+-200
+-20
+-2
+0
+-0.2
+-0.02
+-0.3
+-0.33
+-0.333
+0.3
+0.33
+0.333
+-1
+-2
+-3.14
+1.12
+1.12
+1.122
+-1.12
+-1.122
+-124
+-125.2
+1255.49
+-3.14
+-3.14
+-3.14
+-1
+1234567890.123456789
+-1234567890.12345678
+PREHOOK: query: EXPLAIN SELECT +key FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT +key FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
@@ -1818,46 +1815,45 @@ POSTHOOK: query: SELECT +key FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
--4400.0000000000
+-4400
 NULL
-0.0000000000
-0.0000000000
-100.0000000000
-10.0000000000
-1.0000000000
-0.1000000000
-0.0100000000
-200.0000000000
-20.0000000000
-2.0000000000
-0.0000000000
-0.2000000000
-0.0200000000
-0.3000000000
-0.3300000000
-0.3330000000
--0.3000000000
--0.3300000000
--0.3330000000
-1.0000000000
-2.0000000000
-3.1400000000
--1.1200000000
--1.1200000000
--1.1220000000
-1.1200000000
-1.1220000000
-124.0000000000
-125.2000000000
--1255.4900000000
-3.1400000000
-3.1400000000
-3.1400000000
-1.0000000000
--1234567890.1234567890
-1234567890.1234567800
-PREHOOK: query: -- ceiling
-EXPlAIN SELECT CEIL(key) FROM DECIMAL_UDF
+0
+0
+100
+10
+1
+0.1
+0.01
+200
+20
+2
+0
+0.2
+0.02
+0.3
+0.33
+0.333
+-0.3
+-0.33
+-0.333
+1
+2
+3.14
+-1.12
+-1.12
+-1.122
+1.12
+1.122
+124
+125.2
+-1255.49
+3.14
+3.14
+3.14
+1
+-1234567890.123456789
+1234567890.12345678
+PREHOOK: query: EXPlAIN SELECT CEIL(key) FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPlAIN SELECT CEIL(key) FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
@@ -2068,42 +2064,42 @@ POSTHOOK: query: SELECT ROUND(key, 2) FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
--4400.00
+-4400
 NULL
-0.00
-0.00
-100.00
-10.00
-1.00
-0.10
+0
+0
+100
+10
+1
+0.1
 0.01
-200.00
-20.00
-2.00
-0.00
-0.20
+200
+20
+2
+0
+0.2
 0.02
-0.30
+0.3
 0.33
 0.33
--0.30
+-0.3
 -0.33
 -0.33
-1.00
-2.00
+1
+2
 3.14
 -1.12
 -1.12
 -1.12
 1.12
 1.12
-124.00
-125.20
+124
+125.2
 -1255.49
 3.14
 3.14
 3.14
-1.00
+1
 -1234567890.12
 1234567890.12
 PREHOOK: query: EXPLAIN SELECT POWER(key, 2) FROM DECIMAL_UDF
@@ -2233,46 +2229,45 @@ POSTHOOK: query: SELECT (key + 1) % (key / 2) FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
--2199.000000000000
+-2199
 NULL
 NULL
 NULL
-1.000000000000
-1.000000000000
-0.000000000000
-0.000000000000
-0.000000000000
-1.000000000000
-1.000000000000
-0.000000000000
+1
+1
+0
+0
+0
+1
+1
+0
 NULL
-0.000000000000
-0.000000000000
-0.100000000000
-0.010000000000
-0.001000000000
-0.100000000000
-0.010000000000
-0.001000000000
-0.000000000000
-0.000000000000
-1.000000000000
--0.120000000000
--0.120000000000
--0.122000000000
-0.440000000000
-0.439000000000
-1.000000000000
-1.000000000000
--626.745000000000
-1.000000000000
-1.000000000000
-1.000000000000
-0.000000000000
--617283944.061728394500
-1.000000000000
-PREHOOK: query: -- stddev, var
-EXPLAIN SELECT value, stddev(key), variance(key) FROM DECIMAL_UDF GROUP BY value
+0
+0
+0.1
+0.01
+0.001
+0.1
+0.01
+0.001
+0
+0
+1
+-0.12
+-0.12
+-0.122
+0.44
+0.439
+1
+1
+-626.745
+1
+1
+1
+0
+-617283944.0617283945
+1
+PREHOOK: query: EXPLAIN SELECT value, stddev(key), variance(key) FROM DECIMAL_UDF GROUP BY value
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT value, stddev(key), variance(key) FROM DECIMAL_UDF GROUP BY value
 POSTHOOK: type: QUERY
@@ -2567,9 +2562,8 @@ POSTHOOK: query: SELECT MIN(key) FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
--1234567890.1234567890
-PREHOOK: query: -- max
-EXPLAIN SELECT MAX(key) FROM DECIMAL_UDF
+-1234567890.123456789
+PREHOOK: query: EXPLAIN SELECT MAX(key) FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT MAX(key) FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
@@ -2633,9 +2627,8 @@ POSTHOOK: query: SELECT MAX(key) FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
-1234567890.1234567800
-PREHOOK: query: -- count
-EXPLAIN SELECT COUNT(key) FROM DECIMAL_UDF
+1234567890.12345678
+PREHOOK: query: EXPLAIN SELECT COUNT(key) FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT COUNT(key) FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
diff --git a/ql/src/test/results/clientpositive/tez/vector_reduce_groupby_decimal.q.out b/ql/src/test/results/clientpositive/tez/vector_reduce_groupby_decimal.q.out
index 3f34532..528c2cb 100644
--- a/ql/src/test/results/clientpositive/tez/vector_reduce_groupby_decimal.q.out
+++ b/ql/src/test/results/clientpositive/tez/vector_reduce_groupby_decimal.q.out
@@ -115,56 +115,56 @@ LIMIT 50
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_test
 #### A masked pattern was here ####
--1073051226	-7382.0	-4409.2486486486	-5280.96923076923100	-4409.2486486486
--1072081801	8373.0	5001.1702702703	5989.91538461538500	5001.1702702703
--1072076362	-5470.0	-3267.2162162162	-3913.15384615384660	-3267.2162162162
--1070883071	-741.0	-442.5972972973	-530.10000000000000	-442.5972972973
--1070551679	-947.0	-565.6405405405	-677.46923076923080	-565.6405405405
--1069512165	11417.0	6819.3432432432	8167.54615384615400	6819.3432432432
--1069109166	8390.0	5011.3243243243	6002.07692307692300	5011.3243243243
--1068623584	-14005.0	-8365.1486486486	-10018.96153846153900	-8365.1486486486
--1067386090	-3977.0	-2375.4513513514	-2845.08461538461600	-2375.4513513514
--1066922682	-9987.0	-5965.2081081081	-7144.54615384615400	-5965.2081081081
--1066226047	-9439.0	-5637.8891891892	-6752.51538461538500	-5637.8891891892
--1065117869	2538.0	1515.9405405405	1815.64615384615400	1515.9405405405
--1064949302	6454.0	3854.9567567568	4617.09230769230800	3854.9567567568
--1063498122	-11480.0	-6856.9729729730	-8212.61538461538700	-6856.9729729730
--1062973443	10541.0	6296.1108108108	7540.86923076923100	6296.1108108108
--1061614989	-4234.0	-2528.9567567568	-3028.93846153846200	-2528.9567567568
--1061057428	-1085.0	-648.0675675676	-776.19230769230770	-648.0675675676
--1059941909	8782.0	5245.4648648649	6282.50769230769300	5245.4648648649
--1059338191	7322.0	4373.4108108108	5238.04615384615400	4373.4108108108
--1059047258	12452.0	7437.5459459459	8907.96923076923100	7437.5459459459
--1056684111	13991.0	8356.7864864865	10008.94615384615500	8356.7864864865
--1055945837	13690.0	8177.0000000000	9793.61538461538700	8177.0000000000
--1055669248	2570.0	1535.0540540541	1838.53846153846200	1535.0540540541
--1055316250	-14990.0	-8953.4864864865	-10723.61538461538500	-8953.4864864865
--1053385587	14504.0	8663.2000000000	10375.93846153846200	8663.2000000000
--1053238077	-3704.0	-2212.3891891892	-2649.78461538461600	-2212.3891891892
--1052745800	-12404.0	-7408.8756756757	-8873.63076923077100	-7408.8756756757
--1052322972	-7433.0	-4439.7108108108	-5317.45384615384700	-4439.7108108108
--1050684541	-8261.0	-4934.2729729730	-5909.79230769230800	-4934.2729729730
--1050657303	-6999.0	-4180.4837837838	-5006.97692307692300	-4180.4837837838
--1050165799	8634.0	5157.0648648649	6176.63076923077000	5157.0648648649
+-1073051226	-7382.0	-4409.2486486486	-5280.969230769231	-4409.2486486486
+-1072081801	8373.0	5001.1702702703	5989.915384615385	5001.1702702703
+-1072076362	-5470.0	-3267.2162162162	-3913.1538461538466	-3267.2162162162
+-1070883071	-741.0	-442.5972972973	-530.1	-442.5972972973
+-1070551679	-947.0	-565.6405405405	-677.4692307692308	-565.6405405405
+-1069512165	11417.0	6819.3432432432	8167.546153846154	6819.3432432432
+-1069109166	8390.0	5011.3243243243	6002.076923076923	5011.3243243243
+-1068623584	-14005.0	-8365.1486486486	-10018.961538461539	-8365.1486486486
+-1067386090	-3977.0	-2375.4513513514	-2845.084615384616	-2375.4513513514
+-1066922682	-9987.0	-5965.2081081081	-7144.546153846154	-5965.2081081081
+-1066226047	-9439.0	-5637.8891891892	-6752.515384615385	-5637.8891891892
+-1065117869	2538.0	1515.9405405405	1815.646153846154	1515.9405405405
+-1064949302	6454.0	3854.9567567568	4617.092307692308	3854.9567567568
+-1063498122	-11480.0	-6856.972972973	-8212.615384615387	-6856.972972973
+-1062973443	10541.0	6296.1108108108	7540.869230769231	6296.1108108108
+-1061614989	-4234.0	-2528.9567567568	-3028.938461538462	-2528.9567567568
+-1061057428	-1085.0	-648.0675675676	-776.1923076923077	-648.0675675676
+-1059941909	8782.0	5245.4648648649	6282.507692307693	5245.4648648649
+-1059338191	7322.0	4373.4108108108	5238.046153846154	4373.4108108108
+-1059047258	12452.0	7437.5459459459	8907.969230769231	7437.5459459459
+-1056684111	13991.0	8356.7864864865	10008.946153846155	8356.7864864865
+-1055945837	13690.0	8177	9793.615384615387	8177
+-1055669248	2570.0	1535.0540540541	1838.538461538462	1535.0540540541
+-1055316250	-14990.0	-8953.4864864865	-10723.615384615385	-8953.4864864865
+-1053385587	14504.0	8663.2	10375.938461538462	8663.2
+-1053238077	-3704.0	-2212.3891891892	-2649.784615384616	-2212.3891891892
+-1052745800	-12404.0	-7408.8756756757	-8873.630769230771	-7408.8756756757
+-1052322972	-7433.0	-4439.7108108108	-5317.453846153847	-4439.7108108108
+-1050684541	-8261.0	-4934.272972973	-5909.792307692308	-4934.272972973
+-1050657303	-6999.0	-4180.4837837838	-5006.976923076923	-4180.4837837838
+-1050165799	8634.0	5157.0648648649	6176.63076923077	5157.0648648649
 -1048934049	-524.0	-312.9837837838	-374.86153846153854	-312.9837837838
--1046399794	4130.0	2466.8378378378	2954.53846153846140	2466.8378378378
--1045867222	-8034.0	-4798.6864864865	-5747.40000000000100	-4798.6864864865
--1045196363	-5039.0	-3009.7810810811	-3604.82307692307700	-3009.7810810811
--1045181724	-5706.0	-3408.1783783784	-4081.98461538461560	-3408.1783783784
--1045087657	-5865.0	-3503.1486486486	-4195.73076923076950	-3503.1486486486
--1044207190	5381.0	3214.0567567568	3849.48461538461560	3214.0567567568
--1044093617	-3422.0	-2043.9513513514	-2448.04615384615400	-2043.9513513514
--1043573508	16216.0	9685.7729729730	11600.67692307692400	9685.7729729730
--1043132597	12302.0	7347.9513513514	8800.66153846154000	7347.9513513514
--1043082182	9180.0	5483.1891891892	6567.23076923076950	5483.1891891892
--1042805968	5133.0	3065.9270270270	3672.06923076923070	3065.9270270270
--1042712895	9296.0	5552.4756756757	6650.21538461538500	5552.4756756757
--1042396242	9583.0	5723.9000000000	6855.53076923077000	5723.9000000000
--1041734429	-836.0	-499.3405405405	-598.06153846153850	-499.3405405405
--1041391389	-12970.0	-7746.9459459459	-9278.53846153846300	-7746.9459459459
--1041252354	756.0	451.5567567568	540.83076923076920	451.5567567568
--1039776293	13704.0	8185.3621621622	9803.63076923077100	8185.3621621622
--1039762548	-3802.0	-2270.9243243243	-2719.89230769230830	-2270.9243243243
+-1046399794	4130.0	2466.8378378378	2954.5384615384614	2466.8378378378
+-1045867222	-8034.0	-4798.6864864865	-5747.400000000001	-4798.6864864865
+-1045196363	-5039.0	-3009.7810810811	-3604.823076923077	-3009.7810810811
+-1045181724	-5706.0	-3408.1783783784	-4081.9846153846156	-3408.1783783784
+-1045087657	-5865.0	-3503.1486486486	-4195.7307692307695	-3503.1486486486
+-1044207190	5381.0	3214.0567567568	3849.4846153846156	3214.0567567568
+-1044093617	-3422.0	-2043.9513513514	-2448.046153846154	-2043.9513513514
+-1043573508	16216.0	9685.772972973	11600.676923076924	9685.772972973
+-1043132597	12302.0	7347.9513513514	8800.66153846154	7347.9513513514
+-1043082182	9180.0	5483.1891891892	6567.2307692307695	5483.1891891892
+-1042805968	5133.0	3065.927027027	3672.0692307692307	3065.927027027
+-1042712895	9296.0	5552.4756756757	6650.215384615385	5552.4756756757
+-1042396242	9583.0	5723.9	6855.53076923077	5723.9
+-1041734429	-836.0	-499.3405405405	-598.0615384615385	-499.3405405405
+-1041391389	-12970.0	-7746.9459459459	-9278.538461538463	-7746.9459459459
+-1041252354	756.0	451.5567567568	540.8307692307692	451.5567567568
+-1039776293	13704.0	8185.3621621622	9803.630769230771	8185.3621621622
+-1039762548	-3802.0	-2270.9243243243	-2719.8923076923083	-2270.9243243243
 PREHOOK: query: SELECT sum(hash(*))
   FROM (SELECT cint, cdouble, cdecimal1, cdecimal2, min(cdecimal1) as min_decimal1 FROM decimal_test
         WHERE cdecimal1 is not null and cdecimal2 is not null
diff --git a/ql/src/test/results/clientpositive/update_all_types.q.out b/ql/src/test/results/clientpositive/update_all_types.q.out
index 5413de2..0e268b9 100644
--- a/ql/src/test/results/clientpositive/update_all_types.q.out
+++ b/ql/src/test/results/clientpositive/update_all_types.q.out
@@ -87,16 +87,16 @@ POSTHOOK: query: select * from acid_uat order by i
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@acid_uat
 #### A masked pattern was here ####
-11	NULL	-1073279343	-1595604468	11.0	NULL	11.00	1969-12-31 16:00:02.351	NULL	oj1YrV5Wa	oj1YrV5Wa	P76636jJ6qM17d7DIy                  	true
+11	NULL	-1073279343	-1595604468	11.0	NULL	11	1969-12-31 16:00:02.351	NULL	oj1YrV5Wa	oj1YrV5Wa	P76636jJ6qM17d7DIy                  	true
 NULL	-7382	-1073051226	-1887561756	NULL	-7382.0	NULL	NULL	1969-12-31	A34p7oRr2WvUJNf	A34p7oRr2WvUJNf	4hA4KQj2vD3fI6gX82220d              	false
-11	NULL	-1072910839	2048385991	11.0	NULL	11.00	1969-12-31 16:00:02.351	NULL	0iqrc5	0iqrc5	KbaDXiN85adbHRx58v                  	false
+11	NULL	-1072910839	2048385991	11.0	NULL	11	1969-12-31 16:00:02.351	NULL	0iqrc5	0iqrc5	KbaDXiN85adbHRx58v                  	false
 NULL	8373	-1072081801	1864027286	NULL	8373.0	NULL	NULL	1969-12-31	dPkN74F7	dPkN74F7	4KWs6gw7lv2WYd66P                   	true
 NULL	-5470	-1072076362	1864027286	NULL	-5470.0	NULL	NULL	1969-12-31	2uLyD28144vklju213J1mr	2uLyD28144vklju213J1mr	4KWs6gw7lv2WYd66P                   	true
--51	NULL	-1071480828	-1401575336	-51.0	NULL	-51.00	1969-12-31 16:00:08.451	NULL	aw724t8c5558x2xneC624	aw724t8c5558x2xneC624	4uE7l74tESBiKfu7c8wM7GA             	true
-8	NULL	-1071363017	1349676361	8.0	NULL	8.00	1969-12-31 16:00:15.892	NULL	Anj0oF	Anj0oF	IwE1G7Qb0B1NEfV030g                 	true
+-51	NULL	-1071480828	-1401575336	-51.0	NULL	-51	1969-12-31 16:00:08.451	NULL	aw724t8c5558x2xneC624	aw724t8c5558x2xneC624	4uE7l74tESBiKfu7c8wM7GA             	true
+8	NULL	-1071363017	1349676361	8.0	NULL	8	1969-12-31 16:00:15.892	NULL	Anj0oF	Anj0oF	IwE1G7Qb0B1NEfV030g                 	true
 NULL	-741	-1070883071	-1645852809	NULL	-741.0	NULL	NULL	1969-12-31	0ruyd6Y50JpdGRf6HqD	0ruyd6Y50JpdGRf6HqD	xH7445Rals48VOulSyR5F               	false
 NULL	-947	-1070551679	1864027286	NULL	-947.0	NULL	NULL	1969-12-31	iUR3Q	iUR3Q	4KWs6gw7lv2WYd66P                   	false
-11	NULL	-1069736047	-453772520	11.0	NULL	11.00	1969-12-31 16:00:02.351	NULL	k17Am8uPHWk02cEf1jet	k17Am8uPHWk02cEf1jet	qrXLLNX1                            	true
+11	NULL	-1069736047	-453772520	11.0	NULL	11	1969-12-31 16:00:02.351	NULL	k17Am8uPHWk02cEf1jet	k17Am8uPHWk02cEf1jet	qrXLLNX1                            	true
 PREHOOK: query: update acid_uat set
     ti = 1,
     si = 2,
@@ -141,15 +141,15 @@ POSTHOOK: query: select * from acid_uat order by i
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@acid_uat
 #### A masked pattern was here ####
-11	NULL	-1073279343	-1595604468	11.0	NULL	11.00	1969-12-31 16:00:02.351	NULL	oj1YrV5Wa	oj1YrV5Wa	P76636jJ6qM17d7DIy                  	true
+11	NULL	-1073279343	-1595604468	11.0	NULL	11	1969-12-31 16:00:02.351	NULL	oj1YrV5Wa	oj1YrV5Wa	P76636jJ6qM17d7DIy                  	true
 NULL	-7382	-1073051226	-1887561756	NULL	-7382.0	NULL	NULL	1969-12-31	A34p7oRr2WvUJNf	A34p7oRr2WvUJNf	4hA4KQj2vD3fI6gX82220d              	false
-11	NULL	-1072910839	2048385991	11.0	NULL	11.00	1969-12-31 16:00:02.351	NULL	0iqrc5	0iqrc5	KbaDXiN85adbHRx58v                  	false
+11	NULL	-1072910839	2048385991	11.0	NULL	11	1969-12-31 16:00:02.351	NULL	0iqrc5	0iqrc5	KbaDXiN85adbHRx58v                  	false
 NULL	8373	-1072081801	1864027286	NULL	8373.0	NULL	NULL	1969-12-31	dPkN74F7	dPkN74F7	4KWs6gw7lv2WYd66P                   	true
 NULL	-5470	-1072076362	1864027286	NULL	-5470.0	NULL	NULL	1969-12-31	2uLyD28144vklju213J1mr	2uLyD28144vklju213J1mr	4KWs6gw7lv2WYd66P                   	true
--51	NULL	-1071480828	-1401575336	-51.0	NULL	-51.00	1969-12-31 16:00:08.451	NULL	aw724t8c5558x2xneC624	aw724t8c5558x2xneC624	4uE7l74tESBiKfu7c8wM7GA             	true
-8	NULL	-1071363017	1349676361	8.0	NULL	8.00	1969-12-31 16:00:15.892	NULL	Anj0oF	Anj0oF	IwE1G7Qb0B1NEfV030g                 	true
+-51	NULL	-1071480828	-1401575336	-51.0	NULL	-51	1969-12-31 16:00:08.451	NULL	aw724t8c5558x2xneC624	aw724t8c5558x2xneC624	4uE7l74tESBiKfu7c8wM7GA             	true
+8	NULL	-1071363017	1349676361	8.0	NULL	8	1969-12-31 16:00:15.892	NULL	Anj0oF	Anj0oF	IwE1G7Qb0B1NEfV030g                 	true
 NULL	-947	-1070551679	1864027286	NULL	-947.0	NULL	NULL	1969-12-31	iUR3Q	iUR3Q	4KWs6gw7lv2WYd66P                   	false
-11	NULL	-1069736047	-453772520	11.0	NULL	11.00	1969-12-31 16:00:02.351	NULL	k17Am8uPHWk02cEf1jet	k17Am8uPHWk02cEf1jet	qrXLLNX1                            	true
+11	NULL	-1069736047	-453772520	11.0	NULL	11	1969-12-31 16:00:02.351	NULL	k17Am8uPHWk02cEf1jet	k17Am8uPHWk02cEf1jet	qrXLLNX1                            	true
 1	2	3	4	3.14	6.28	5.99	NULL	2014-09-01	its a beautiful day in the neighbhorhood	a beautiful day for a neighbor	wont you be mine                    	true
 PREHOOK: query: update acid_uat set
   ti = ti * 2,
@@ -175,13 +175,13 @@ POSTHOOK: query: select * from acid_uat order by i
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@acid_uat
 #### A masked pattern was here ####
-11	NULL	-1073279343	-1595604468	11.0	NULL	11.00	1969-12-31 16:00:02.351	NULL	oj1YrV5Wa	oj1YrV5Wa	P76636jJ6qM17d7DIy                  	true
+11	NULL	-1073279343	-1595604468	11.0	NULL	11	1969-12-31 16:00:02.351	NULL	oj1YrV5Wa	oj1YrV5Wa	P76636jJ6qM17d7DIy                  	true
 NULL	-7382	-1073051226	-1887561756	NULL	-7382.0	NULL	NULL	1969-12-31	A34p7oRr2WvUJNf	A34p7oRr2WvUJNf	4hA4KQj2vD3fI6gX82220d              	false
-11	NULL	-1072910839	2048385991	11.0	NULL	11.00	1969-12-31 16:00:02.351	NULL	0iqrc5	0iqrc5	KbaDXiN85adbHRx58v                  	false
+11	NULL	-1072910839	2048385991	11.0	NULL	11	1969-12-31 16:00:02.351	NULL	0iqrc5	0iqrc5	KbaDXiN85adbHRx58v                  	false
 NULL	8373	-1072081801	1864027286	NULL	8373.0	NULL	NULL	1969-12-31	dPkN74F7	dPkN74F7	4KWs6gw7lv2WYd66P                   	true
 NULL	-5470	-1072076362	1864027286	NULL	-5470.0	NULL	NULL	1969-12-31	2uLyD28144vklju213J1mr	2uLyD28144vklju213J1mr	4KWs6gw7lv2WYd66P                   	true
--102	-51	-1071480828	-1401575336	-51.0	-51.0	-51.00	1969-12-31 16:00:08.451	NULL	aw724t8c5558x2xneC624	aw724t8c5558x2xneC624	4uE7l74tESBiKfu7c8wM7GA             	true
-8	NULL	-1071363017	1349676361	8.0	NULL	8.00	1969-12-31 16:00:15.892	NULL	Anj0oF	Anj0oF	IwE1G7Qb0B1NEfV030g                 	true
+-102	-51	-1071480828	-1401575336	-51.0	-51.0	-51	1969-12-31 16:00:08.451	NULL	aw724t8c5558x2xneC624	aw724t8c5558x2xneC624	4uE7l74tESBiKfu7c8wM7GA             	true
+8	NULL	-1071363017	1349676361	8.0	NULL	8	1969-12-31 16:00:15.892	NULL	Anj0oF	Anj0oF	IwE1G7Qb0B1NEfV030g                 	true
 NULL	-947	-1070551679	1864027286	NULL	-947.0	NULL	NULL	1969-12-31	iUR3Q	iUR3Q	4KWs6gw7lv2WYd66P                   	false
-11	NULL	-1069736047	-453772520	11.0	NULL	11.00	1969-12-31 16:00:02.351	NULL	k17Am8uPHWk02cEf1jet	k17Am8uPHWk02cEf1jet	qrXLLNX1                            	true
+11	NULL	-1069736047	-453772520	11.0	NULL	11	1969-12-31 16:00:02.351	NULL	k17Am8uPHWk02cEf1jet	k17Am8uPHWk02cEf1jet	qrXLLNX1                            	true
 1	2	3	4	3.14	6.28	5.99	NULL	2014-09-01	its a beautiful day in the neighbhorhood	a beautiful day for a neighbor	wont you be mine                    	true
diff --git a/ql/src/test/results/clientpositive/vector_aggregate_9.q.out b/ql/src/test/results/clientpositive/vector_aggregate_9.q.out
index 8f7fc98..7c010a3 100644
--- a/ql/src/test/results/clientpositive/vector_aggregate_9.q.out
+++ b/ql/src/test/results/clientpositive/vector_aggregate_9.q.out
@@ -160,4 +160,4 @@ POSTHOOK: query: select min(dc), max(dc), sum(dc), avg(dc) from vectortab2korc
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@vectortab2korc
 #### A masked pattern was here ####
--4997414117561.546875000000000000	4994550248722.298828000000000000	-10252745435816.024410000000000000	-5399023399.587163986308583465
+-4997414117561.546875	4994550248722.298828	-10252745435816.02441	-5399023399.587163986308583465
diff --git a/ql/src/test/results/clientpositive/vector_between_in.q.out b/ql/src/test/results/clientpositive/vector_between_in.q.out
index b80da1b..a9b9a4b 100644
--- a/ql/src/test/results/clientpositive/vector_between_in.q.out
+++ b/ql/src/test/results/clientpositive/vector_between_in.q.out
@@ -594,34 +594,34 @@ POSTHOOK: Input: default@decimal_date_test
 -18.5162162162
 -17.3216216216
 -16.7243243243
--16.1270270270
+-16.127027027
 -15.5297297297
 -10.7513513514
 -9.5567567568
 -8.3621621622
--5.9729729730
+-5.972972973
 -3.5837837838
 4.1810810811
 4.7783783784
 4.7783783784
 5.3756756757
-5.9729729730
-5.9729729730
+5.972972973
+5.972972973
 11.3486486486
 11.3486486486
 11.9459459459
 14.9324324324
 19.1135135135
 20.3081081081
-22.1000000000
+22.1
 24.4891891892
 33.4486486486
 34.6432432432
 40.0189189189
 42.4081081081
 43.0054054054
-44.2000000000
-44.2000000000
+44.2
+44.2
 44.7972972973
 45.9918918919
 PREHOOK: query: SELECT COUNT(*) FROM decimal_date_test WHERE cdecimal1 NOT BETWEEN -2000 AND 4390.1351351351
diff --git a/ql/src/test/results/clientpositive/vector_data_types.q.out b/ql/src/test/results/clientpositive/vector_data_types.q.out
index 7a04125..2669c74 100644
--- a/ql/src/test/results/clientpositive/vector_data_types.q.out
+++ b/ql/src/test/results/clientpositive/vector_data_types.q.out
@@ -149,7 +149,7 @@ POSTHOOK: query: SELECT t, si, i, b, f, d, bo, s, ts, dec, bin FROM over1korc OR
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@over1korc
 #### A masked pattern was here ####
-108	301	65536	4294967357	90.05	17.59	true	ethan johnson	2013-03-01 09:11:58.703271	75.70	undecided
+108	301	65536	4294967357	90.05	17.59	true	ethan johnson	2013-03-01 09:11:58.703271	75.7	undecided
 118	497	65536	4294967381	50.32	12.72	false	david nixon	2013-03-01 09:11:58.703285	83.48	values clariffication
 18	280	65536	4294967320	32.92	45.94	false	holly white	2013-03-01 09:11:58.703086	58.86	topology
 69	489	65536	4294967404	33.52	17.99	false	oscar ichabod	2013-03-01 09:11:58.703247	32.68	topology
@@ -235,7 +235,7 @@ POSTHOOK: query: SELECT t, si, i, b, f, d, bo, s, ts, dec, bin FROM over1korc OR
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@over1korc
 #### A masked pattern was here ####
-108	301	65536	4294967357	90.05	17.59	true	ethan johnson	2013-03-01 09:11:58.703271	75.70	undecided
+108	301	65536	4294967357	90.05	17.59	true	ethan johnson	2013-03-01 09:11:58.703271	75.7	undecided
 118	497	65536	4294967381	50.32	12.72	false	david nixon	2013-03-01 09:11:58.703285	83.48	values clariffication
 18	280	65536	4294967320	32.92	45.94	false	holly white	2013-03-01 09:11:58.703086	58.86	topology
 69	489	65536	4294967404	33.52	17.99	false	oscar ichabod	2013-03-01 09:11:58.703247	32.68	topology
diff --git a/ql/src/test/results/clientpositive/vector_decimal_2.q.out b/ql/src/test/results/clientpositive/vector_decimal_2.q.out
index b970918..553f3be 100644
--- a/ql/src/test/results/clientpositive/vector_decimal_2.q.out
+++ b/ql/src/test/results/clientpositive/vector_decimal_2.q.out
@@ -1060,7 +1060,7 @@ POSTHOOK: query: select cast(cast('2012-12-19 11:12:19.1234567' as timestamp) as
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_2
 #### A masked pattern was here ####
-1355944339.12345670
+1355944339.1234567
 PREHOOK: query: explain
 select cast(true as decimal) as c from decimal_2 order by c
 PREHOOK: type: QUERY
@@ -1436,7 +1436,7 @@ POSTHOOK: query: select cast(0.99999999999999999999 as decimal(20,19)) as c from
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_2
 #### A masked pattern was here ####
-1.0000000000000000000
+1
 PREHOOK: query: explain
 select cast('0.99999999999999999999' as decimal(20,20)) as c from decimal_2 order by c
 PREHOOK: type: QUERY
diff --git a/ql/src/test/results/clientpositive/vector_decimal_3.q.out b/ql/src/test/results/clientpositive/vector_decimal_3.q.out
index eea91bb..75f872e 100644
--- a/ql/src/test/results/clientpositive/vector_decimal_3.q.out
+++ b/ql/src/test/results/clientpositive/vector_decimal_3.q.out
@@ -47,43 +47,43 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_3
 #### A masked pattern was here ####
 NULL	0
--1234567890.123456789000000000	-1234567890
--4400.000000000000000000	4400
--1255.490000000000000000	-1255
--1.122000000000000000	-11
--1.120000000000000000	-1
--1.120000000000000000	-1
--0.333000000000000000	0
--0.330000000000000000	0
--0.300000000000000000	0
-0.000000000000000000	0
-0.000000000000000000	0
-0.000000000000000000	0
-0.010000000000000000	0
-0.020000000000000000	0
-0.100000000000000000	0
-0.200000000000000000	0
-0.300000000000000000	0
-0.330000000000000000	0
-0.333000000000000000	0
-1.000000000000000000	1
-1.000000000000000000	1
-1.000000000000000000	1
-1.120000000000000000	1
-1.122000000000000000	1
-2.000000000000000000	2
-2.000000000000000000	2
-3.140000000000000000	3
-3.140000000000000000	3
-3.140000000000000000	3
-3.140000000000000000	4
-10.000000000000000000	10
-20.000000000000000000	20
-100.000000000000000000	100
-124.000000000000000000	124
-125.200000000000000000	125
-200.000000000000000000	200
-1234567890.123456780000000000	1234567890
+-1234567890.123456789	-1234567890
+-4400	4400
+-1255.49	-1255
+-1.122	-11
+-1.12	-1
+-1.12	-1
+-0.333	0
+-0.33	0
+-0.3	0
+0	0
+0	0
+0	0
+0.01	0
+0.02	0
+0.1	0
+0.2	0
+0.3	0
+0.33	0
+0.333	0
+1	1
+1	1
+1	1
+1.12	1
+1.122	1
+2	2
+2	2
+3.14	3
+3.14	3
+3.14	3
+3.14	4
+10	10
+20	20
+100	100
+124	124
+125.2	125
+200	200
+1234567890.12345678	1234567890
 PREHOOK: query: SELECT * FROM DECIMAL_3 ORDER BY key DESC, value DESC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_3
@@ -92,43 +92,43 @@ POSTHOOK: query: SELECT * FROM DECIMAL_3 ORDER BY key DESC, value DESC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_3
 #### A masked pattern was here ####
-1234567890.123456780000000000	1234567890
-200.000000000000000000	200
-125.200000000000000000	125
-124.000000000000000000	124
-100.000000000000000000	100
-20.000000000000000000	20
-10.000000000000000000	10
-3.140000000000000000	4
-3.140000000000000000	3
-3.140000000000000000	3
-3.140000000000000000	3
-2.000000000000000000	2
-2.000000000000000000	2
-1.122000000000000000	1
-1.120000000000000000	1
-1.000000000000000000	1
-1.000000000000000000	1
-1.000000000000000000	1
-0.333000000000000000	0
-0.330000000000000000	0
-0.300000000000000000	0
-0.200000000000000000	0
-0.100000000000000000	0
-0.020000000000000000	0
-0.010000000000000000	0
-0.000000000000000000	0
-0.000000000000000000	0
-0.000000000000000000	0
--0.300000000000000000	0
--0.330000000000000000	0
--0.333000000000000000	0
--1.120000000000000000	-1
--1.120000000000000000	-1
--1.122000000000000000	-11
--1255.490000000000000000	-1255
--4400.000000000000000000	4400
--1234567890.123456789000000000	-1234567890
+1234567890.12345678	1234567890
+200	200
+125.2	125
+124	124
+100	100
+20	20
+10	10
+3.14	4
+3.14	3
+3.14	3
+3.14	3
+2	2
+2	2
+1.122	1
+1.12	1
+1	1
+1	1
+1	1
+0.333	0
+0.33	0
+0.3	0
+0.2	0
+0.1	0
+0.02	0
+0.01	0
+0	0
+0	0
+0	0
+-0.3	0
+-0.33	0
+-0.333	0
+-1.12	-1
+-1.12	-1
+-1.122	-11
+-1255.49	-1255
+-4400	4400
+-1234567890.123456789	-1234567890
 NULL	0
 PREHOOK: query: SELECT * FROM DECIMAL_3 ORDER BY key, value
 PREHOOK: type: QUERY
@@ -139,43 +139,43 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_3
 #### A masked pattern was here ####
 NULL	0
--1234567890.123456789000000000	-1234567890
--4400.000000000000000000	4400
--1255.490000000000000000	-1255
--1.122000000000000000	-11
--1.120000000000000000	-1
--1.120000000000000000	-1
--0.333000000000000000	0
--0.330000000000000000	0
--0.300000000000000000	0
-0.000000000000000000	0
-0.000000000000000000	0
-0.000000000000000000	0
-0.010000000000000000	0
-0.020000000000000000	0
-0.100000000000000000	0
-0.200000000000000000	0
-0.300000000000000000	0
-0.330000000000000000	0
-0.333000000000000000	0
-1.000000000000000000	1
-1.000000000000000000	1
-1.000000000000000000	1
-1.120000000000000000	1
-1.122000000000000000	1
-2.000000000000000000	2
-2.000000000000000000	2
-3.140000000000000000	3
-3.140000000000000000	3
-3.140000000000000000	3
-3.140000000000000000	4
-10.000000000000000000	10
-20.000000000000000000	20
-100.000000000000000000	100
-124.000000000000000000	124
-125.200000000000000000	125
-200.000000000000000000	200
-1234567890.123456780000000000	1234567890
+-1234567890.123456789	-1234567890
+-4400	4400
+-1255.49	-1255
+-1.122	-11
+-1.12	-1
+-1.12	-1
+-0.333	0
+-0.33	0
+-0.3	0
+0	0
+0	0
+0	0
+0.01	0
+0.02	0
+0.1	0
+0.2	0
+0.3	0
+0.33	0
+0.333	0
+1	1
+1	1
+1	1
+1.12	1
+1.122	1
+2	2
+2	2
+3.14	3
+3.14	3
+3.14	3
+3.14	4
+10	10
+20	20
+100	100
+124	124
+125.2	125
+200	200
+1234567890.12345678	1234567890
 PREHOOK: query: SELECT DISTINCT key FROM DECIMAL_3 ORDER BY key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_3
@@ -185,34 +185,34 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_3
 #### A masked pattern was here ####
 NULL
--1234567890.123456789000000000
--4400.000000000000000000
--1255.490000000000000000
--1.122000000000000000
--1.120000000000000000
--0.333000000000000000
--0.330000000000000000
--0.300000000000000000
-0.000000000000000000
-0.010000000000000000
-0.020000000000000000
-0.100000000000000000
-0.200000000000000000
-0.300000000000000000
-0.330000000000000000
-0.333000000000000000
-1.000000000000000000
-1.120000000000000000
-1.122000000000000000
-2.000000000000000000
-3.140000000000000000
-10.000000000000000000
-20.000000000000000000
-100.000000000000000000
-124.000000000000000000
-125.200000000000000000
-200.000000000000000000
-1234567890.123456780000000000
+-1234567890.123456789
+-4400
+-1255.49
+-1.122
+-1.12
+-0.333
+-0.33
+-0.3
+0
+0.01
+0.02
+0.1
+0.2
+0.3
+0.33
+0.333
+1
+1.12
+1.122
+2
+3.14
+10
+20
+100
+124
+125.2
+200
+1234567890.12345678
 PREHOOK: query: SELECT key, sum(value) FROM DECIMAL_3 GROUP BY key ORDER BY key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_3
@@ -222,34 +222,34 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_3
 #### A masked pattern was here ####
 NULL	0
--1234567890.123456789000000000	-1234567890
--4400.000000000000000000	4400
--1255.490000000000000000	-1255
--1.122000000000000000	-11
--1.120000000000000000	-2
--0.333000000000000000	0
--0.330000000000000000	0
--0.300000000000000000	0
-0.000000000000000000	0
-0.010000000000000000	0
-0.020000000000000000	0
-0.100000000000000000	0
-0.200000000000000000	0
-0.300000000000000000	0
-0.330000000000000000	0
-0.333000000000000000	0
-1.000000000000000000	3
-1.120000000000000000	1
-1.122000000000000000	1
-2.000000000000000000	4
-3.140000000000000000	13
-10.000000000000000000	10
-20.000000000000000000	20
-100.000000000000000000	100
-124.000000000000000000	124
-125.200000000000000000	125
-200.000000000000000000	200
-1234567890.123456780000000000	1234567890
+-1234567890.123456789	-1234567890
+-4400	4400
+-1255.49	-1255
+-1.122	-11
+-1.12	-2
+-0.333	0
+-0.33	0
+-0.3	0
+0	0
+0.01	0
+0.02	0
+0.1	0
+0.2	0
+0.3	0
+0.33	0
+0.333	0
+1	3
+1.12	1
+1.122	1
+2	4
+3.14	13
+10	10
+20	20
+100	100
+124	124
+125.2	125
+200	200
+1234567890.12345678	1234567890
 PREHOOK: query: SELECT value, sum(key) FROM DECIMAL_3 GROUP BY value ORDER BY value
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_3
@@ -258,23 +258,23 @@ POSTHOOK: query: SELECT value, sum(key) FROM DECIMAL_3 GROUP BY value ORDER BY v
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_3
 #### A masked pattern was here ####
--1234567890	-1234567890.123456789000000000
--1255	-1255.490000000000000000
--11	-1.122000000000000000
--1	-2.240000000000000000
-0	0.330000000000000000
-1	5.242000000000000000
-2	4.000000000000000000
-3	9.420000000000000000
-4	3.140000000000000000
-10	10.000000000000000000
-20	20.000000000000000000
-100	100.000000000000000000
-124	124.000000000000000000
-125	125.200000000000000000
-200	200.000000000000000000
-4400	-4400.000000000000000000
-1234567890	1234567890.123456780000000000
+-1234567890	-1234567890.123456789
+-1255	-1255.49
+-11	-1.122
+-1	-2.24
+0	0.33
+1	5.242
+2	4
+3	9.42
+4	3.14
+10	10
+20	20
+100	100
+124	124
+125	125.2
+200	200
+4400	-4400
+1234567890	1234567890.12345678
 PREHOOK: query: SELECT * FROM DECIMAL_3 a JOIN DECIMAL_3 b ON (a.key = b.key) ORDER BY a.key, a.value, b.value
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_3
@@ -283,71 +283,71 @@ POSTHOOK: query: SELECT * FROM DECIMAL_3 a JOIN DECIMAL_3 b ON (a.key = b.key) O
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_3
 #### A masked pattern was here ####
--1234567890.123456789000000000	-1234567890	-1234567890.123456789000000000	-1234567890
--4400.000000000000000000	4400	-4400.000000000000000000	4400
--1255.490000000000000000	-1255	-1255.490000000000000000	-1255
--1.122000000000000000	-11	-1.122000000000000000	-11
--1.120000000000000000	-1	-1.120000000000000000	-1
--1.120000000000000000	-1	-1.120000000000000000	-1
--1.120000000000000000	-1	-1.120000000000000000	-1
--1.120000000000000000	-1	-1.120000000000000000	-1
--0.333000000000000000	0	-0.333000000000000000	0
--0.330000000000000000	0	-0.330000000000000000	0
--0.300000000000000000	0	-0.300000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.000000000000000000	0	0.000000000000000000	0
-0.010000000000000000	0	0.010000000000000000	0
-0.020000000000000000	0	0.020000000000000000	0
-0.100000000000000000	0	0.100000000000000000	0
-0.200000000000000000	0	0.200000000000000000	0
-0.300000000000000000	0	0.300000000000000000	0
-0.330000000000000000	0	0.330000000000000000	0
-0.333000000000000000	0	0.333000000000000000	0
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.000000000000000000	1	1.000000000000000000	1
-1.120000000000000000	1	1.120000000000000000	1
-1.122000000000000000	1	1.122000000000000000	1
-2.000000000000000000	2	2.000000000000000000	2
-2.000000000000000000	2	2.000000000000000000	2
-2.000000000000000000	2	2.000000000000000000	2
-2.000000000000000000	2	2.000000000000000000	2
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	3
-3.140000000000000000	3	3.140000000000000000	4
-3.140000000000000000	3	3.140000000000000000	4
-3.140000000000000000	3	3.140000000000000000	4
-3.140000000000000000	4	3.140000000000000000	3
-3.140000000000000000	4	3.140000000000000000	3
-3.140000000000000000	4	3.140000000000000000	3
-3.140000000000000000	4	3.140000000000000000	4
-10.000000000000000000	10	10.000000000000000000	10
-20.000000000000000000	20	20.000000000000000000	20
-100.000000000000000000	100	100.000000000000000000	100
-124.000000000000000000	124	124.000000000000000000	124
-125.200000000000000000	125	125.200000000000000000	125
-200.000000000000000000	200	200.000000000000000000	200
-1234567890.123456780000000000	1234567890	1234567890.123456780000000000	1234567890
+-1234567890.123456789	-1234567890	-1234567890.123456789	-1234567890
+-4400	4400	-4400	4400
+-1255.49	-1255	-1255.49	-1255
+-1.122	-11	-1.122	-11
+-1.12	-1	-1.12	-1
+-1.12	-1	-1.12	-1
+-1.12	-1	-1.12	-1
+-1.12	-1	-1.12	-1
+-0.333	0	-0.333	0
+-0.33	0	-0.33	0
+-0.3	0	-0.3	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0	0	0	0
+0.01	0	0.01	0
+0.02	0	0.02	0
+0.1	0	0.1	0
+0.2	0	0.2	0
+0.3	0	0.3	0
+0.33	0	0.33	0
+0.333	0	0.333	0
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1	1	1	1
+1.12	1	1.12	1
+1.122	1	1.122	1
+2	2	2	2
+2	2	2	2
+2	2	2	2
+2	2	2	2
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	3
+3.14	3	3.14	4
+3.14	3	3.14	4
+3.14	3	3.14	4
+3.14	4	3.14	3
+3.14	4	3.14	3
+3.14	4	3.14	3
+3.14	4	3.14	4
+10	10	10	10
+20	20	20	20
+100	100	100	100
+124	124	124	124
+125.2	125	125.2	125
+200	200	200	200
+1234567890.12345678	1234567890	1234567890.12345678	1234567890
 PREHOOK: query: SELECT * FROM DECIMAL_3 WHERE key=3.14 ORDER BY key, value
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_3
@@ -356,10 +356,10 @@ POSTHOOK: query: SELECT * FROM DECIMAL_3 WHERE key=3.14 ORDER BY key, value
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_3
 #### A masked pattern was here ####
-3.140000000000000000	3
-3.140000000000000000	3
-3.140000000000000000	3
-3.140000000000000000	4
+3.14	3
+3.14	3
+3.14	3
+3.14	4
 PREHOOK: query: SELECT * FROM DECIMAL_3 WHERE key=3.140 ORDER BY key, value
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_3
@@ -368,10 +368,10 @@ POSTHOOK: query: SELECT * FROM DECIMAL_3 WHERE key=3.140 ORDER BY key, value
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_3
 #### A masked pattern was here ####
-3.140000000000000000	3
-3.140000000000000000	3
-3.140000000000000000	3
-3.140000000000000000	4
+3.14	3
+3.14	3
+3.14	3
+3.14	4
 PREHOOK: query: DROP TABLE DECIMAL_3_txt
 PREHOOK: type: DROPTABLE
 PREHOOK: Input: default@decimal_3_txt
diff --git a/ql/src/test/results/clientpositive/vector_decimal_4.q.out b/ql/src/test/results/clientpositive/vector_decimal_4.q.out
index c7d3d9e..613f5a8 100644
--- a/ql/src/test/results/clientpositive/vector_decimal_4.q.out
+++ b/ql/src/test/results/clientpositive/vector_decimal_4.q.out
@@ -57,43 +57,43 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_4_1
 #### A masked pattern was here ####
 NULL	0
--1234567890.1234567890000000000000000	-1234567890
--4400.0000000000000000000000000	4400
--1255.4900000000000000000000000	-1255
--1.1220000000000000000000000	-11
--1.1200000000000000000000000	-1
--1.1200000000000000000000000	-1
--0.3330000000000000000000000	0
--0.3300000000000000000000000	0
--0.3000000000000000000000000	0
-0.0000000000000000000000000	0
-0.0000000000000000000000000	0
-0.0000000000000000000000000	0
-0.0100000000000000000000000	0
-0.0200000000000000000000000	0
-0.1000000000000000000000000	0
-0.2000000000000000000000000	0
-0.3000000000000000000000000	0
-0.3300000000000000000000000	0
-0.3330000000000000000000000	0
+-1234567890.123456789	-1234567890
+-4400	4400
+-1255.49	-1255
+-1.122	-11
+-1.12	-1
+-1.12	-1
+-0.333	0
+-0.33	0
+-0.3	0
+0	0
+0	0
+0	0
+0.01	0
+0.02	0
+0.1	0
+0.2	0
+0.3	0
+0.33	0
+0.333	0
 0.9999999999999999999999999	1
-1.0000000000000000000000000	1
-1.0000000000000000000000000	1
-1.1200000000000000000000000	1
-1.1220000000000000000000000	1
-2.0000000000000000000000000	2
-2.0000000000000000000000000	2
-3.1400000000000000000000000	3
-3.1400000000000000000000000	3
-3.1400000000000000000000000	3
-3.1400000000000000000000000	4
-10.0000000000000000000000000	10
-20.0000000000000000000000000	20
-100.0000000000000000000000000	100
-124.0000000000000000000000000	124
-125.2000000000000000000000000	125
-200.0000000000000000000000000	200
-1234567890.1234567800000000000000000	1234567890
+1	1
+1	1
+1.12	1
+1.122	1
+2	2
+2	2
+3.14	3
+3.14	3
+3.14	3
+3.14	4
+10	10
+20	20
+100	100
+124	124
+125.2	125
+200	200
+1234567890.12345678	1234567890
 PREHOOK: query: SELECT * FROM DECIMAL_4_2 ORDER BY key, value
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_4_2
@@ -103,43 +103,43 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_4_2
 #### A masked pattern was here ####
 NULL	NULL
--1234567890.1234567890000000000000000	-3703703670.3703703670000000000000000
--4400.0000000000000000000000000	-13200.0000000000000000000000000
--1255.4900000000000000000000000	-3766.4700000000000000000000000
--1.1220000000000000000000000	-3.3660000000000000000000000
--1.1200000000000000000000000	-3.3600000000000000000000000
--1.1200000000000000000000000	-3.3600000000000000000000000
--0.3330000000000000000000000	-0.9990000000000000000000000
--0.3300000000000000000000000	-0.9900000000000000000000000
--0.3000000000000000000000000	-0.9000000000000000000000000
-0.0000000000000000000000000	0.0000000000000000000000000
-0.0000000000000000000000000	0.0000000000000000000000000
-0.0000000000000000000000000	0.0000000000000000000000000
-0.0100000000000000000000000	0.0300000000000000000000000
-0.0200000000000000000000000	0.0600000000000000000000000
-0.1000000000000000000000000	0.3000000000000000000000000
-0.2000000000000000000000000	0.6000000000000000000000000
-0.3000000000000000000000000	0.9000000000000000000000000
-0.3300000000000000000000000	0.9900000000000000000000000
-0.3330000000000000000000000	0.9990000000000000000000000
+-1234567890.123456789	-3703703670.370370367
+-4400	-13200
+-1255.49	-3766.47
+-1.122	-3.366
+-1.12	-3.36
+-1.12	-3.36
+-0.333	-0.999
+-0.33	-0.99
+-0.3	-0.9
+0	0
+0	0
+0	0
+0.01	0.03
+0.02	0.06
+0.1	0.3
+0.2	0.6
+0.3	0.9
+0.33	0.99
+0.333	0.999
 0.9999999999999999999999999	2.9999999999999999999999997
-1.0000000000000000000000000	3.0000000000000000000000000
-1.0000000000000000000000000	3.0000000000000000000000000
-1.1200000000000000000000000	3.3600000000000000000000000
-1.1220000000000000000000000	3.3660000000000000000000000
-2.0000000000000000000000000	6.0000000000000000000000000
-2.0000000000000000000000000	6.0000000000000000000000000
-3.1400000000000000000000000	9.4200000000000000000000000
-3.1400000000000000000000000	9.4200000000000000000000000
-3.1400000000000000000000000	9.4200000000000000000000000
-3.1400000000000000000000000	9.4200000000000000000000000
-10.0000000000000000000000000	30.0000000000000000000000000
-20.0000000000000000000000000	60.0000000000000000000000000
-100.0000000000000000000000000	300.0000000000000000000000000
-124.0000000000000000000000000	372.0000000000000000000000000
-125.2000000000000000000000000	375.6000000000000000000000000
-200.0000000000000000000000000	600.0000000000000000000000000
-1234567890.1234567800000000000000000	3703703670.3703703400000000000000000
+1	3
+1	3
+1.12	3.36
+1.122	3.366
+2	6
+2	6
+3.14	9.42
+3.14	9.42
+3.14	9.42
+3.14	9.42
+10	30
+20	60
+100	300
+124	372
+125.2	375.6
+200	600
+1234567890.12345678	3703703670.37037034
 PREHOOK: query: SELECT * FROM DECIMAL_4_2 ORDER BY key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_4_2
@@ -149,43 +149,43 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_4_2
 #### A masked pattern was here ####
 NULL	NULL
--1234567890.1234567890000000000000000	-3703703670.3703703670000000000000000
--4400.0000000000000000000000000	-13200.0000000000000000000000000
--1255.4900000000000000000000000	-3766.4700000000000000000000000
--1.1220000000000000000000000	-3.3660000000000000000000000
--1.1200000000000000000000000	-3.3600000000000000000000000
--1.1200000000000000000000000	-3.3600000000000000000000000
--0.3330000000000000000000000	-0.9990000000000000000000000
--0.3300000000000000000000000	-0.9900000000000000000000000
--0.3000000000000000000000000	-0.9000000000000000000000000
-0.0000000000000000000000000	0.0000000000000000000000000
-0.0000000000000000000000000	0.0000000000000000000000000
-0.0000000000000000000000000	0.0000000000000000000000000
-0.0100000000000000000000000	0.0300000000000000000000000
-0.0200000000000000000000000	0.0600000000000000000000000
-0.1000000000000000000000000	0.3000000000000000000000000
-0.2000000000000000000000000	0.6000000000000000000000000
-0.3000000000000000000000000	0.9000000000000000000000000
-0.3300000000000000000000000	0.9900000000000000000000000
-0.3330000000000000000000000	0.9990000000000000000000000
+-1234567890.123456789	-3703703670.370370367
+-4400	-13200
+-1255.49	-3766.47
+-1.122	-3.366
+-1.12	-3.36
+-1.12	-3.36
+-0.333	-0.999
+-0.33	-0.99
+-0.3	-0.9
+0	0
+0	0
+0	0
+0.01	0.03
+0.02	0.06
+0.1	0.3
+0.2	0.6
+0.3	0.9
+0.33	0.99
+0.333	0.999
 0.9999999999999999999999999	2.9999999999999999999999997
-1.0000000000000000000000000	3.0000000000000000000000000
-1.0000000000000000000000000	3.0000000000000000000000000
-1.1200000000000000000000000	3.3600000000000000000000000
-1.1220000000000000000000000	3.3660000000000000000000000
-2.0000000000000000000000000	6.0000000000000000000000000
-2.0000000000000000000000000	6.0000000000000000000000000
-3.1400000000000000000000000	9.4200000000000000000000000
-3.1400000000000000000000000	9.4200000000000000000000000
-3.1400000000000000000000000	9.4200000000000000000000000
-3.1400000000000000000000000	9.4200000000000000000000000
-10.0000000000000000000000000	30.0000000000000000000000000
-20.0000000000000000000000000	60.0000000000000000000000000
-100.0000000000000000000000000	300.0000000000000000000000000
-124.0000000000000000000000000	372.0000000000000000000000000
-125.2000000000000000000000000	375.6000000000000000000000000
-200.0000000000000000000000000	600.0000000000000000000000000
-1234567890.1234567800000000000000000	3703703670.3703703400000000000000000
+1	3
+1	3
+1.12	3.36
+1.122	3.366
+2	6
+2	6
+3.14	9.42
+3.14	9.42
+3.14	9.42
+3.14	9.42
+10	30
+20	60
+100	300
+124	372
+125.2	375.6
+200	600
+1234567890.12345678	3703703670.37037034
 PREHOOK: query: SELECT * FROM DECIMAL_4_2 ORDER BY key, value
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_4_2
@@ -195,43 +195,43 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_4_2
 #### A masked pattern was here ####
 NULL	NULL
--1234567890.1234567890000000000000000	-3703703670.3703703670000000000000000
--4400.0000000000000000000000000	-13200.0000000000000000000000000
--1255.4900000000000000000000000	-3766.4700000000000000000000000
--1.1220000000000000000000000	-3.3660000000000000000000000
--1.1200000000000000000000000	-3.3600000000000000000000000
--1.1200000000000000000000000	-3.3600000000000000000000000
--0.3330000000000000000000000	-0.9990000000000000000000000
--0.3300000000000000000000000	-0.9900000000000000000000000
--0.3000000000000000000000000	-0.9000000000000000000000000
-0.0000000000000000000000000	0.0000000000000000000000000
-0.0000000000000000000000000	0.0000000000000000000000000
-0.0000000000000000000000000	0.0000000000000000000000000
-0.0100000000000000000000000	0.0300000000000000000000000
-0.0200000000000000000000000	0.0600000000000000000000000
-0.1000000000000000000000000	0.3000000000000000000000000
-0.2000000000000000000000000	0.6000000000000000000000000
-0.3000000000000000000000000	0.9000000000000000000000000
-0.3300000000000000000000000	0.9900000000000000000000000
-0.3330000000000000000000000	0.9990000000000000000000000
+-1234567890.123456789	-3703703670.370370367
+-4400	-13200
+-1255.49	-3766.47
+-1.122	-3.366
+-1.12	-3.36
+-1.12	-3.36
+-0.333	-0.999
+-0.33	-0.99
+-0.3	-0.9
+0	0
+0	0
+0	0
+0.01	0.03
+0.02	0.06
+0.1	0.3
+0.2	0.6
+0.3	0.9
+0.33	0.99
+0.333	0.999
 0.9999999999999999999999999	2.9999999999999999999999997
-1.0000000000000000000000000	3.0000000000000000000000000
-1.0000000000000000000000000	3.0000000000000000000000000
-1.1200000000000000000000000	3.3600000000000000000000000
-1.1220000000000000000000000	3.3660000000000000000000000
-2.0000000000000000000000000	6.0000000000000000000000000
-2.0000000000000000000000000	6.0000000000000000000000000
-3.1400000000000000000000000	9.4200000000000000000000000
-3.1400000000000000000000000	9.4200000000000000000000000
-3.1400000000000000000000000	9.4200000000000000000000000
-3.1400000000000000000000000	9.4200000000000000000000000
-10.0000000000000000000000000	30.0000000000000000000000000
-20.0000000000000000000000000	60.0000000000000000000000000
-100.0000000000000000000000000	300.0000000000000000000000000
-124.0000000000000000000000000	372.0000000000000000000000000
-125.2000000000000000000000000	375.6000000000000000000000000
-200.0000000000000000000000000	600.0000000000000000000000000
-1234567890.1234567800000000000000000	3703703670.3703703400000000000000000
+1	3
+1	3
+1.12	3.36
+1.122	3.366
+2	6
+2	6
+3.14	9.42
+3.14	9.42
+3.14	9.42
+3.14	9.42
+10	30
+20	60
+100	300
+124	372
+125.2	375.6
+200	600
+1234567890.12345678	3703703670.37037034
 PREHOOK: query: DROP TABLE DECIMAL_4_1
 PREHOOK: type: DROPTABLE
 PREHOOK: Input: default@decimal_4_1
diff --git a/ql/src/test/results/clientpositive/vector_decimal_5.q.out b/ql/src/test/results/clientpositive/vector_decimal_5.q.out
index 0bfd12e..34c3351 100644
--- a/ql/src/test/results/clientpositive/vector_decimal_5.q.out
+++ b/ql/src/test/results/clientpositive/vector_decimal_5.q.out
@@ -59,41 +59,41 @@ POSTHOOK: Input: default@decimal_5
 NULL
 NULL
 NULL
--4400.00000
--1255.49000
--1.12200
--1.12000
--1.12000
--0.33300
--0.33000
--0.30000
-0.00000
-0.00000
-0.00000
-0.01000
-0.02000
-0.10000
-0.20000
-0.30000
-0.33000
-0.33300
-1.00000
-1.00000
-1.00000
-1.12000
-1.12200
-2.00000
-2.00000
-3.14000
-3.14000
-3.14000
-3.14000
-10.00000
-20.00000
-100.00000
-124.00000
-125.20000
-200.00000
+-4400
+-1255.49
+-1.122
+-1.12
+-1.12
+-0.333
+-0.33
+-0.3
+0
+0
+0
+0.01
+0.02
+0.1
+0.2
+0.3
+0.33
+0.333
+1
+1
+1
+1.12
+1.122
+2
+2
+3.14
+3.14
+3.14
+3.14
+10
+20
+100
+124
+125.2
+200
 PREHOOK: query: SELECT DISTINCT key FROM DECIMAL_5 ORDER BY key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_5
@@ -103,32 +103,32 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_5
 #### A masked pattern was here ####
 NULL
--4400.00000
--1255.49000
--1.12200
--1.12000
--0.33300
--0.33000
--0.30000
-0.00000
-0.01000
-0.02000
-0.10000
-0.20000
-0.30000
-0.33000
-0.33300
-1.00000
-1.12000
-1.12200
-2.00000
-3.14000
-10.00000
-20.00000
-100.00000
-124.00000
-125.20000
-200.00000
+-4400
+-1255.49
+-1.122
+-1.12
+-0.333
+-0.33
+-0.3
+0
+0.01
+0.02
+0.1
+0.2
+0.3
+0.33
+0.333
+1
+1.12
+1.122
+2
+3.14
+10
+20
+100
+124
+125.2
+200
 PREHOOK: query: SELECT cast(key as decimal) FROM DECIMAL_5
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_5
@@ -185,40 +185,40 @@ POSTHOOK: Input: default@decimal_5
 #### A masked pattern was here ####
 NULL
 NULL
-0.000
-0.000
-100.000
-10.000
-1.000
-0.100
-0.010
-200.000
-20.000
-2.000
-0.000
-0.200
-0.020
-0.300
-0.330
+0
+0
+100
+10
+1
+0.1
+0.01
+200
+20
+2
+0
+0.2
+0.02
+0.3
+0.33
 0.333
--0.300
--0.330
+-0.3
+-0.33
 -0.333
-1.000
-2.000
-3.140
--1.120
--1.120
+1
+2
+3.14
+-1.12
+-1.12
 -1.122
-1.120
+1.12
 1.122
-124.000
-125.200
+124
+125.2
 NULL
-3.140
-3.140
-3.140
-1.000
+3.14
+3.14
+3.14
+1
 NULL
 NULL
 PREHOOK: query: DROP TABLE DECIMAL_5_txt
diff --git a/ql/src/test/results/clientpositive/vector_decimal_6.q.out b/ql/src/test/results/clientpositive/vector_decimal_6.q.out
index e0ccbc6..9cdd7fc 100644
--- a/ql/src/test/results/clientpositive/vector_decimal_6.q.out
+++ b/ql/src/test/results/clientpositive/vector_decimal_6.q.out
@@ -119,27 +119,27 @@ NULL	0
 NULL	3
 NULL	4
 NULL	1234567890
--4400.00000	4400
--1255.49000	-1255
--1.12200	-11
--1.12000	-1
--0.33300	0
--0.30000	0
-0.00000	0
-0.00000	0
-0.33300	0
-1.00000	1
-1.00000	1
-1.12000	1
-1.12200	1
-2.00000	2
-3.14000	3
-3.14000	3
-3.14000	4
-10.00000	10
+-4400	4400
+-1255.49	-1255
+-1.122	-11
+-1.12	-1
+-0.333	0
+-0.3	0
+0	0
+0	0
+0.333	0
+1	1
+1	1
+1.12	1
+1.122	1
+2	2
+3.14	3
+3.14	3
+3.14	4
+10	10
 10.73433	5
-124.00000	124
-125.20000	125
+124	124
+125.2	125
 23232.23435	2
 PREHOOK: query: SELECT * FROM DECIMAL_6_2 ORDER BY key, value
 PREHOOK: type: QUERY
@@ -151,27 +151,27 @@ POSTHOOK: Input: default@decimal_6_2
 #### A masked pattern was here ####
 NULL	0
 -1234567890.1235	-1234567890
--4400.0000	4400
--1255.4900	-1255
--1.1220	-11
--1.1200	-1
--0.3330	0
--0.3000	0
-0.0000	0
-0.0000	0
-0.3330	0
-1.0000	1
-1.0000	1
-1.1200	1
-1.1220	1
-2.0000	2
-3.1400	3
-3.1400	3
-3.1400	4
-10.0000	10
+-4400	4400
+-1255.49	-1255
+-1.122	-11
+-1.12	-1
+-0.333	0
+-0.3	0
+0	0
+0	0
+0.333	0
+1	1
+1	1
+1.12	1
+1.122	1
+2	2
+3.14	3
+3.14	3
+3.14	4
+10	10
 10.7343	5
-124.0000	124
-125.2000	125
+124	124
+125.2	125
 23232.2344	2
 2389432.2375	3
 2389432.2375	4
@@ -200,54 +200,54 @@ NULL
 NULL
 NULL
 NULL
--1234567890.12350
--4400.00000
--4400.00000
--1255.49000
--1255.49000
--1.12200
--1.12200
--1.12000
--1.12000
--0.33300
--0.33300
--0.30000
--0.30000
-0.00000
-0.00000
-0.00000
-0.00000
-0.33300
-0.33300
-1.00000
-1.00000
-1.00000
-1.00000
-1.12000
-1.12000
-1.12200
-1.12200
-2.00000
-2.00000
-3.14000
-3.14000
-3.14000
-3.14000
-3.14000
-3.14000
-10.00000
-10.00000
-10.73430
+-1234567890.1235
+-4400
+-4400
+-1255.49
+-1255.49
+-1.122
+-1.122
+-1.12
+-1.12
+-0.333
+-0.333
+-0.3
+-0.3
+0
+0
+0
+0
+0.333
+0.333
+1
+1
+1
+1
+1.12
+1.12
+1.122
+1.122
+2
+2
+3.14
+3.14
+3.14
+3.14
+3.14
+3.14
+10
+10
+10.7343
 10.73433
-124.00000
-124.00000
-125.20000
-125.20000
+124
+124
+125.2
+125.2
 23232.23435
-23232.23440
-2389432.23750
-2389432.23750
-1234567890.12350
+23232.2344
+2389432.2375
+2389432.2375
+1234567890.1235
 PREHOOK: query: CREATE TABLE DECIMAL_6_3 STORED AS ORC AS SELECT key + 5.5 AS k, value * 11 AS v from DECIMAL_6_1 ORDER BY v
 PREHOOK: type: CREATETABLE_AS_SELECT
 PREHOOK: Input: default@decimal_6_1
diff --git a/ql/src/test/results/clientpositive/vector_decimal_aggregate.q.out b/ql/src/test/results/clientpositive/vector_decimal_aggregate.q.out
index 6c181c3..d1ac19e 100644
--- a/ql/src/test/results/clientpositive/vector_decimal_aggregate.q.out
+++ b/ql/src/test/results/clientpositive/vector_decimal_aggregate.q.out
@@ -104,14 +104,14 @@ POSTHOOK: query: SELECT cint,
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_vgby
 #### A masked pattern was here ####
--3728	6	5831542.2692483780	-3367.6517567568	5817556.0411483778	6	6984454.21109769200000	-4033.44576923076900	6967702.86724384584710
--563	2	-515.6210729730	-3367.6517567568	-3883.2728297298	2	-617.56077692307690	-4033.44576923076900	-4651.00654615384590
-253665376	1024	9767.0054054054	-9779.5486486487	-347484.0818378374	1024	11697.96923076923100	-11712.99230769231000	-416182.64030769233089
-528534767	1024	5831542.2692483780	-9777.1594594595	11646372.8607481068	1024	6984454.21109769200000	-11710.13076923077100	13948892.79980307629003
-626923679	1024	9723.4027027027	-9778.9513513514	10541.0525297287	1024	11645.74615384615400	-11712.27692307692300	12625.04759999997746
-6981	3	5831542.2692483780	-515.6210729730	5830511.0271024320	3	6984454.21109769200000	-617.56077692307690	6983219.08954384584620
-762	2	5831542.2692483780	1531.2194054054	5833073.4886537834	2	6984454.21109769200000	1833.94569230769250	6986288.15678999969250
-NULL	3072	9318.4351351351	-4298.1513513514	5018444.1081079808	3072	11160.71538461538500	-5147.90769230769300	6010604.30769230735360
+-3728	6	5831542.269248378	-3367.6517567568	5817556.0411483778	6	6984454.211097692	-4033.445769230769	6967702.8672438458471
+-563	2	-515.621072973	-3367.6517567568	-3883.2728297298	2	-617.5607769230769	-4033.445769230769	-4651.0065461538459
+253665376	1024	9767.0054054054	-9779.5486486487	-347484.0818378374	1024	11697.969230769231	-11712.99230769231	-416182.64030769233089
+528534767	1024	5831542.269248378	-9777.1594594595	11646372.8607481068	1024	6984454.211097692	-11710.130769230771	13948892.79980307629003
+626923679	1024	9723.4027027027	-9778.9513513514	10541.0525297287	1024	11645.746153846154	-11712.276923076923	12625.04759999997746
+6981	3	5831542.269248378	-515.621072973	5830511.027102432	3	6984454.211097692	-617.5607769230769	6983219.0895438458462
+762	2	5831542.269248378	1531.2194054054	5833073.4886537834	2	6984454.211097692	1833.9456923076925	6986288.1567899996925
+NULL	3072	9318.4351351351	-4298.1513513514	5018444.1081079808	3072	11160.715384615385	-5147.907692307693	6010604.3076923073536
 PREHOOK: query: EXPLAIN SELECT cint,
     COUNT(cdecimal1), MAX(cdecimal1), MIN(cdecimal1), SUM(cdecimal1), AVG(cdecimal1), STDDEV_POP(cdecimal1), STDDEV_SAMP(cdecimal1),
     COUNT(cdecimal2), MAX(cdecimal2), MIN(cdecimal2), SUM(cdecimal2), AVG(cdecimal2), STDDEV_POP(cdecimal2), STDDEV_SAMP(cdecimal2)
@@ -200,11 +200,11 @@ POSTHOOK: query: SELECT cint,
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_vgby
 #### A masked pattern was here ####
--3728	6	5831542.2692483780	-3367.6517567568	5817556.0411483778	969592.67352472963333	2174330.2092403853	2381859.406131774	6	6984454.21109769200000	-4033.44576923076900	6967702.86724384584710	1161283.811207307641183333	2604201.2704476737	2852759.5602156054
--563	2	-515.6210729730	-3367.6517567568	-3883.2728297298	-1941.63641486490000	1426.0153418918999	2016.6902366556308	2	-617.56077692307690	-4033.44576923076900	-4651.00654615384590	-2325.503273076922950000	1707.9424961538462	2415.395441814127
-253665376	1024	9767.0054054054	-9779.5486486487	-347484.0818378374	-339.33992366976309	5708.9563478862	5711.745967572779	1024	11697.96923076923100	-11712.99230769231000	-416182.64030769233089	-406.428359675480791885	6837.632716002934	6840.973851172274
-528534767	1024	5831542.2692483780	-9777.1594594595	11646372.8607481068	11373.41099682432305	257528.92988206653	257654.7686043977	1024	6984454.21109769200000	-11710.13076923077100	13948892.79980307629003	13621.965624807691689482	308443.1074570801	308593.82484083984
-626923679	1024	9723.4027027027	-9778.9513513514	10541.0525297287	10.29399661106318	5742.09145323734	5744.897264034267	1024	11645.74615384615400	-11712.27692307692300	12625.04759999997746	12.329148046874977988	6877.318722794877	6880.679250101603
-6981	3	5831542.2692483780	-515.6210729730	5830511.0271024320	1943503.67570081066667	2749258.455012492	3367140.1929065133	3	6984454.21109769200000	-617.56077692307690	6983219.08954384584620	2327739.696514615282066667	3292794.4113115156	4032833.0678006653
-762	2	5831542.2692483780	1531.2194054054	5833073.4886537834	2916536.74432689170000	2915005.5249214866	4122440.3477364695	2	6984454.21109769200000	1833.94569230769250	6986288.15678999969250	3493144.078394999846250000	3491310.1327026924	4937458.140118758
-NULL	3072	9318.4351351351	-4298.1513513514	5018444.1081079808	1633.60810810806667	5695.483082135364	5696.4103077145055	3072	11160.71538461538500	-5147.90769230769300	6010604.30769230735360	1956.576923076922966667	6821.495748565159	6822.606289190924
+-3728	6	5831542.269248378	-3367.6517567568	5817556.0411483778	969592.67352472963333	2174330.2092403853	2381859.406131774	6	6984454.211097692	-4033.445769230769	6967702.8672438458471	1161283.811207307641183333	2604201.2704476737	2852759.5602156054
+-563	2	-515.621072973	-3367.6517567568	-3883.2728297298	-1941.6364148649	1426.0153418918999	2016.6902366556308	2	-617.5607769230769	-4033.445769230769	-4651.0065461538459	-2325.50327307692295	1707.9424961538462	2415.395441814127
+253665376	1024	9767.0054054054	-9779.5486486487	-347484.0818378374	-339.33992366976309	5708.9563478862	5711.745967572779	1024	11697.969230769231	-11712.99230769231	-416182.64030769233089	-406.428359675480791885	6837.632716002934	6840.973851172274
+528534767	1024	5831542.269248378	-9777.1594594595	11646372.8607481068	11373.41099682432305	257528.92988206653	257654.7686043977	1024	6984454.211097692	-11710.130769230771	13948892.79980307629003	13621.965624807691689482	308443.1074570801	308593.82484083984
+626923679	1024	9723.4027027027	-9778.9513513514	10541.0525297287	10.29399661106318	5742.09145323734	5744.897264034267	1024	11645.746153846154	-11712.276923076923	12625.04759999997746	12.329148046874977988	6877.318722794877	6880.679250101603
+6981	3	5831542.269248378	-515.621072973	5830511.027102432	1943503.67570081066667	2749258.455012492	3367140.1929065133	3	6984454.211097692	-617.5607769230769	6983219.0895438458462	2327739.696514615282066667	3292794.4113115156	4032833.0678006653
+762	2	5831542.269248378	1531.2194054054	5833073.4886537834	2916536.7443268917	2915005.5249214866	4122440.3477364695	2	6984454.211097692	1833.9456923076925	6986288.1567899996925	3493144.07839499984625	3491310.1327026924	4937458.140118758
+NULL	3072	9318.4351351351	-4298.1513513514	5018444.1081079808	1633.60810810806667	5695.483082135364	5696.4103077145055	3072	11160.715384615385	-5147.907692307693	6010604.3076923073536	1956.576923076922966667	6821.495748565159	6822.606289190924
diff --git a/ql/src/test/results/clientpositive/vector_decimal_cast.q.out b/ql/src/test/results/clientpositive/vector_decimal_cast.q.out
index 83ea4cc..2053452 100644
--- a/ql/src/test/results/clientpositive/vector_decimal_cast.q.out
+++ b/ql/src/test/results/clientpositive/vector_decimal_cast.q.out
@@ -46,13 +46,13 @@ POSTHOOK: query: SELECT cdouble, cint, cboolean1, ctimestamp1, CAST(cdouble AS D
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@alltypesorc
 #### A masked pattern was here ####
--13326.0	528534767	true	1969-12-31 15:59:46.674	-13326.0000000000	528534767.00000000000000	1.00	-13
--15813.0	528534767	true	1969-12-31 15:59:55.787	-15813.0000000000	528534767.00000000000000	1.00	-4
--9566.0	528534767	true	1969-12-31 15:59:44.187	-9566.0000000000	528534767.00000000000000	1.00	-16
-15007.0	528534767	true	1969-12-31 15:59:50.434	15007.0000000000	528534767.00000000000000	1.00	-10
-7021.0	528534767	true	1969-12-31 16:00:15.007	7021.0000000000	528534767.00000000000000	1.00	15
-4963.0	528534767	true	1969-12-31 16:00:07.021	4963.0000000000	528534767.00000000000000	1.00	7
--7824.0	528534767	true	1969-12-31 16:00:04.963	-7824.0000000000	528534767.00000000000000	1.00	5
--15431.0	528534767	true	1969-12-31 15:59:52.176	-15431.0000000000	528534767.00000000000000	1.00	-8
--15549.0	528534767	true	1969-12-31 15:59:44.569	-15549.0000000000	528534767.00000000000000	1.00	-15
-5780.0	528534767	true	1969-12-31 15:59:44.451	5780.0000000000	528534767.00000000000000	1.00	-16
+-13326.0	528534767	true	1969-12-31 15:59:46.674	-13326	528534767	1	-13
+-15813.0	528534767	true	1969-12-31 15:59:55.787	-15813	528534767	1	-4
+-9566.0	528534767	true	1969-12-31 15:59:44.187	-9566	528534767	1	-16
+15007.0	528534767	true	1969-12-31 15:59:50.434	15007	528534767	1	-10
+7021.0	528534767	true	1969-12-31 16:00:15.007	7021	528534767	1	15
+4963.0	528534767	true	1969-12-31 16:00:07.021	4963	528534767	1	7
+-7824.0	528534767	true	1969-12-31 16:00:04.963	-7824	528534767	1	5
+-15431.0	528534767	true	1969-12-31 15:59:52.176	-15431	528534767	1	-8
+-15549.0	528534767	true	1969-12-31 15:59:44.569	-15549	528534767	1	-15
+5780.0	528534767	true	1969-12-31 15:59:44.451	5780	528534767	1	-16
diff --git a/ql/src/test/results/clientpositive/vector_decimal_expressions.q.out b/ql/src/test/results/clientpositive/vector_decimal_expressions.q.out
index 408a470..9993881 100644
--- a/ql/src/test/results/clientpositive/vector_decimal_expressions.q.out
+++ b/ql/src/test/results/clientpositive/vector_decimal_expressions.q.out
@@ -56,13 +56,13 @@ POSTHOOK: query: SELECT cdecimal1 + cdecimal2, cdecimal1 - (2*cdecimal2), ((cdec
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_test
 #### A masked pattern was here ####
-19699.41746361742300	-12507.91330561334600	0.8351496686995997	2.8303425077026896E7	3.6405405405	8963	10735	-17	8963	true	10735.776923076923	8963.641	10735.776923076923	1969-12-31 18:29:23.64054054
-9216.33970893968500	-5851.80644490647000	0.8353975893550668	6195112.1797296945	3.6243243243	4193	5022	-98	4193	true	5022.715384615385	4193.6245	5022.715384615385	1969-12-31 17:09:53.624324324
-6514.84033264034640	-4136.52120582119280	0.8355907765708067	3095563.9418919063	4.3864864865	2964	3550	-34	2964	true	3550.4538461538464	2964.3865	3550.4538461538464	1969-12-31 16:49:24.386486486
-7587.30145530147700	-4817.46777546775400	0.8354976172734904	4198623.24324327	2.3783783784	3452	4134	38	3452	true	4134.923076923077	3452.3784	4134.923076923077	1969-12-31 16:57:32.378378378
-19197.97297297300000	-12189.52702702700000	0.835155361813429	2.6880848817567654E7	5.4729729730	8735	10462	-34	8735	true	10462.5	8735.473	10462.5	1969-12-31 18:25:35.472972973
-17098.99459459460000	-10856.80540540540000	0.8351828165813104	2.132423090270272E7	0.3945945946	7780	9318	102	7780	true	9318.6	7780.3945	9318.6	1969-12-31 18:09:40.394594594
-12433.72307692307700	-7894.64615384615400	0.8352770361086894	1.12754688E7	7.6000000000	5657	6776	120	5657	true	6776.123076923077	5657.6	6776.123076923077	1969-12-31 17:34:17.6
-7247.31683991686200	-4601.59854469852400	0.8355241651897876	3830775.6932432684	7.6783783784	3297	3949	109	3297	true	3949.638461538462	3297.6785	3949.638461538462	1969-12-31 16:54:57.678378378
-14757.17006237004650	-9369.89147609149300	0.8352226654922171	1.5883214124324286E7	4.8162162162	6714	8042	106	6714	true	8042.3538461538465	6714.8164	8042.3538461538465	1969-12-31 17:51:54.816216216
-10964.83201663199300	-6961.99106029108600	0.8353232978714221	8768719.779729689	9.2243243243	4989	5975	87	4989	true	5975.607692307693	4989.224	5975.607692307693	1969-12-31 17:23:09.224324324
+19699.417463617423	-12507.913305613346	0.8351496686995997	2.8303425077026896E7	3.6405405405	8963	10735	-17	8963	true	10735.776923076923	8963.641	10735.776923076923	1969-12-31 18:29:23.64054054
+9216.339708939685	-5851.80644490647	0.8353975893550668	6195112.1797296945	3.6243243243	4193	5022	-98	4193	true	5022.715384615385	4193.6245	5022.715384615385	1969-12-31 17:09:53.624324324
+6514.8403326403464	-4136.5212058211928	0.8355907765708067	3095563.9418919063	4.3864864865	2964	3550	-34	2964	true	3550.4538461538464	2964.3865	3550.4538461538464	1969-12-31 16:49:24.386486486
+7587.301455301477	-4817.467775467754	0.8354976172734904	4198623.24324327	2.3783783784	3452	4134	38	3452	true	4134.923076923077	3452.3784	4134.923076923077	1969-12-31 16:57:32.378378378
+19197.972972973	-12189.527027027	0.835155361813429	2.6880848817567654E7	5.472972973	8735	10462	-34	8735	true	10462.5	8735.473	10462.5	1969-12-31 18:25:35.472972973
+17098.9945945946	-10856.8054054054	0.8351828165813104	2.132423090270272E7	0.3945945946	7780	9318	102	7780	true	9318.6	7780.3945	9318.6	1969-12-31 18:09:40.394594594
+12433.723076923077	-7894.646153846154	0.8352770361086894	1.12754688E7	7.6	5657	6776	120	5657	true	6776.123076923077	5657.6	6776.123076923077	1969-12-31 17:34:17.6
+7247.316839916862	-4601.598544698524	0.8355241651897876	3830775.6932432684	7.6783783784	3297	3949	109	3297	true	3949.638461538462	3297.6785	3949.638461538462	1969-12-31 16:54:57.678378378
+14757.1700623700465	-9369.891476091493	0.8352226654922171	1.5883214124324286E7	4.8162162162	6714	8042	106	6714	true	8042.3538461538465	6714.8164	8042.3538461538465	1969-12-31 17:51:54.816216216
+10964.832016631993	-6961.991060291086	0.8353232978714221	8768719.779729689	9.2243243243	4989	5975	87	4989	true	5975.607692307693	4989.224	5975.607692307693	1969-12-31 17:23:09.224324324
diff --git a/ql/src/test/results/clientpositive/vector_decimal_mapjoin.q.out b/ql/src/test/results/clientpositive/vector_decimal_mapjoin.q.out
index 484b420..9dc7fdf 100644
--- a/ql/src/test/results/clientpositive/vector_decimal_mapjoin.q.out
+++ b/ql/src/test/results/clientpositive/vector_decimal_mapjoin.q.out
@@ -103,57 +103,57 @@ POSTHOOK: query: SELECT l.cint, r.cint, l.cdecimal1, r.cdecimal2
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_mapjoin
 #### A masked pattern was here ####
-6981	6981	-515.6210729730	-617.56077692307690
-6981	6981	-515.6210729730	-617.56077692307690
-6981	6981	-515.6210729730	-617.56077692307690
-6981	6981	-515.6210729730	-617.56077692307690
-6981	6981	-515.6210729730	6984454.21109769200000
-6981	6981	-515.6210729730	6984454.21109769200000
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	-515.6210729730	NULL
-6981	6981	5831542.2692483780	-617.56077692307690
-6981	6981	5831542.2692483780	-617.56077692307690
-6981	6981	5831542.2692483780	6984454.21109769200000
-6981	6981	5831542.2692483780	NULL
-6981	6981	5831542.2692483780	NULL
-6981	6981	5831542.2692483780	NULL
-6981	6981	5831542.2692483780	NULL
-6981	6981	5831542.2692483780	NULL
-6981	6981	5831542.2692483780	NULL
-6981	6981	5831542.2692483780	NULL
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	-617.56077692307690
-6981	6981	NULL	6984454.21109769200000
-6981	6981	NULL	6984454.21109769200000
-6981	6981	NULL	6984454.21109769200000
-6981	6981	NULL	6984454.21109769200000
-6981	6981	NULL	6984454.21109769200000
-6981	6981	NULL	6984454.21109769200000
-6981	6981	NULL	6984454.21109769200000
+6981	6981	-515.621072973	-617.5607769230769
+6981	6981	-515.621072973	-617.5607769230769
+6981	6981	-515.621072973	-617.5607769230769
+6981	6981	-515.621072973	-617.5607769230769
+6981	6981	-515.621072973	6984454.211097692
+6981	6981	-515.621072973	6984454.211097692
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	-515.621072973	NULL
+6981	6981	5831542.269248378	-617.5607769230769
+6981	6981	5831542.269248378	-617.5607769230769
+6981	6981	5831542.269248378	6984454.211097692
+6981	6981	5831542.269248378	NULL
+6981	6981	5831542.269248378	NULL
+6981	6981	5831542.269248378	NULL
+6981	6981	5831542.269248378	NULL
+6981	6981	5831542.269248378	NULL
+6981	6981	5831542.269248378	NULL
+6981	6981	5831542.269248378	NULL
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	-617.5607769230769
+6981	6981	NULL	6984454.211097692
+6981	6981	NULL	6984454.211097692
+6981	6981	NULL	6984454.211097692
+6981	6981	NULL	6984454.211097692
+6981	6981	NULL	6984454.211097692
+6981	6981	NULL	6984454.211097692
+6981	6981	NULL	6984454.211097692
 6981	6981	NULL	NULL
 6981	6981	NULL	NULL
 6981	6981	NULL	NULL
diff --git a/ql/src/test/results/clientpositive/vector_decimal_precision.q.out b/ql/src/test/results/clientpositive/vector_decimal_precision.q.out
index b059e97..16f2e3f 100644
--- a/ql/src/test/results/clientpositive/vector_decimal_precision.q.out
+++ b/ql/src/test/results/clientpositive/vector_decimal_precision.q.out
@@ -99,13 +99,13 @@ NULL
 NULL
 NULL
 NULL
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.1234567890
-0.1234567890
+0
+0
+0
+0
+0
+0.123456789
+0.123456789
 1.2345678901
 1.2345678901
 1.2345678901
@@ -122,14 +122,14 @@ NULL
 12345.6789012346
 123456.7890123456
 123456.7890123457
-1234567.8901234560
+1234567.890123456
 1234567.8901234568
-12345678.9012345600
+12345678.90123456
 12345678.9012345679
-123456789.0123456000
+123456789.0123456
 123456789.0123456789
-1234567890.1234560000
-1234567890.1234567890
+1234567890.123456
+1234567890.123456789
 PREHOOK: query: SELECT dec, dec + 1, dec - 1 FROM DECIMAL_PRECISION ORDER BY dec
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_precision
@@ -182,13 +182,13 @@ NULL	NULL	NULL
 NULL	NULL	NULL
 NULL	NULL	NULL
 NULL	NULL	NULL
-0.0000000000	1.0000000000	-1.0000000000
-0.0000000000	1.0000000000	-1.0000000000
-0.0000000000	1.0000000000	-1.0000000000
-0.0000000000	1.0000000000	-1.0000000000
-0.0000000000	1.0000000000	-1.0000000000
-0.1234567890	1.1234567890	-0.8765432110
-0.1234567890	1.1234567890	-0.8765432110
+0	1	-1
+0	1	-1
+0	1	-1
+0	1	-1
+0	1	-1
+0.123456789	1.123456789	-0.876543211
+0.123456789	1.123456789	-0.876543211
 1.2345678901	2.2345678901	0.2345678901
 1.2345678901	2.2345678901	0.2345678901
 1.2345678901	2.2345678901	0.2345678901
@@ -205,14 +205,14 @@ NULL	NULL	NULL
 12345.6789012346	12346.6789012346	12344.6789012346
 123456.7890123456	123457.7890123456	123455.7890123456
 123456.7890123457	123457.7890123457	123455.7890123457
-1234567.8901234560	1234568.8901234560	1234566.8901234560
+1234567.890123456	1234568.890123456	1234566.890123456
 1234567.8901234568	1234568.8901234568	1234566.8901234568
-12345678.9012345600	12345679.9012345600	12345677.9012345600
+12345678.90123456	12345679.90123456	12345677.90123456
 12345678.9012345679	12345679.9012345679	12345677.9012345679
-123456789.0123456000	123456790.0123456000	123456788.0123456000
+123456789.0123456	123456790.0123456	123456788.0123456
 123456789.0123456789	123456790.0123456789	123456788.0123456789
-1234567890.1234560000	1234567891.1234560000	1234567889.1234560000
-1234567890.1234567890	1234567891.1234567890	1234567889.1234567890
+1234567890.123456	1234567891.123456	1234567889.123456
+1234567890.123456789	1234567891.123456789	1234567889.123456789
 PREHOOK: query: SELECT dec, dec * 2, dec / 3  FROM DECIMAL_PRECISION ORDER BY dec
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_precision
@@ -265,37 +265,37 @@ NULL	NULL	NULL
 NULL	NULL	NULL
 NULL	NULL	NULL
 NULL	NULL	NULL
-0.0000000000	0.0000000000	0.000000000000
-0.0000000000	0.0000000000	0.000000000000
-0.0000000000	0.0000000000	0.000000000000
-0.0000000000	0.0000000000	0.000000000000
-0.0000000000	0.0000000000	0.000000000000
-0.1234567890	0.2469135780	0.041152263000
-0.1234567890	0.2469135780	0.041152263000
+0	0	0
+0	0	0
+0	0	0
+0	0	0
+0	0	0
+0.123456789	0.246913578	0.041152263
+0.123456789	0.246913578	0.041152263
 1.2345678901	2.4691357802	0.411522630033
 1.2345678901	2.4691357802	0.411522630033
 1.2345678901	2.4691357802	0.411522630033
-12.3456789012	24.6913578024	4.115226300400
-12.3456789012	24.6913578024	4.115226300400
-12.3456789012	24.6913578024	4.115226300400
-123.4567890123	246.9135780246	41.152263004100
-123.4567890123	246.9135780246	41.152263004100
-123.4567890123	246.9135780246	41.152263004100
-1234.5678901235	2469.1357802470	411.522630041167
-1234.5678901235	2469.1357802470	411.522630041167
-1234.5678901235	2469.1357802470	411.522630041167
+12.3456789012	24.6913578024	4.1152263004
+12.3456789012	24.6913578024	4.1152263004
+12.3456789012	24.6913578024	4.1152263004
+123.4567890123	246.9135780246	41.1522630041
+123.4567890123	246.9135780246	41.1522630041
+123.4567890123	246.9135780246	41.1522630041
+1234.5678901235	2469.135780247	411.522630041167
+1234.5678901235	2469.135780247	411.522630041167
+1234.5678901235	2469.135780247	411.522630041167
 12345.6789012346	24691.3578024692	4115.226300411533
 12345.6789012346	24691.3578024692	4115.226300411533
-123456.7890123456	246913.5780246912	41152.263004115200
+123456.7890123456	246913.5780246912	41152.2630041152
 123456.7890123457	246913.5780246914	41152.263004115233
-1234567.8901234560	2469135.7802469120	411522.630041152000
+1234567.890123456	2469135.780246912	411522.630041152
 1234567.8901234568	2469135.7802469136	411522.630041152267
-12345678.9012345600	24691357.8024691200	4115226.300411520000
+12345678.90123456	24691357.80246912	4115226.30041152
 12345678.9012345679	24691357.8024691358	4115226.300411522633
-123456789.0123456000	246913578.0246912000	41152263.004115200000
-123456789.0123456789	246913578.0246913578	41152263.004115226300
-1234567890.1234560000	2469135780.2469120000	411522630.041152000000
-1234567890.1234567890	2469135780.2469135780	411522630.041152263000
+123456789.0123456	246913578.0246912	41152263.0041152
+123456789.0123456789	246913578.0246913578	41152263.0041152263
+1234567890.123456	2469135780.246912	411522630.041152
+1234567890.123456789	2469135780.246913578	411522630.041152263
 PREHOOK: query: SELECT dec, dec / 9 FROM DECIMAL_PRECISION ORDER BY dec
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_precision
@@ -348,13 +348,13 @@ NULL	NULL
 NULL	NULL
 NULL	NULL
 NULL	NULL
-0.0000000000	0.000000000000
-0.0000000000	0.000000000000
-0.0000000000	0.000000000000
-0.0000000000	0.000000000000
-0.0000000000	0.000000000000
-0.1234567890	0.013717421000
-0.1234567890	0.013717421000
+0	0
+0	0
+0	0
+0	0
+0	0
+0.123456789	0.013717421
+0.123456789	0.013717421
 1.2345678901	0.137174210011
 1.2345678901	0.137174210011
 1.2345678901	0.137174210011
@@ -371,14 +371,14 @@ NULL	NULL
 12345.6789012346	1371.742100137178
 123456.7890123456	13717.421001371733
 123456.7890123457	13717.421001371744
-1234567.8901234560	137174.210013717333
+1234567.890123456	137174.210013717333
 1234567.8901234568	137174.210013717422
-12345678.9012345600	1371742.100137173333
+12345678.90123456	1371742.100137173333
 12345678.9012345679	1371742.100137174211
-123456789.0123456000	13717421.001371733333
-123456789.0123456789	13717421.001371742100
-1234567890.1234560000	137174210.013717333333
-1234567890.1234567890	137174210.013717421000
+123456789.0123456	13717421.001371733333
+123456789.0123456789	13717421.0013717421
+1234567890.123456	137174210.013717333333
+1234567890.123456789	137174210.013717421
 PREHOOK: query: SELECT dec, dec / 27 FROM DECIMAL_PRECISION ORDER BY dec
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_precision
@@ -431,13 +431,13 @@ NULL	NULL
 NULL	NULL
 NULL	NULL
 NULL	NULL
-0.0000000000	0.0000000000000
-0.0000000000	0.0000000000000
-0.0000000000	0.0000000000000
-0.0000000000	0.0000000000000
-0.0000000000	0.0000000000000
-0.1234567890	0.0045724736667
-0.1234567890	0.0045724736667
+0	0
+0	0
+0	0
+0	0
+0	0
+0.123456789	0.0045724736667
+0.123456789	0.0045724736667
 1.2345678901	0.0457247366704
 1.2345678901	0.0457247366704
 1.2345678901	0.0457247366704
@@ -454,14 +454,14 @@ NULL	NULL
 12345.6789012346	457.2473667123926
 123456.7890123456	4572.4736671239111
 123456.7890123457	4572.4736671239148
-1234567.8901234560	45724.7366712391111
+1234567.890123456	45724.7366712391111
 1234567.8901234568	45724.7366712391407
-12345678.9012345600	457247.3667123911111
+12345678.90123456	457247.3667123911111
 12345678.9012345679	457247.3667123914037
-123456789.0123456000	4572473.6671239111111
+123456789.0123456	4572473.6671239111111
 123456789.0123456789	4572473.6671239140333
-1234567890.1234560000	45724736.6712391111111
-1234567890.1234567890	45724736.6712391403333
+1234567890.123456	45724736.6712391111111
+1234567890.123456789	45724736.6712391403333
 PREHOOK: query: SELECT dec, dec * dec FROM DECIMAL_PRECISION ORDER BY dec
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_precision
@@ -514,13 +514,13 @@ NULL	NULL
 NULL	NULL
 NULL	NULL
 NULL	NULL
-0.0000000000	0.00000000000000000000
-0.0000000000	0.00000000000000000000
-0.0000000000	0.00000000000000000000
-0.0000000000	0.00000000000000000000
-0.0000000000	0.00000000000000000000
-0.1234567890	0.01524157875019052100
-0.1234567890	0.01524157875019052100
+0	0
+0	0
+0	0
+0	0
+0	0
+0.123456789	0.015241578750190521
+0.123456789	0.015241578750190521
 1.2345678901	1.52415787526596567801
 1.2345678901	1.52415787526596567801
 1.2345678901	1.52415787526596567801
@@ -537,14 +537,14 @@ NULL	NULL
 12345.6789012346	152415787.53238916034140423716
 123456.7890123456	15241578753.23881726870921383936
 123456.7890123457	15241578753.23884196006701630849
-1234567.8901234560	1524157875323.88172687092138393600
+1234567.890123456	1524157875323.881726870921383936
 1234567.8901234568	1524157875323.88370217954558146624
-12345678.9012345600	152415787532388.17268709213839360000
+12345678.90123456	152415787532388.1726870921383936
 12345678.9012345679	152415787532388.36774881877789971041
-123456789.0123456000	15241578753238817.26870921383936000000
+123456789.0123456	15241578753238817.26870921383936
 123456789.0123456789	15241578753238836.75019051998750190521
-1234567890.1234560000	NULL
-1234567890.1234567890	NULL
+1234567890.123456	NULL
+1234567890.123456789	NULL
 PREHOOK: query: EXPLAIN SELECT avg(dec), sum(dec) FROM DECIMAL_PRECISION
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT avg(dec), sum(dec) FROM DECIMAL_PRECISION
@@ -637,7 +637,7 @@ POSTHOOK: query: SELECT MIN(cast('12345678901234567890.12345678' as decimal(38,1
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_precision
 #### A masked pattern was here ####
-12345678901234567890.123456780000000000
+12345678901234567890.12345678
 PREHOOK: query: SELECT COUNT(cast('12345678901234567890.12345678' as decimal(38,18))) FROM DECIMAL_PRECISION
 PREHOOK: type: QUERY
 PREHOOK: Input: default@decimal_precision
diff --git a/ql/src/test/results/clientpositive/vector_decimal_round_2.q.out b/ql/src/test/results/clientpositive/vector_decimal_round_2.q.out
index b7f6979..b8c5a71 100644
--- a/ql/src/test/results/clientpositive/vector_decimal_round_2.q.out
+++ b/ql/src/test/results/clientpositive/vector_decimal_round_2.q.out
@@ -23,7 +23,7 @@ POSTHOOK: query: select * from decimal_tbl_1_orc
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_tbl_1_orc
 #### A masked pattern was here ####
-55555.000000000000000000
+55555
 PREHOOK: query: EXPLAIN
 SELECT
   round(dec) as d, round(dec, 0), round(dec, 1), round(dec, 2), round(dec, 3),
@@ -94,7 +94,7 @@ FROM decimal_tbl_1_orc ORDER BY d
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_tbl_1_orc
 #### A masked pattern was here ####
-55555	55555	55555.0	55555.00	55555.000	55560	55600	56000	60000	100000	0	0	0
+55555	55555	55555	55555	55555	55560	55600	56000	60000	100000	0	0	0
 PREHOOK: query: create table decimal_tbl_2_orc (pos decimal(38,18), neg decimal(38,18)) 
 STORED AS ORC
 PREHOOK: type: CREATETABLE
@@ -121,7 +121,7 @@ POSTHOOK: query: select * from decimal_tbl_2_orc
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_tbl_2_orc
 #### A masked pattern was here ####
-125.315000000000000000	-125.315000000000000000
+125.315	-125.315
 PREHOOK: query: EXPLAIN
 SELECT
   round(pos) as p, round(pos, 0),
@@ -204,7 +204,7 @@ FROM decimal_tbl_2_orc ORDER BY p
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_tbl_2_orc
 #### A masked pattern was here ####
-125	125	125.3	125.32	125.315	125.3150	130	100	0	0	-125	-125	-125.3	-125.32	-125.315	-125.3150	-130	-100	0	0
+125	125	125.3	125.32	125.315	125.315	130	100	0	0	-125	-125	-125.3	-125.32	-125.315	-125.315	-130	-100	0	0
 PREHOOK: query: create table decimal_tbl_3_orc (dec decimal(38,18)) 
 STORED AS ORC
 PREHOOK: type: CREATETABLE
@@ -230,7 +230,7 @@ POSTHOOK: query: select * from decimal_tbl_3_orc
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_tbl_3_orc
 #### A masked pattern was here ####
-3.141592653589793000
+3.141592653589793
 PREHOOK: query: EXPLAIN
 SELECT
   round(dec, -15) as d, round(dec, -16),
@@ -357,7 +357,7 @@ FROM decimal_tbl_3_orc ORDER BY d
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_tbl_3_orc
 #### A masked pattern was here ####
-0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	3	3.1	3.14	3.142	3.1416	3.14159	3.141593	3.1415927	3.14159265	3.141592654	3.1415926536	3.14159265359	3.141592653590	3.1415926535898	3.1415926535898	3.14159265358979	3.141592653589793	3.1415926535897930
+0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	3	3.1	3.14	3.142	3.1416	3.14159	3.141593	3.1415927	3.14159265	3.141592654	3.1415926536	3.14159265359	3.14159265359	3.1415926535898	3.1415926535898	3.14159265358979	3.141592653589793	3.141592653589793
 PREHOOK: query: create table decimal_tbl_4_orc (pos decimal(38,18), neg decimal(38,18)) 
 STORED AS ORC
 PREHOOK: type: CREATETABLE
@@ -384,7 +384,7 @@ POSTHOOK: query: select * from decimal_tbl_4_orc
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_tbl_4_orc
 #### A masked pattern was here ####
-1809242.315111134400000000	-1809242.315111134400000000
+1809242.3151111344	-1809242.3151111344
 PREHOOK: query: EXPLAIN
 SELECT round(pos, 9) as p, round(neg, 9), round(1809242.3151111344BD, 9), round(-1809242.3151111344BD, 9)
 FROM decimal_tbl_4_orc ORDER BY p
diff --git a/ql/src/test/results/clientpositive/vector_decimal_trailing.q.out b/ql/src/test/results/clientpositive/vector_decimal_trailing.q.out
index 7dea1a2..ffdb1c9 100644
--- a/ql/src/test/results/clientpositive/vector_decimal_trailing.q.out
+++ b/ql/src/test/results/clientpositive/vector_decimal_trailing.q.out
@@ -73,16 +73,16 @@ POSTHOOK: query: SELECT * FROM DECIMAL_TRAILING ORDER BY id
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_trailing
 #### A masked pattern was here ####
-0	0.0000	0.00000000
-1	0.0000	0.00000000
+0	0	0
+1	0	0
 2	NULL	NULL
-3	1.0000	1.00000000
-4	10.0000	10.00000000
-5	100.0000	100.00000000
-6	1000.0000	1000.00000000
-7	10000.0000	10000.00000000
-8	100000.0000	100000.00000000
-9	NULL	1000000.00000000
+3	1	1
+4	10	10
+5	100	100
+6	1000	1000
+7	10000	10000
+8	100000	100000
+9	NULL	1000000
 10	NULL	NULL
 11	NULL	NULL
 12	NULL	NULL
@@ -91,18 +91,18 @@ POSTHOOK: Input: default@decimal_trailing
 15	NULL	NULL
 16	NULL	NULL
 17	NULL	NULL
-18	1.0000	1.00000000
-19	10.0000	10.00000000
-20	100.0000	100.00000000
-21	1000.0000	1000.00000000
-22	100000.0000	10000.00000000
-23	0.0000	0.00000000
-24	0.0000	0.00000000
-25	0.0000	0.00000000
-26	0.0000	0.00000000
-27	0.0000	0.00000000
-28	12313.2000	134134.31252500
-29	99999.9990	134134.31242553
+18	1	1
+19	10	10
+20	100	100
+21	1000	1000
+22	100000	10000
+23	0	0
+24	0	0
+25	0	0
+26	0	0
+27	0	0
+28	12313.2	134134.312525
+29	99999.999	134134.31242553
 PREHOOK: query: DROP TABLE DECIMAL_TRAILING_txt
 PREHOOK: type: DROPTABLE
 PREHOOK: Input: default@decimal_trailing_txt
diff --git a/ql/src/test/results/clientpositive/vector_decimal_udf.q.out b/ql/src/test/results/clientpositive/vector_decimal_udf.q.out
index 4cc151f..4450a5e 100644
--- a/ql/src/test/results/clientpositive/vector_decimal_udf.q.out
+++ b/ql/src/test/results/clientpositive/vector_decimal_udf.q.out
@@ -90,44 +90,44 @@ POSTHOOK: query: SELECT key + key FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
--8800.0000000000
+-8800
 NULL
-0.0000000000
-0.0000000000
-200.0000000000
-20.0000000000
-2.0000000000
-0.2000000000
-0.0200000000
-400.0000000000
-40.0000000000
-4.0000000000
-0.0000000000
-0.4000000000
-0.0400000000
-0.6000000000
-0.6600000000
-0.6660000000
--0.6000000000
--0.6600000000
--0.6660000000
-2.0000000000
-4.0000000000
-6.2800000000
--2.2400000000
--2.2400000000
--2.2440000000
-2.2400000000
-2.2440000000
-248.0000000000
-250.4000000000
--2510.9800000000
-6.2800000000
-6.2800000000
-6.2800000000
-2.0000000000
--2469135780.2469135780
-2469135780.2469135600
+0
+0
+200
+20
+2
+0.2
+0.02
+400
+40
+4
+0
+0.4
+0.04
+0.6
+0.66
+0.666
+-0.6
+-0.66
+-0.666
+2
+4
+6.28
+-2.24
+-2.24
+-2.244
+2.24
+2.244
+248
+250.4
+-2510.98
+6.28
+6.28
+6.28
+2
+-2469135780.246913578
+2469135780.24691356
 PREHOOK: query: EXPLAIN SELECT key + value FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT key + value FROM DECIMAL_UDF
@@ -170,44 +170,44 @@ POSTHOOK: query: SELECT key + value FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
-0.0000000000
+0
 NULL
-0.0000000000
-0.0000000000
-200.0000000000
-20.0000000000
-2.0000000000
-0.1000000000
-0.0100000000
-400.0000000000
-40.0000000000
-4.0000000000
-0.0000000000
-0.2000000000
-0.0200000000
-0.3000000000
-0.3300000000
-0.3330000000
--0.3000000000
--0.3300000000
--0.3330000000
-2.0000000000
-4.0000000000
-6.1400000000
--2.1200000000
--2.1200000000
--12.1220000000
-2.1200000000
-2.1220000000
-248.0000000000
-250.2000000000
--2510.4900000000
-6.1400000000
-6.1400000000
-7.1400000000
-2.0000000000
--2469135780.1234567890
-2469135780.1234567800
+0
+0
+200
+20
+2
+0.1
+0.01
+400
+40
+4
+0
+0.2
+0.02
+0.3
+0.33
+0.333
+-0.3
+-0.33
+-0.333
+2
+4
+6.14
+-2.12
+-2.12
+-12.122
+2.12
+2.122
+248
+250.2
+-2510.49
+6.14
+6.14
+7.14
+2
+-2469135780.123456789
+2469135780.12345678
 PREHOOK: query: EXPLAIN SELECT key + (value/2) FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT key + (value/2) FROM DECIMAL_UDF
@@ -410,44 +410,44 @@ POSTHOOK: query: SELECT key - key FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
-0.0000000000
+0
 NULL
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
+0
 PREHOOK: query: EXPLAIN SELECT key - value FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT key - value FROM DECIMAL_UDF
@@ -490,44 +490,44 @@ POSTHOOK: query: SELECT key - value FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
--8800.0000000000
+-8800
 NULL
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.1000000000
-0.0100000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.2000000000
-0.0200000000
-0.3000000000
-0.3300000000
-0.3330000000
--0.3000000000
--0.3300000000
--0.3330000000
-0.0000000000
-0.0000000000
-0.1400000000
--0.1200000000
--0.1200000000
-9.8780000000
-0.1200000000
-0.1220000000
-0.0000000000
-0.2000000000
--0.4900000000
-0.1400000000
-0.1400000000
--0.8600000000
-0.0000000000
--0.1234567890
-0.1234567800
+0
+0
+0
+0
+0
+0.1
+0.01
+0
+0
+0
+0
+0.2
+0.02
+0.3
+0.33
+0.333
+-0.3
+-0.33
+-0.333
+0
+0
+0.14
+-0.12
+-0.12
+9.878
+0.12
+0.122
+0
+0.2
+-0.49
+0.14
+0.14
+-0.86
+0
+-0.123456789
+0.12345678
 PREHOOK: query: EXPLAIN SELECT key - (value/2) FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT key - (value/2) FROM DECIMAL_UDF
@@ -730,42 +730,42 @@ POSTHOOK: query: SELECT key * key FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
-19360000.00000000000000000000
+19360000
 NULL
-0.00000000000000000000
-0.00000000000000000000
-10000.00000000000000000000
-100.00000000000000000000
-1.00000000000000000000
-0.01000000000000000000
-0.00010000000000000000
-40000.00000000000000000000
-400.00000000000000000000
-4.00000000000000000000
-0.00000000000000000000
-0.04000000000000000000
-0.00040000000000000000
-0.09000000000000000000
-0.10890000000000000000
-0.11088900000000000000
-0.09000000000000000000
-0.10890000000000000000
-0.11088900000000000000
-1.00000000000000000000
-4.00000000000000000000
-9.85960000000000000000
-1.25440000000000000000
-1.25440000000000000000
-1.25888400000000000000
-1.25440000000000000000
-1.25888400000000000000
-15376.00000000000000000000
-15675.04000000000000000000
-1576255.14010000000000000000
-9.85960000000000000000
-9.85960000000000000000
-9.85960000000000000000
-1.00000000000000000000
+0
+0
+10000
+100
+1
+0.01
+0.0001
+40000
+400
+4
+0
+0.04
+0.0004
+0.09
+0.1089
+0.110889
+0.09
+0.1089
+0.110889
+1
+4
+9.8596
+1.2544
+1.2544
+1.258884
+1.2544
+1.258884
+15376
+15675.04
+1576255.1401
+9.8596
+9.8596
+9.8596
+1
 NULL
 NULL
 PREHOOK: query: EXPLAIN SELECT key, value FROM DECIMAL_UDF where key * value > 0
@@ -813,29 +813,29 @@ POSTHOOK: query: SELECT key, value FROM DECIMAL_UDF where key * value > 0
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
-100.0000000000	100
-10.0000000000	10
-1.0000000000	1
-200.0000000000	200
-20.0000000000	20
-2.0000000000	2
-1.0000000000	1
-2.0000000000	2
-3.1400000000	3
--1.1200000000	-1
--1.1200000000	-1
--1.1220000000	-11
-1.1200000000	1
-1.1220000000	1
-124.0000000000	124
-125.2000000000	125
--1255.4900000000	-1255
-3.1400000000	3
-3.1400000000	3
-3.1400000000	4
-1.0000000000	1
--1234567890.1234567890	-1234567890
-1234567890.1234567800	1234567890
+100	100
+10	10
+1	1
+200	200
+20	20
+2	2
+1	1
+2	2
+3.14	3
+-1.12	-1
+-1.12	-1
+-1.122	-11
+1.12	1
+1.122	1
+124	124
+125.2	125
+-1255.49	-1255
+3.14	3
+3.14	3
+3.14	4
+1	1
+-1234567890.123456789	-1234567890
+1234567890.12345678	1234567890
 PREHOOK: query: EXPLAIN SELECT key * value FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT key * value FROM DECIMAL_UDF
@@ -878,44 +878,44 @@ POSTHOOK: query: SELECT key * value FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
--19360000.0000000000
+-19360000
 NULL
-0.0000000000
-0.0000000000
-10000.0000000000
-100.0000000000
-1.0000000000
-0.0000000000
-0.0000000000
-40000.0000000000
-400.0000000000
-4.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-0.0000000000
-1.0000000000
-4.0000000000
-9.4200000000
-1.1200000000
-1.1200000000
-12.3420000000
-1.1200000000
-1.1220000000
-15376.0000000000
-15650.0000000000
-1575639.9500000000
-9.4200000000
-9.4200000000
-12.5600000000
-1.0000000000
-1524157875171467887.5019052100
-1524157875171467876.3907942000
+0
+0
+10000
+100
+1
+0
+0
+40000
+400
+4
+0
+0
+0
+0
+0
+0
+0
+0
+0
+1
+4
+9.42
+1.12
+1.12
+12.342
+1.12
+1.122
+15376
+15650
+1575639.95
+9.42
+9.42
+12.56
+1
+1524157875171467887.50190521
+1524157875171467876.3907942
 PREHOOK: query: EXPLAIN SELECT key * (value/2) FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT key * (value/2) FROM DECIMAL_UDF
@@ -1212,40 +1212,40 @@ POSTHOOK: query: SELECT key / key FROM DECIMAL_UDF WHERE key is not null and key
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
-1.000000000000000000000000
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
+1
 PREHOOK: query: EXPLAIN SELECT key / value FROM DECIMAL_UDF WHERE value is not null and value <> 0
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT key / value FROM DECIMAL_UDF WHERE value is not null and value <> 0
@@ -1291,30 +1291,30 @@ POSTHOOK: query: SELECT key / value FROM DECIMAL_UDF WHERE value is not null and
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
--1.000000000000000000000
-1.000000000000000000000
-1.000000000000000000000
-1.000000000000000000000
-1.000000000000000000000
-1.000000000000000000000
-1.000000000000000000000
-1.000000000000000000000
-1.000000000000000000000
+-1
+1
+1
+1
+1
+1
+1
+1
+1
 1.046666666666666666667
-1.120000000000000000000
-1.120000000000000000000
-0.102000000000000000000
-1.120000000000000000000
-1.122000000000000000000
-1.000000000000000000000
-1.001600000000000000000
+1.12
+1.12
+0.102
+1.12
+1.122
+1
+1.0016
 1.000390438247011952191
 1.046666666666666666667
 1.046666666666666666667
-0.785000000000000000000
-1.000000000000000000000
-1.000000000100000000000
-1.000000000099999992710
+0.785
+1
+1.0000000001
+1.00000000009999999271
 PREHOOK: query: EXPLAIN SELECT key / (value/2) FROM DECIMAL_UDF  WHERE value is not null and value <> 0
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT key / (value/2) FROM DECIMAL_UDF  WHERE value is not null and value <> 0
@@ -1506,44 +1506,44 @@ POSTHOOK: query: SELECT abs(key) FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
-4400.0000000000
+4400
 NULL
-0.0000000000
-0.0000000000
-100.0000000000
-10.0000000000
-1.0000000000
-0.1000000000
-0.0100000000
-200.0000000000
-20.0000000000
-2.0000000000
-0.0000000000
-0.2000000000
-0.0200000000
-0.3000000000
-0.3300000000
-0.3330000000
-0.3000000000
-0.3300000000
-0.3330000000
-1.0000000000
-2.0000000000
-3.1400000000
-1.1200000000
-1.1200000000
-1.1220000000
-1.1200000000
-1.1220000000
-124.0000000000
-125.2000000000
-1255.4900000000
-3.1400000000
-3.1400000000
-3.1400000000
-1.0000000000
-1234567890.1234567890
-1234567890.1234567800
+0
+0
+100
+10
+1
+0.1
+0.01
+200
+20
+2
+0
+0.2
+0.02
+0.3
+0.33
+0.333
+0.3
+0.33
+0.333
+1
+2
+3.14
+1.12
+1.12
+1.122
+1.12
+1.122
+124
+125.2
+1255.49
+3.14
+3.14
+3.14
+1
+1234567890.123456789
+1234567890.12345678
 PREHOOK: query: EXPLAIN SELECT value, sum(key) / count(key), avg(key), sum(key) FROM DECIMAL_UDF GROUP BY value ORDER BY value
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT value, sum(key) / count(key), avg(key), sum(key) FROM DECIMAL_UDF GROUP BY value ORDER BY value
@@ -1631,23 +1631,23 @@ POSTHOOK: query: SELECT value, sum(key) / count(key), avg(key), sum(key) FROM DE
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
--1234567890	-1234567890.12345678900000000000000	-1234567890.12345678900000	-1234567890.1234567890
--1255	-1255.49000000000000000000000	-1255.49000000000000	-1255.4900000000
--11	-1.12200000000000000000000	-1.12200000000000	-1.1220000000
--1	-1.12000000000000000000000	-1.12000000000000	-2.2400000000
-0	0.02538461538461538461538	0.02538461538462	0.3300000000
-1	1.04840000000000000000000	1.04840000000000	5.2420000000
-2	2.00000000000000000000000	2.00000000000000	4.0000000000
-3	3.14000000000000000000000	3.14000000000000	9.4200000000
-4	3.14000000000000000000000	3.14000000000000	3.1400000000
-10	10.00000000000000000000000	10.00000000000000	10.0000000000
-20	20.00000000000000000000000	20.00000000000000	20.0000000000
-100	100.00000000000000000000000	100.00000000000000	100.0000000000
-124	124.00000000000000000000000	124.00000000000000	124.0000000000
-125	125.20000000000000000000000	125.20000000000000	125.2000000000
-200	200.00000000000000000000000	200.00000000000000	200.0000000000
-4400	-4400.00000000000000000000000	-4400.00000000000000	-4400.0000000000
-1234567890	1234567890.12345678000000000000000	1234567890.12345678000000	1234567890.1234567800
+-1234567890	-1234567890.123456789	-1234567890.123456789	-1234567890.123456789
+-1255	-1255.49	-1255.49	-1255.49
+-11	-1.122	-1.122	-1.122
+-1	-1.12	-1.12	-2.24
+0	0.02538461538461538461538	0.02538461538462	0.33
+1	1.0484	1.0484	5.242
+2	2	2	4
+3	3.14	3.14	9.42
+4	3.14	3.14	3.14
+10	10	10	10
+20	20	20	20
+100	100	100	100
+124	124	124	124
+125	125.2	125.2	125.2
+200	200	200	200
+4400	-4400	-4400	-4400
+1234567890	1234567890.12345678	1234567890.12345678	1234567890.12345678
 PREHOOK: query: EXPLAIN SELECT -key FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT -key FROM DECIMAL_UDF
@@ -1690,44 +1690,44 @@ POSTHOOK: query: SELECT -key FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
-4400.0000000000
+4400
 NULL
-0.0000000000
-0.0000000000
--100.0000000000
--10.0000000000
--1.0000000000
--0.1000000000
--0.0100000000
--200.0000000000
--20.0000000000
--2.0000000000
-0.0000000000
--0.2000000000
--0.0200000000
--0.3000000000
--0.3300000000
--0.3330000000
-0.3000000000
-0.3300000000
-0.3330000000
--1.0000000000
--2.0000000000
--3.1400000000
-1.1200000000
-1.1200000000
-1.1220000000
--1.1200000000
--1.1220000000
--124.0000000000
--125.2000000000
-1255.4900000000
--3.1400000000
--3.1400000000
--3.1400000000
--1.0000000000
-1234567890.1234567890
--1234567890.1234567800
+0
+0
+-100
+-10
+-1
+-0.1
+-0.01
+-200
+-20
+-2
+0
+-0.2
+-0.02
+-0.3
+-0.33
+-0.333
+0.3
+0.33
+0.333
+-1
+-2
+-3.14
+1.12
+1.12
+1.122
+-1.12
+-1.122
+-124
+-125.2
+1255.49
+-3.14
+-3.14
+-3.14
+-1
+1234567890.123456789
+-1234567890.12345678
 PREHOOK: query: EXPLAIN SELECT +key FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT +key FROM DECIMAL_UDF
@@ -1757,44 +1757,44 @@ POSTHOOK: query: SELECT +key FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
--4400.0000000000
+-4400
 NULL
-0.0000000000
-0.0000000000
-100.0000000000
-10.0000000000
-1.0000000000
-0.1000000000
-0.0100000000
-200.0000000000
-20.0000000000
-2.0000000000
-0.0000000000
-0.2000000000
-0.0200000000
-0.3000000000
-0.3300000000
-0.3330000000
--0.3000000000
--0.3300000000
--0.3330000000
-1.0000000000
-2.0000000000
-3.1400000000
--1.1200000000
--1.1200000000
--1.1220000000
-1.1200000000
-1.1220000000
-124.0000000000
-125.2000000000
--1255.4900000000
-3.1400000000
-3.1400000000
-3.1400000000
-1.0000000000
--1234567890.1234567890
-1234567890.1234567800
+0
+0
+100
+10
+1
+0.1
+0.01
+200
+20
+2
+0
+0.2
+0.02
+0.3
+0.33
+0.333
+-0.3
+-0.33
+-0.333
+1
+2
+3.14
+-1.12
+-1.12
+-1.122
+1.12
+1.122
+124
+125.2
+-1255.49
+3.14
+3.14
+3.14
+1
+-1234567890.123456789
+1234567890.12345678
 PREHOOK: query: EXPlAIN SELECT CEIL(key) FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPlAIN SELECT CEIL(key) FROM DECIMAL_UDF
@@ -1997,42 +1997,42 @@ POSTHOOK: query: SELECT ROUND(key, 2) FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
--4400.00
+-4400
 NULL
-0.00
-0.00
-100.00
-10.00
-1.00
-0.10
+0
+0
+100
+10
+1
+0.1
 0.01
-200.00
-20.00
-2.00
-0.00
-0.20
+200
+20
+2
+0
+0.2
 0.02
-0.30
+0.3
 0.33
 0.33
--0.30
+-0.3
 -0.33
 -0.33
-1.00
-2.00
+1
+2
 3.14
 -1.12
 -1.12
 -1.12
 1.12
 1.12
-124.00
-125.20
+124
+125.2
 -1255.49
 3.14
 3.14
 3.14
-1.00
+1
 -1234567890.12
 1234567890.12
 PREHOOK: query: EXPLAIN SELECT POWER(key, 2) FROM DECIMAL_UDF
@@ -2156,44 +2156,44 @@ POSTHOOK: query: SELECT (key + 1) % (key / 2) FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
--2199.000000000000
+-2199
 NULL
 NULL
 NULL
-1.000000000000
-1.000000000000
-0.000000000000
-0.000000000000
-0.000000000000
-1.000000000000
-1.000000000000
-0.000000000000
+1
+1
+0
+0
+0
+1
+1
+0
 NULL
-0.000000000000
-0.000000000000
-0.100000000000
-0.010000000000
-0.001000000000
-0.100000000000
-0.010000000000
-0.001000000000
-0.000000000000
-0.000000000000
-1.000000000000
--0.120000000000
--0.120000000000
--0.122000000000
-0.440000000000
-0.439000000000
-1.000000000000
-1.000000000000
--626.745000000000
-1.000000000000
-1.000000000000
-1.000000000000
-0.000000000000
--617283944.061728394500
-1.000000000000
+0
+0
+0.1
+0.01
+0.001
+0.1
+0.01
+0.001
+0
+0
+1
+-0.12
+-0.12
+-0.122
+0.44
+0.439
+1
+1
+-626.745
+1
+1
+1
+0
+-617283944.0617283945
+1
 PREHOOK: query: EXPLAIN SELECT value, stddev(key), variance(key) FROM DECIMAL_UDF GROUP BY value
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT value, stddev(key), variance(key) FROM DECIMAL_UDF GROUP BY value
@@ -2464,7 +2464,7 @@ POSTHOOK: query: SELECT MIN(key) FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
--1234567890.1234567890
+-1234567890.123456789
 PREHOOK: query: EXPLAIN SELECT MAX(key) FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT MAX(key) FROM DECIMAL_UDF
@@ -2522,7 +2522,7 @@ POSTHOOK: query: SELECT MAX(key) FROM DECIMAL_UDF
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_udf
 #### A masked pattern was here ####
-1234567890.1234567800
+1234567890.12345678
 PREHOOK: query: EXPLAIN SELECT COUNT(key) FROM DECIMAL_UDF
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN SELECT COUNT(key) FROM DECIMAL_UDF
diff --git a/ql/src/test/results/clientpositive/vector_reduce_groupby_decimal.q.out b/ql/src/test/results/clientpositive/vector_reduce_groupby_decimal.q.out
index a8a8ee8..b38add3 100644
--- a/ql/src/test/results/clientpositive/vector_reduce_groupby_decimal.q.out
+++ b/ql/src/test/results/clientpositive/vector_reduce_groupby_decimal.q.out
@@ -117,56 +117,56 @@ LIMIT 50
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@decimal_test
 #### A masked pattern was here ####
--1073051226	-7382.0	-4409.2486486486	-5280.96923076923100	-4409.2486486486
--1072081801	8373.0	5001.1702702703	5989.91538461538500	5001.1702702703
--1072076362	-5470.0	-3267.2162162162	-3913.15384615384660	-3267.2162162162
--1070883071	-741.0	-442.5972972973	-530.10000000000000	-442.5972972973
--1070551679	-947.0	-565.6405405405	-677.46923076923080	-565.6405405405
--1069512165	11417.0	6819.3432432432	8167.54615384615400	6819.3432432432
--1069109166	8390.0	5011.3243243243	6002.07692307692300	5011.3243243243
--1068623584	-14005.0	-8365.1486486486	-10018.96153846153900	-8365.1486486486
--1067386090	-3977.0	-2375.4513513514	-2845.08461538461600	-2375.4513513514
--1066922682	-9987.0	-5965.2081081081	-7144.54615384615400	-5965.2081081081
--1066226047	-9439.0	-5637.8891891892	-6752.51538461538500	-5637.8891891892
--1065117869	2538.0	1515.9405405405	1815.64615384615400	1515.9405405405
--1064949302	6454.0	3854.9567567568	4617.09230769230800	3854.9567567568
--1063498122	-11480.0	-6856.9729729730	-8212.61538461538700	-6856.9729729730
--1062973443	10541.0	6296.1108108108	7540.86923076923100	6296.1108108108
--1061614989	-4234.0	-2528.9567567568	-3028.93846153846200	-2528.9567567568
--1061057428	-1085.0	-648.0675675676	-776.19230769230770	-648.0675675676
--1059941909	8782.0	5245.4648648649	6282.50769230769300	5245.4648648649
--1059338191	7322.0	4373.4108108108	5238.04615384615400	4373.4108108108
--1059047258	12452.0	7437.5459459459	8907.96923076923100	7437.5459459459
--1056684111	13991.0	8356.7864864865	10008.94615384615500	8356.7864864865
--1055945837	13690.0	8177.0000000000	9793.61538461538700	8177.0000000000
--1055669248	2570.0	1535.0540540541	1838.53846153846200	1535.0540540541
--1055316250	-14990.0	-8953.4864864865	-10723.61538461538500	-8953.4864864865
--1053385587	14504.0	8663.2000000000	10375.93846153846200	8663.2000000000
--1053238077	-3704.0	-2212.3891891892	-2649.78461538461600	-2212.3891891892
--1052745800	-12404.0	-7408.8756756757	-8873.63076923077100	-7408.8756756757
--1052322972	-7433.0	-4439.7108108108	-5317.45384615384700	-4439.7108108108
--1050684541	-8261.0	-4934.2729729730	-5909.79230769230800	-4934.2729729730
--1050657303	-6999.0	-4180.4837837838	-5006.97692307692300	-4180.4837837838
--1050165799	8634.0	5157.0648648649	6176.63076923077000	5157.0648648649
+-1073051226	-7382.0	-4409.2486486486	-5280.969230769231	-4409.2486486486
+-1072081801	8373.0	5001.1702702703	5989.915384615385	5001.1702702703
+-1072076362	-5470.0	-3267.2162162162	-3913.1538461538466	-3267.2162162162
+-1070883071	-741.0	-442.5972972973	-530.1	-442.5972972973
+-1070551679	-947.0	-565.6405405405	-677.4692307692308	-565.6405405405
+-1069512165	11417.0	6819.3432432432	8167.546153846154	6819.3432432432
+-1069109166	8390.0	5011.3243243243	6002.076923076923	5011.3243243243
+-1068623584	-14005.0	-8365.1486486486	-10018.961538461539	-8365.1486486486
+-1067386090	-3977.0	-2375.4513513514	-2845.084615384616	-2375.4513513514
+-1066922682	-9987.0	-5965.2081081081	-7144.546153846154	-5965.2081081081
+-1066226047	-9439.0	-5637.8891891892	-6752.515384615385	-5637.8891891892
+-1065117869	2538.0	1515.9405405405	1815.646153846154	1515.9405405405
+-1064949302	6454.0	3854.9567567568	4617.092307692308	3854.9567567568
+-1063498122	-11480.0	-6856.972972973	-8212.615384615387	-6856.972972973
+-1062973443	10541.0	6296.1108108108	7540.869230769231	6296.1108108108
+-1061614989	-4234.0	-2528.9567567568	-3028.938461538462	-2528.9567567568
+-1061057428	-1085.0	-648.0675675676	-776.1923076923077	-648.0675675676
+-1059941909	8782.0	5245.4648648649	6282.507692307693	5245.4648648649
+-1059338191	7322.0	4373.4108108108	5238.046153846154	4373.4108108108
+-1059047258	12452.0	7437.5459459459	8907.969230769231	7437.5459459459
+-1056684111	13991.0	8356.7864864865	10008.946153846155	8356.7864864865
+-1055945837	13690.0	8177	9793.615384615387	8177
+-1055669248	2570.0	1535.0540540541	1838.538461538462	1535.0540540541
+-1055316250	-14990.0	-8953.4864864865	-10723.615384615385	-8953.4864864865
+-1053385587	14504.0	8663.2	10375.938461538462	8663.2
+-1053238077	-3704.0	-2212.3891891892	-2649.784615384616	-2212.3891891892
+-1052745800	-12404.0	-7408.8756756757	-8873.630769230771	-7408.8756756757
+-1052322972	-7433.0	-4439.7108108108	-5317.453846153847	-4439.7108108108
+-1050684541	-8261.0	-4934.272972973	-5909.792307692308	-4934.272972973
+-1050657303	-6999.0	-4180.4837837838	-5006.976923076923	-4180.4837837838
+-1050165799	8634.0	5157.0648648649	6176.63076923077	5157.0648648649
 -1048934049	-524.0	-312.9837837838	-374.86153846153854	-312.9837837838
--1046399794	4130.0	2466.8378378378	2954.53846153846140	2466.8378378378
--1045867222	-8034.0	-4798.6864864865	-5747.40000000000100	-4798.6864864865
--1045196363	-5039.0	-3009.7810810811	-3604.82307692307700	-3009.7810810811
--1045181724	-5706.0	-3408.1783783784	-4081.98461538461560	-3408.1783783784
--1045087657	-5865.0	-3503.1486486486	-4195.73076923076950	-3503.1486486486
--1044207190	5381.0	3214.0567567568	3849.48461538461560	3214.0567567568
--1044093617	-3422.0	-2043.9513513514	-2448.04615384615400	-2043.9513513514
--1043573508	16216.0	9685.7729729730	11600.67692307692400	9685.7729729730
--1043132597	12302.0	7347.9513513514	8800.66153846154000	7347.9513513514
--1043082182	9180.0	5483.1891891892	6567.23076923076950	5483.1891891892
--1042805968	5133.0	3065.9270270270	3672.06923076923070	3065.9270270270
--1042712895	9296.0	5552.4756756757	6650.21538461538500	5552.4756756757
--1042396242	9583.0	5723.9000000000	6855.53076923077000	5723.9000000000
--1041734429	-836.0	-499.3405405405	-598.06153846153850	-499.3405405405
--1041391389	-12970.0	-7746.9459459459	-9278.53846153846300	-7746.9459459459
--1041252354	756.0	451.5567567568	540.83076923076920	451.5567567568
--1039776293	13704.0	8185.3621621622	9803.63076923077100	8185.3621621622
--1039762548	-3802.0	-2270.9243243243	-2719.89230769230830	-2270.9243243243
+-1046399794	4130.0	2466.8378378378	2954.5384615384614	2466.8378378378
+-1045867222	-8034.0	-4798.6864864865	-5747.400000000001	-4798.6864864865
+-1045196363	-5039.0	-3009.7810810811	-3604.823076923077	-3009.7810810811
+-1045181724	-5706.0	-3408.1783783784	-4081.9846153846156	-3408.1783783784
+-1045087657	-5865.0	-3503.1486486486	-4195.7307692307695	-3503.1486486486
+-1044207190	5381.0	3214.0567567568	3849.4846153846156	3214.0567567568
+-1044093617	-3422.0	-2043.9513513514	-2448.046153846154	-2043.9513513514
+-1043573508	16216.0	9685.772972973	11600.676923076924	9685.772972973
+-1043132597	12302.0	7347.9513513514	8800.66153846154	7347.9513513514
+-1043082182	9180.0	5483.1891891892	6567.2307692307695	5483.1891891892
+-1042805968	5133.0	3065.927027027	3672.0692307692307	3065.927027027
+-1042712895	9296.0	5552.4756756757	6650.215384615385	5552.4756756757
+-1042396242	9583.0	5723.9	6855.53076923077	5723.9
+-1041734429	-836.0	-499.3405405405	-598.0615384615385	-499.3405405405
+-1041391389	-12970.0	-7746.9459459459	-9278.538461538463	-7746.9459459459
+-1041252354	756.0	451.5567567568	540.8307692307692	451.5567567568
+-1039776293	13704.0	8185.3621621622	9803.630769230771	8185.3621621622
+-1039762548	-3802.0	-2270.9243243243	-2719.8923076923083	-2270.9243243243
 PREHOOK: query: SELECT sum(hash(*))
   FROM (SELECT cint, cdouble, cdecimal1, cdecimal2, min(cdecimal1) as min_decimal1 FROM decimal_test
         WHERE cdecimal1 is not null and cdecimal2 is not null
diff --git a/ql/src/test/results/clientpositive/windowing_decimal.q.out b/ql/src/test/results/clientpositive/windowing_decimal.q.out
index b157a23..60563ba 100644
--- a/ql/src/test/results/clientpositive/windowing_decimal.q.out
+++ b/ql/src/test/results/clientpositive/windowing_decimal.q.out
@@ -57,32 +57,32 @@ from part_dec
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@part_dec
 #### A masked pattern was here ####
-Manufacturer#1	1173.150	1173.150	2346.300
-Manufacturer#1	1173.150	1173.150	2346.300
-Manufacturer#1	1414.420	1173.150	3760.720
-Manufacturer#1	1602.590	1173.150	5363.310
-Manufacturer#1	1632.660	1173.150	6995.970
-Manufacturer#1	1753.760	1173.150	8749.730
-Manufacturer#2	1690.680	1690.680	1690.680
-Manufacturer#2	1698.660	1690.680	3389.340
-Manufacturer#2	1701.600	1690.680	5090.940
-Manufacturer#2	1800.700	1690.680	6891.640
-Manufacturer#2	2031.980	1690.680	8923.620
-Manufacturer#3	1190.270	1190.270	1190.270
-Manufacturer#3	1337.290	1190.270	2527.560
-Manufacturer#3	1410.390	1190.270	3937.950
-Manufacturer#3	1671.680	1190.270	5609.630
-Manufacturer#3	1922.980	1190.270	7532.610
-Manufacturer#4	1206.260	1206.260	1206.260
-Manufacturer#4	1290.350	1206.260	2496.610
-Manufacturer#4	1375.420	1206.260	3872.030
-Manufacturer#4	1620.670	1206.260	5492.700
-Manufacturer#4	1844.920	1206.260	7337.620
-Manufacturer#5	1018.100	1018.100	1018.100
-Manufacturer#5	1464.480	1018.100	2482.580
-Manufacturer#5	1611.660	1018.100	4094.240
-Manufacturer#5	1788.730	1018.100	5882.970
-Manufacturer#5	1789.690	1018.100	7672.660
+Manufacturer#1	1173.15	1173.15	2346.3
+Manufacturer#1	1173.15	1173.15	2346.3
+Manufacturer#1	1414.42	1173.15	3760.72
+Manufacturer#1	1602.59	1173.15	5363.31
+Manufacturer#1	1632.66	1173.15	6995.97
+Manufacturer#1	1753.76	1173.15	8749.73
+Manufacturer#2	1690.68	1690.68	1690.68
+Manufacturer#2	1698.66	1690.68	3389.34
+Manufacturer#2	1701.6	1690.68	5090.94
+Manufacturer#2	1800.7	1690.68	6891.64
+Manufacturer#2	2031.98	1690.68	8923.62
+Manufacturer#3	1190.27	1190.27	1190.27
+Manufacturer#3	1337.29	1190.27	2527.56
+Manufacturer#3	1410.39	1190.27	3937.95
+Manufacturer#3	1671.68	1190.27	5609.63
+Manufacturer#3	1922.98	1190.27	7532.61
+Manufacturer#4	1206.26	1206.26	1206.26
+Manufacturer#4	1290.35	1206.26	2496.61
+Manufacturer#4	1375.42	1206.26	3872.03
+Manufacturer#4	1620.67	1206.26	5492.7
+Manufacturer#4	1844.92	1206.26	7337.62
+Manufacturer#5	1018.1	1018.1	1018.1
+Manufacturer#5	1464.48	1018.1	2482.58
+Manufacturer#5	1611.66	1018.1	4094.24
+Manufacturer#5	1788.73	1018.1	5882.97
+Manufacturer#5	1789.69	1018.1	7672.66
 PREHOOK: query: select p_mfgr, p_retailprice, 
 first_value(p_retailprice) over(partition by p_mfgr order by p_retailprice range between 5 preceding and current row) ,
 sum(p_retailprice) over(partition by p_mfgr order by p_retailprice range between 5 preceding and current row)
@@ -97,29 +97,29 @@ from part_dec
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@part_dec
 #### A masked pattern was here ####
-Manufacturer#1	1173.150	1173.150	2346.300
-Manufacturer#1	1173.150	1173.150	2346.300
-Manufacturer#1	1414.420	1414.420	1414.420
-Manufacturer#1	1602.590	1602.590	1602.590
-Manufacturer#1	1632.660	1632.660	1632.660
-Manufacturer#1	1753.760	1753.760	1753.760
-Manufacturer#2	1690.680	1690.680	1690.680
-Manufacturer#2	1698.660	1698.660	1698.660
-Manufacturer#2	1701.600	1698.660	3400.260
-Manufacturer#2	1800.700	1800.700	1800.700
-Manufacturer#2	2031.980	2031.980	2031.980
-Manufacturer#3	1190.270	1190.270	1190.270
-Manufacturer#3	1337.290	1337.290	1337.290
-Manufacturer#3	1410.390	1410.390	1410.390
-Manufacturer#3	1671.680	1671.680	1671.680
-Manufacturer#3	1922.980	1922.980	1922.980
-Manufacturer#4	1206.260	1206.260	1206.260
-Manufacturer#4	1290.350	1290.350	1290.350
-Manufacturer#4	1375.420	1375.420	1375.420
-Manufacturer#4	1620.670	1620.670	1620.670
-Manufacturer#4	1844.920	1844.920	1844.920
-Manufacturer#5	1018.100	1018.100	1018.100
-Manufacturer#5	1464.480	1464.480	1464.480
-Manufacturer#5	1611.660	1611.660	1611.660
-Manufacturer#5	1788.730	1788.730	1788.730
-Manufacturer#5	1789.690	1788.730	3578.420
+Manufacturer#1	1173.15	1173.15	2346.3
+Manufacturer#1	1173.15	1173.15	2346.3
+Manufacturer#1	1414.42	1414.42	1414.42
+Manufacturer#1	1602.59	1602.59	1602.59
+Manufacturer#1	1632.66	1632.66	1632.66
+Manufacturer#1	1753.76	1753.76	1753.76
+Manufacturer#2	1690.68	1690.68	1690.68
+Manufacturer#2	1698.66	1698.66	1698.66
+Manufacturer#2	1701.6	1698.66	3400.26
+Manufacturer#2	1800.7	1800.7	1800.7
+Manufacturer#2	2031.98	2031.98	2031.98
+Manufacturer#3	1190.27	1190.27	1190.27
+Manufacturer#3	1337.29	1337.29	1337.29
+Manufacturer#3	1410.39	1410.39	1410.39
+Manufacturer#3	1671.68	1671.68	1671.68
+Manufacturer#3	1922.98	1922.98	1922.98
+Manufacturer#4	1206.26	1206.26	1206.26
+Manufacturer#4	1290.35	1290.35	1290.35
+Manufacturer#4	1375.42	1375.42	1375.42
+Manufacturer#4	1620.67	1620.67	1620.67
+Manufacturer#4	1844.92	1844.92	1844.92
+Manufacturer#5	1018.1	1018.1	1018.1
+Manufacturer#5	1464.48	1464.48	1464.48
+Manufacturer#5	1611.66	1611.66	1611.66
+Manufacturer#5	1788.73	1788.73	1788.73
+Manufacturer#5	1789.69	1788.73	3578.42
diff --git a/ql/src/test/results/clientpositive/windowing_navfn.q.out b/ql/src/test/results/clientpositive/windowing_navfn.q.out
index a79fccc..ae7d95a 100644
--- a/ql/src/test/results/clientpositive/windowing_navfn.q.out
+++ b/ql/src/test/results/clientpositive/windowing_navfn.q.out
@@ -287,13 +287,13 @@ POSTHOOK: Input: default@over10k
 65536	98.42
 65536	0.93
 65536	83.48
-65536	75.70
+65536	75.7
 65536	88.04
 65536	94.09
 65536	33.45
 65536	44.41
 65536	22.15
-65536	20.50
+65536	20.5
 65536	58.86
 65536	30.91
 65536	74.47
@@ -310,9 +310,9 @@ POSTHOOK: Input: default@over10k
 65536	80.26
 65536	35.07
 65536	95.88
-65536	30.60
+65536	30.6
 65536	46.97
-65536	58.80
+65536	58.8
 65536	5.72
 65536	29.27
 65536	62.25
@@ -336,7 +336,7 @@ POSTHOOK: Input: default@over10k
 65537	35.86
 65537	47.75
 65537	1.12
-65537	52.90
+65537	52.9
 65537	53.92
 65537	43.45
 65537	7.52
@@ -350,20 +350,20 @@ POSTHOOK: Input: default@over10k
 65537	56.48
 65537	83.21
 65537	56.52
-65537	36.60
-65537	59.70
+65537	36.6
+65537	59.7
 65537	80.14
-65537	66.30
+65537	66.3
 65537	94.87
 65537	40.92
-65537	25.20
+65537	25.2
 65537	7.36
 65538	NULL
 65538	53.35
 65538	54.64
 65538	76.67
 65538	15.17
-65538	1.20
+65538	1.2
 65538	13.71
 65538	81.59
 65538	43.33
diff --git a/ql/src/test/results/clientpositive/windowing_rank.q.out b/ql/src/test/results/clientpositive/windowing_rank.q.out
index 720281f..e1566a5 100644
--- a/ql/src/test/results/clientpositive/windowing_rank.q.out
+++ b/ql/src/test/results/clientpositive/windowing_rank.q.out
@@ -504,16 +504,16 @@ where rnk =  1 limit 10
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@over10k
 #### A masked pattern was here ####
-2013-03-01 09:11:58.70307	0.50	1
-2013-03-01 09:11:58.70307	0.50	1
-2013-03-01 09:11:58.70307	0.50	1
-2013-03-01 09:11:58.70307	0.50	1
-2013-03-01 09:11:58.70307	0.50	1
-2013-03-01 09:11:58.70307	0.50	1
-2013-03-01 09:11:58.70307	0.50	1
-2013-03-01 09:11:58.70307	0.50	1
-2013-03-01 09:11:58.70307	0.50	1
-2013-03-01 09:11:58.70307	0.50	1
+2013-03-01 09:11:58.70307	0.5	1
+2013-03-01 09:11:58.70307	0.5	1
+2013-03-01 09:11:58.70307	0.5	1
+2013-03-01 09:11:58.70307	0.5	1
+2013-03-01 09:11:58.70307	0.5	1
+2013-03-01 09:11:58.70307	0.5	1
+2013-03-01 09:11:58.70307	0.5	1
+2013-03-01 09:11:58.70307	0.5	1
+2013-03-01 09:11:58.70307	0.5	1
+2013-03-01 09:11:58.70307	0.5	1
 PREHOOK: query: select ts, dec, rnk
 from
   (select ts, dec,
@@ -542,16 +542,16 @@ where dec = 89.5 limit 10
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@over10k
 #### A masked pattern was here ####
-2013-03-01 09:11:58.703124	89.50	1
-2013-03-01 09:11:58.703124	89.50	1
-2013-03-01 09:11:58.703124	89.50	1
-2013-03-01 09:11:58.703124	89.50	1
-2013-03-01 09:11:58.703124	89.50	1
-2013-03-01 09:11:58.703124	89.50	1
-2013-03-01 09:11:58.703124	89.50	1
-2013-03-01 09:11:58.703124	89.50	1
-2013-03-01 09:11:58.703124	89.50	1
-2013-03-01 09:11:58.703124	89.50	1
+2013-03-01 09:11:58.703124	89.5	1
+2013-03-01 09:11:58.703124	89.5	1
+2013-03-01 09:11:58.703124	89.5	1
+2013-03-01 09:11:58.703124	89.5	1
+2013-03-01 09:11:58.703124	89.5	1
+2013-03-01 09:11:58.703124	89.5	1
+2013-03-01 09:11:58.703124	89.5	1
+2013-03-01 09:11:58.703124	89.5	1
+2013-03-01 09:11:58.703124	89.5	1
+2013-03-01 09:11:58.703124	89.5	1
 PREHOOK: query: select ts, dec, rnk
 from
   (select ts, dec,
@@ -582,13 +582,13 @@ where rnk = 1 limit 10
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@over10k
 #### A masked pattern was here ####
-2013-03-01 09:11:58.70307	37.30	1
-2013-03-01 09:11:58.70307	37.30	1
-2013-03-01 09:11:58.70307	37.30	1
-2013-03-01 09:11:58.70307	37.30	1
-2013-03-01 09:11:58.70307	37.30	1
-2013-03-01 09:11:58.70307	37.30	1
-2013-03-01 09:11:58.70307	37.30	1
-2013-03-01 09:11:58.70307	37.30	1
-2013-03-01 09:11:58.70307	37.30	1
-2013-03-01 09:11:58.70307	37.30	1
+2013-03-01 09:11:58.70307	37.3	1
+2013-03-01 09:11:58.70307	37.3	1
+2013-03-01 09:11:58.70307	37.3	1
+2013-03-01 09:11:58.70307	37.3	1
+2013-03-01 09:11:58.70307	37.3	1
+2013-03-01 09:11:58.70307	37.3	1
+2013-03-01 09:11:58.70307	37.3	1
+2013-03-01 09:11:58.70307	37.3	1
+2013-03-01 09:11:58.70307	37.3	1
+2013-03-01 09:11:58.70307	37.3	1
diff --git a/serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyHiveDecimal.java b/serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyHiveDecimal.java
index 3f48792..fcf1ac6 100644
--- a/serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyHiveDecimal.java
+++ b/serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyHiveDecimal.java
@@ -103,12 +103,12 @@ public HiveDecimalWritable getWritableObject() {
    * @param hiveDecimal
    * @throws IOException
    */
-  public static void writeUTF8(OutputStream outputStream, HiveDecimal hiveDecimal, int scale)
+  public static void writeUTF8(OutputStream outputStream, HiveDecimal hiveDecimal)
     throws IOException {
     if (hiveDecimal == null) {
       outputStream.write(nullBytes);
     } else {
-      ByteBuffer b = Text.encode(hiveDecimal.toFormatString(scale));
+      ByteBuffer b = Text.encode(hiveDecimal.toString());
       outputStream.write(b.array(), 0, b.limit());
     }
   }
diff --git a/serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyUtils.java b/serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyUtils.java
index 7cdf8ae..eb53d3e 100644
--- a/serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyUtils.java
+++ b/serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyUtils.java
@@ -255,9 +255,8 @@ public static void writePrimitiveUTF8(OutputStream out, Object o,
       break;
     }
     case DECIMAL: {
-      HiveDecimalObjectInspector decimalOI = (HiveDecimalObjectInspector) oi;
       LazyHiveDecimal.writeUTF8(out,
-        decimalOI.getPrimitiveJavaObject(o), decimalOI.scale());
+        ((HiveDecimalObjectInspector) oi).getPrimitiveJavaObject(o));
       break;
     }
     default: {
-- 
1.7.9.5

