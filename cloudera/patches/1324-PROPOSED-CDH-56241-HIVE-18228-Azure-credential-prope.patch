From 71ef4fa61dab6af65532f4a80a6c4e1c615434cf Mon Sep 17 00:00:00 2001
From: Andrew Sherman <asherman@cloudera.com>
Date: Tue, 5 Dec 2017 17:35:31 -0800
Subject: [PATCH 1324/1363] PROPOSED CDH-56241: HIVE-18228: Azure credential
 properties should be added to the HiveConf hidden
 list Change testHiddenConfig() so that it
 iterates over a list of hidden properties.

Change-Id: I5a84f8b5812d30b9e27f2dbeebb4b9fa0f67421c
---
 .../java/org/apache/hadoop/hive/conf/HiveConf.java |    4 ++-
 .../org/apache/hadoop/hive/conf/TestHiveConf.java  |   37 +++++++++++++-------
 2 files changed, 28 insertions(+), 13 deletions(-)

diff --git a/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java b/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java
index 580e932..d70254c 100644
--- a/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java
+++ b/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java
@@ -1997,7 +1997,9 @@ public void setSparkConfigUpdated(boolean isSparkConfigUpdated) {
         + ",fs.s3n.awsSecretAccessKey"
         + ",fs.s3a.access.key"
         + ",fs.s3a.secret.key"
-        + ",fs.s3a.proxy.password",
+        + ",fs.s3a.proxy.password"
+        + ",dfs.adls.oauth2.credential"
+        + ",fs.adl.oauth2.credential",
         "Comma separated list of configuration options which should not be read by normal user like passwords"),
     HIVE_SERVER2_JOB_CREDENTIAL_PROVIDER_PATH("hive.server2.job.credential.provider.path", "",
         "If set, this configuration property should provide a comma-separated list of URLs that indicates the type and " +
diff --git a/common/src/test/org/apache/hadoop/hive/conf/TestHiveConf.java b/common/src/test/org/apache/hadoop/hive/conf/TestHiveConf.java
index 6b84c78..8ec0ddb 100644
--- a/common/src/test/org/apache/hadoop/hive/conf/TestHiveConf.java
+++ b/common/src/test/org/apache/hadoop/hive/conf/TestHiveConf.java
@@ -17,6 +17,7 @@
  */
 package org.apache.hadoop.hive.conf;
 
+import com.google.common.collect.Lists;
 import org.apache.hadoop.mapred.JobConf;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.hive.conf.HiveConf.ConfVars;
@@ -25,6 +26,7 @@
 import org.junit.Assert;
 import org.junit.Test;
 
+import java.util.ArrayList;
 import java.util.concurrent.TimeUnit;
 
 
@@ -136,11 +138,8 @@ public void testSparkConfigUpdate(){
   @Test
   public void testHiddenConfig() throws Exception {
     HiveConf conf = new HiveConf();
-    // check password configs are hidden
-    Assert.assertTrue(conf.isHiddenConfig(HiveConf.ConfVars.METASTOREPWD.varname));
-    Assert.assertTrue(conf.isHiddenConfig(
-        HiveConf.ConfVars.HIVE_SERVER2_SSL_KEYSTORE_PASSWORD.varname));
-    // check change hidden list should fail
+
+    // check that a change to the hidden list should fail
     try {
       final String name = HiveConf.ConfVars.HIVE_CONF_HIDDEN_LIST.varname;
       conf.verifyAndSet(name, "");
@@ -148,12 +147,26 @@ public void testHiddenConfig() throws Exception {
     } catch (IllegalArgumentException e) {
       // the verifyAndSet in this case is expected to fail with the IllegalArgumentException
     }
-    // check stripHiddenConfigurations
-    Configuration conf2 = new Configuration(conf);
-    conf2.set(HiveConf.ConfVars.METASTOREPWD.varname, "password");
-    conf2.set(HiveConf.ConfVars.HIVE_SERVER2_SSL_KEYSTORE_PASSWORD.varname, "password");
-    conf.stripHiddenConfigurations(conf2);
-    Assert.assertEquals("", conf2.get(HiveConf.ConfVars.METASTOREPWD.varname));
-    Assert.assertEquals("", conf2.get(HiveConf.ConfVars.HIVE_SERVER2_SSL_KEYSTORE_PASSWORD.varname));
+
+    ArrayList<String> hiddenList = Lists.newArrayList(
+        HiveConf.ConfVars.METASTOREPWD.varname,
+        HiveConf.ConfVars.HIVE_SERVER2_SSL_KEYSTORE_PASSWORD.varname,
+        "fs.s3.awsSecretAccessKey",
+        "fs.s3n.awsSecretAccessKey",
+        "dfs.adls.oauth2.credential",
+        "fs.adl.oauth2.credential"
+    );
+
+    for (String hiddenConfig : hiddenList) {
+      // check configs are hidden
+      Assert.assertTrue("config " + hiddenConfig + " should be hidden",
+          conf.isHiddenConfig(hiddenConfig));
+      // check stripHiddenConfigurations removes the property
+      Configuration conf2 = new Configuration(conf);
+      conf2.set(hiddenConfig, "password");
+      conf.stripHiddenConfigurations(conf2);
+      // Check the stripped property is the empty string
+      Assert.assertEquals("", conf2.get(hiddenConfig));
+    }
   }
 }
-- 
1.7.9.5

