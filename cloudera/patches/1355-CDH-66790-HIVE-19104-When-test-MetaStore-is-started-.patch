From d761f18dc3e682556c1f93def74186858499da59 Mon Sep 17 00:00:00 2001
From: Peter Vary <pvary@cloudera.com>
Date: Mon, 23 Apr 2018 10:10:39 +0200
Subject: [PATCH 1355/1363] CDH-66790: HIVE-19104: When test MetaStore is
 started with retry the instances should be
 independent (Peter Vary, reviewed by Sahil
 Takiar)

(cherry picked from commit 5e0480e35f6176ff38ecffea64369287b87bd378)

Change-Id: I3acf60f8be0cca87ba7476f5348906dcd7c605fc
(cherry picked from commit 4d4ddd7b1e78b78b645a0ee9f8d3ea0dad440ab2)
(cherry picked from commit 93fbaf332b5c04bbcb1643b70ebb6e3eb71f4f3d)
(cherry picked from commit a42340711f94b46d6bcaa83bcff5587c4ab2426a)
---
 .../org/apache/hive/hcatalog/cli/TestPermsGrp.java |   13 +++--
 .../mapreduce/TestHCatMultiOutputFormat.java       |   18 +++---
 .../mapreduce/TestHCatPartitionPublish.java        |   16 +++---
 .../hadoop/hive/metastore/TestHiveMetaStore.java   |    3 +-
 .../hive/metastore/TestRemoteHiveMetaStore.java    |    1 -
 .../java/org/apache/hive/jdbc/miniHS2/MiniHS2.java |    6 +-
 .../hadoop/hive/metastore/MetaStoreUtils.java      |   59 ++++++++++++++++++--
 7 files changed, 82 insertions(+), 34 deletions(-)

diff --git a/hcatalog/core/src/test/java/org/apache/hive/hcatalog/cli/TestPermsGrp.java b/hcatalog/core/src/test/java/org/apache/hive/hcatalog/cli/TestPermsGrp.java
index 96d60c8..e58da42 100644
--- a/hcatalog/core/src/test/java/org/apache/hive/hcatalog/cli/TestPermsGrp.java
+++ b/hcatalog/core/src/test/java/org/apache/hive/hcatalog/cli/TestPermsGrp.java
@@ -61,7 +61,6 @@
 public class TestPermsGrp extends TestCase {
 
   private boolean isServerRunning = false;
-  private int msPort;
   private HiveConf hcatConf;
   private Warehouse clientWH;
   private HiveMetaStoreClient msc;
@@ -79,16 +78,14 @@ protected void setUp() throws Exception {
       return;
     }
 
-
-    msPort = MetaStoreUtils.startMetaStoreWithRetry();
+    hcatConf = new HiveConf(this.getClass());
+    MetaStoreUtils.startMetaStoreWithRetry(hcatConf);
 
     isServerRunning = true;
 
     securityManager = System.getSecurityManager();
     System.setSecurityManager(new NoExitSecurityManager());
 
-    hcatConf = new HiveConf(this.getClass());
-    hcatConf.setVar(HiveConf.ConfVars.METASTOREURIS, "thrift://127.0.0.1:" + msPort);
     hcatConf.setIntVar(HiveConf.ConfVars.METASTORETHRIFTCONNECTIONRETRIES, 3);
     hcatConf.setIntVar(HiveConf.ConfVars.METASTORETHRIFTFAILURERETRIES, 3);
 
@@ -101,6 +98,12 @@ protected void setUp() throws Exception {
     msc = new HiveMetaStoreClient(hcatConf, null);
     System.setProperty(HiveConf.ConfVars.PREEXECHOOKS.varname, " ");
     System.setProperty(HiveConf.ConfVars.POSTEXECHOOKS.varname, " ");
+    System.setProperty(HiveConf.ConfVars.METASTOREWAREHOUSE.varname,
+        HiveConf.getVar(hcatConf, HiveConf.ConfVars.METASTOREWAREHOUSE));
+    System.setProperty(HiveConf.ConfVars.METASTORECONNECTURLKEY.varname,
+        HiveConf.getVar(hcatConf, HiveConf.ConfVars.METASTORECONNECTURLKEY));
+    System.setProperty(HiveConf.ConfVars.METASTOREURIS.varname,
+        HiveConf.getVar(hcatConf, HiveConf.ConfVars.METASTOREURIS));
   }
 
   public void testCustomPerms() throws Exception {
diff --git a/hcatalog/core/src/test/java/org/apache/hive/hcatalog/mapreduce/TestHCatMultiOutputFormat.java b/hcatalog/core/src/test/java/org/apache/hive/hcatalog/mapreduce/TestHCatMultiOutputFormat.java
index 7348367..360ff99 100644
--- a/hcatalog/core/src/test/java/org/apache/hive/hcatalog/mapreduce/TestHCatMultiOutputFormat.java
+++ b/hcatalog/core/src/test/java/org/apache/hive/hcatalog/mapreduce/TestHCatMultiOutputFormat.java
@@ -86,9 +86,6 @@
   private static HiveConf hiveConf;
   private static File workDir;
 
-  private static int msPort;
-  private static Thread t;
-
   static {
     schemaMap.put(tableNames[0], new HCatSchema(ColumnHolder.hCattest1Cols));
     schemaMap.put(tableNames[1], new HCatSchema(ColumnHolder.hCattest2Cols));
@@ -158,7 +155,7 @@ public static void setup() throws Exception {
     metastoreConf.setVar(HiveConf.ConfVars.METASTOREWAREHOUSE, warehousedir.toString());
 
     // Run hive metastore server
-    msPort = MetaStoreUtils.startMetaStoreWithRetry(metastoreConf);
+    MetaStoreUtils.startMetaStoreWithRetry(metastoreConf);
     // Read the warehouse dir, which can be changed so multiple MetaStore tests could be run on
     // the same server
     warehousedir = new Path(metastoreConf.getVar(HiveConf.ConfVars.METASTOREWAREHOUSE));
@@ -174,15 +171,14 @@ public static void setup() throws Exception {
       new JobConf(conf));
     mrConf = mrCluster.createJobConf();
 
-    initializeSetup();
+    initializeSetup(metastoreConf);
 
     warehousedir.getFileSystem(conf).mkdirs(warehousedir);
   }
 
-  private static void initializeSetup() throws Exception {
+  private static void initializeSetup(HiveConf metastoreConf) throws Exception {
 
-    hiveConf = new HiveConf(mrConf, TestHCatMultiOutputFormat.class);
-    hiveConf.setVar(HiveConf.ConfVars.METASTOREURIS, "thrift://localhost:" + msPort);
+    hiveConf = new HiveConf(metastoreConf, TestHCatMultiOutputFormat.class);
     hiveConf.setIntVar(HiveConf.ConfVars.METASTORETHRIFTCONNECTIONRETRIES, 3);
     hiveConf.setIntVar(HiveConf.ConfVars.METASTORETHRIFTFAILURERETRIES, 3);
     hiveConf.set(HiveConf.ConfVars.SEMANTIC_ANALYZER_HOOK.varname,
@@ -192,6 +188,12 @@ private static void initializeSetup() throws Exception {
     hiveConf.set(HiveConf.ConfVars.HIVE_SUPPORT_CONCURRENCY.varname, "false");
     System.setProperty(HiveConf.ConfVars.PREEXECHOOKS.varname, " ");
     System.setProperty(HiveConf.ConfVars.POSTEXECHOOKS.varname, " ");
+    System.setProperty(HiveConf.ConfVars.METASTOREWAREHOUSE.varname,
+        HiveConf.getVar(hiveConf, HiveConf.ConfVars.METASTOREWAREHOUSE));
+    System.setProperty(HiveConf.ConfVars.METASTORECONNECTURLKEY.varname,
+        HiveConf.getVar(hiveConf, HiveConf.ConfVars.METASTORECONNECTURLKEY));
+    System.setProperty(HiveConf.ConfVars.METASTOREURIS.varname,
+        HiveConf.getVar(hiveConf, HiveConf.ConfVars.METASTOREURIS));
 
     hiveConf.set(HiveConf.ConfVars.METASTOREWAREHOUSE.varname, warehousedir.toString());
     try {
diff --git a/hcatalog/core/src/test/java/org/apache/hive/hcatalog/mapreduce/TestHCatPartitionPublish.java b/hcatalog/core/src/test/java/org/apache/hive/hcatalog/mapreduce/TestHCatPartitionPublish.java
index 1e1e729..5e87e6a 100644
--- a/hcatalog/core/src/test/java/org/apache/hive/hcatalog/mapreduce/TestHCatPartitionPublish.java
+++ b/hcatalog/core/src/test/java/org/apache/hive/hcatalog/mapreduce/TestHCatPartitionPublish.java
@@ -45,7 +45,6 @@
 import org.apache.hadoop.hive.ql.io.RCFileOutputFormat;
 import org.apache.hadoop.hive.serde.serdeConstants;
 import org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe;
-import org.apache.hadoop.hive.shims.ShimLoader;
 import org.apache.hadoop.io.BytesWritable;
 import org.apache.hadoop.io.LongWritable;
 import org.apache.hadoop.io.Text;
@@ -71,7 +70,6 @@
   private static FileSystem fs = null;
   private static MiniMRCluster mrCluster = null;
   private static boolean isServerRunning = false;
-  private static int msPort;
   private static HiveConf hcatConf;
   private static HiveMetaStoreClient msc;
   private static SecurityManager securityManager;
@@ -104,17 +102,13 @@ public static void setup() throws Exception {
       return;
     }
 
-    msPort = MetaStoreUtils.findFreePort();
+    hcatConf = new HiveConf(TestHCatPartitionPublish.class);
+    MetaStoreUtils.startMetaStoreWithRetry(hcatConf);
 
-    msPort = MetaStoreUtils.startMetaStoreWithRetry();
-    Thread.sleep(10000);
     isServerRunning = true;
     securityManager = System.getSecurityManager();
     System.setSecurityManager(new NoExitSecurityManager());
 
-    hcatConf = new HiveConf(TestHCatPartitionPublish.class);
-    hcatConf.setVar(HiveConf.ConfVars.METASTOREURIS, "thrift://localhost:"
-        + msPort);
     hcatConf.setIntVar(HiveConf.ConfVars.METASTORETHRIFTCONNECTIONRETRIES, 3);
     hcatConf.setIntVar(HiveConf.ConfVars.METASTORETHRIFTFAILURERETRIES, 3);
     hcatConf.setTimeVar(HiveConf.ConfVars.METASTORE_CLIENT_SOCKET_TIMEOUT, 120, TimeUnit.SECONDS);
@@ -127,6 +121,12 @@ public static void setup() throws Exception {
     msc = new HiveMetaStoreClient(hcatConf, null);
     System.setProperty(HiveConf.ConfVars.PREEXECHOOKS.varname, " ");
     System.setProperty(HiveConf.ConfVars.POSTEXECHOOKS.varname, " ");
+    System.setProperty(HiveConf.ConfVars.METASTOREWAREHOUSE.varname,
+        HiveConf.getVar(hcatConf, HiveConf.ConfVars.METASTOREWAREHOUSE));
+    System.setProperty(HiveConf.ConfVars.METASTORECONNECTURLKEY.varname,
+        HiveConf.getVar(hcatConf, HiveConf.ConfVars.METASTORECONNECTURLKEY));
+    System.setProperty(HiveConf.ConfVars.METASTOREURIS.varname,
+        HiveConf.getVar(hcatConf, HiveConf.ConfVars.METASTOREURIS));
   }
 
   @AfterClass
diff --git a/itests/hive-unit/src/test/java/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java b/itests/hive-unit/src/test/java/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java
index ba59776..82a79a3 100644
--- a/itests/hive-unit/src/test/java/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java
+++ b/itests/hive-unit/src/test/java/org/apache/hadoop/hive/metastore/TestHiveMetaStore.java
@@ -92,7 +92,7 @@
 public abstract class TestHiveMetaStore extends TestCase {
   private static final Log LOG = LogFactory.getLog(TestHiveMetaStore.class);
   protected static HiveMetaStoreClient client;
-  protected static HiveConf hiveConf;
+  protected static HiveConf hiveConf = new HiveConf(TestHiveMetaStore.class);
   protected static Warehouse warehouse;
   protected static boolean isThriftClient = false;
 
@@ -105,7 +105,6 @@
 
   @Override
   protected void setUp() throws Exception {
-    hiveConf = new HiveConf(this.getClass());
     warehouse = new Warehouse(hiveConf);
 
     // set some values to use for getting conf. vars
diff --git a/itests/hive-unit/src/test/java/org/apache/hadoop/hive/metastore/TestRemoteHiveMetaStore.java b/itests/hive-unit/src/test/java/org/apache/hadoop/hive/metastore/TestRemoteHiveMetaStore.java
index 9aa8bcb..9448f63 100644
--- a/itests/hive-unit/src/test/java/org/apache/hadoop/hive/metastore/TestRemoteHiveMetaStore.java
+++ b/itests/hive-unit/src/test/java/org/apache/hadoop/hive/metastore/TestRemoteHiveMetaStore.java
@@ -37,7 +37,6 @@ protected void setUp() throws Exception {
 
     if (isServerStarted) {
       assertNotNull("Unable to connect to the MetaStore server", client);
-      hiveConf.setVar(HiveConf.ConfVars.METASTOREURIS, "thrift://localhost:" + port);
       return;
     }
 
diff --git a/itests/util/src/main/java/org/apache/hive/jdbc/miniHS2/MiniHS2.java b/itests/util/src/main/java/org/apache/hive/jdbc/miniHS2/MiniHS2.java
index 59f3508..ce84bec 100644
--- a/itests/util/src/main/java/org/apache/hive/jdbc/miniHS2/MiniHS2.java
+++ b/itests/util/src/main/java/org/apache/hive/jdbc/miniHS2/MiniHS2.java
@@ -229,9 +229,6 @@ private MiniHS2(HiveConf hiveConf, boolean useMiniMR, boolean useMiniKdc,
       hiveConf.setVar(ConfVars.HIVE_SERVER2_AUTHENTICATION, authType);
     }
 
-    String metaStoreURL = "jdbc:derby:;databaseName=" + baseDir.getAbsolutePath() + File.separator
-        + "test_metastore;create=true";
-
     if (isMetastoreSecure) {
       hiveConf.setVar(ConfVars.METASTORE_KERBEROS_PRINCIPAL, metastoreServerPrincipal);
       hiveConf.setVar(ConfVars.METASTORE_KERBEROS_KEYTAB_FILE, metastoreKeyTab);
@@ -245,8 +242,6 @@ private MiniHS2(HiveConf hiveConf, boolean useMiniMR, boolean useMiniKdc,
 
     fs.mkdirs(wareHouseDir);
     setWareHouseDir(wareHouseDir.toString());
-    System.setProperty(HiveConf.ConfVars.METASTORECONNECTURLKEY.varname, metaStoreURL);
-    hiveConf.setVar(HiveConf.ConfVars.METASTORECONNECTURLKEY, metaStoreURL);
     // reassign a new port, just in case if one of the MR services grabbed the last one
     setBinaryPort(MetaStoreUtils.findFreePort());
     hiveConf.setVar(ConfVars.HIVE_SERVER2_THRIFT_BIND_HOST, getHost());
@@ -275,6 +270,7 @@ public MiniHS2(HiveConf hiveConf, boolean useMiniMR) throws Exception {
   public void start(Map<String, String> confOverlay) throws Exception {
     if (isMetastoreRemote) {
       MetaStoreUtils.startMetaStoreWithRetry(getHiveConf());
+      setWareHouseDir(HiveConf.getVar(getHiveConf(), ConfVars.METASTOREWAREHOUSE));
     }
 
     hiveServer2 = new HiveServer2();
diff --git a/metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java b/metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java
index 54ef191..18ebea8 100644
--- a/metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java
+++ b/metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreUtils.java
@@ -46,6 +46,8 @@
 import org.apache.commons.lang.StringUtils;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
+import org.apache.hadoop.fs.permission.FsAction;
+import org.apache.hadoop.fs.permission.FsPermission;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.FileStatus;
 import org.apache.hadoop.fs.FileSystem;
@@ -89,13 +91,15 @@
 
   protected static final Log LOG = LogFactory.getLog("hive.log");
 
-  public static final int RETRY_COUNT = 10;
   public static final String DEFAULT_DATABASE_NAME = "default";
   public static final String DEFAULT_DATABASE_COMMENT = "Default Hive database";
   public static final String DEFAULT_SERIALIZATION_FORMAT = "1";
 
   public static final String DATABASE_WAREHOUSE_SUFFIX = ".db";
 
+  private static final String TMP_DIR = System.getProperty("test.tmp.dir");
+  public static final int RETRY_COUNT = 10;
+  
   public static Table createColumnsetSchema(String name, List<String> columns,
       List<String> partCols, Configuration conf) throws MetaException {
 
@@ -1143,12 +1147,34 @@ public static int startMetaStoreWithRetry(HiveConf conf) throws Exception {
     return startMetaStoreWithRetry(ShimLoader.getHadoopThriftAuthBridge(), conf);
   }
 
+  public static int startMetaStoreWithRetry(HiveConf conf, boolean keepJdbcUri)
+      throws Exception {
+    return startMetaStoreWithRetry(ShimLoader.getHadoopThriftAuthBridge(), conf,
+        keepJdbcUri);
+  }
+
   public static int startMetaStoreWithRetry() throws Exception {
     return startMetaStoreWithRetry(ShimLoader.getHadoopThriftAuthBridge(), new HiveConf());
   }
 
-  public static int startMetaStoreWithRetry(final HadoopThriftAuthBridge bridge, HiveConf conf)
-      throws Exception {
+  public static int startMetaStoreWithRetry(HadoopThriftAuthBridge bridge,
+                                            HiveConf conf) throws Exception {
+    return startMetaStoreWithRetry(bridge, conf, false);
+  }
+
+  /**
+   * Starts a MetaStore instance with the given configuration and given bridge.
+   * Tries to find a free port, and use it. If failed tries another port so the tests will not
+   * fail if run parallel. Also adds the port to the warehouse dir, so the multiple MetaStore
+   * instances will use different warehouse directories.
+   * @param bridge The Thrift bridge to uses
+   * @param conf The configuration to use
+   * @param keepJdbcUri If set to true, then the JDBC url is not changed
+   * @return The port on which the MetaStore finally started
+   * @throws Exception
+   */
+  public static int startMetaStoreWithRetry(final HadoopThriftAuthBridge bridge, HiveConf conf,
+      boolean keepJdbcUri) throws Exception {
     Exception metaStoreException = null;
     int metaStorePort = 0;
     String warehouseDir = HiveConf.getVar(conf, HiveConf.ConfVars.METASTOREWAREHOUSE);
@@ -1156,13 +1182,36 @@ public static int startMetaStoreWithRetry(final HadoopThriftAuthBridge bridge, H
     for (int tryCount = 0; tryCount < MetaStoreUtils.RETRY_COUNT; tryCount++) {
       try {
         metaStorePort = findFreePort();
+        // Setting metastore instance specific warehouse directory, postfixing with port
         Path postfixedWarehouseDir = new Path(warehouseDir, String.valueOf(metaStorePort));
         HiveConf.setVar(conf, HiveConf.ConfVars.METASTOREWAREHOUSE,
             postfixedWarehouseDir.toString());
+
+        String jdbcUrl = HiveConf.getVar(conf, HiveConf.ConfVars.METASTORECONNECTURLKEY);
+        if (!keepJdbcUri) {
+          // Setting metastore instance specific jdbc url postfixed with port
+          jdbcUrl = "jdbc:derby:;databaseName=" + TMP_DIR + File.separator
+              + "junit_metastore_db_" + metaStorePort + ";create=true";
+          HiveConf.setVar(conf, HiveConf.ConfVars.METASTORECONNECTURLKEY, jdbcUrl);
+        }
+
+        // Setting metastore instance specific metastore uri
         HiveConf.setVar(conf, HiveConf.ConfVars.METASTOREURIS, "thrift://localhost:" + metaStorePort);
         startMetaStore(metaStorePort, bridge, conf);
-        LOG.error("MetaStore Thrift Server started on port: " + metaStorePort
-            + " with warehouse dir: " + postfixedWarehouseDir);
+
+        // Creating warehouse dir, if not exists
+        Warehouse wh = new Warehouse(conf);
+        if (!wh.isDir(wh.getWhRoot())) {
+          FileSystem fs = wh.getWhRoot().getFileSystem(conf);
+          fs.mkdirs(wh.getWhRoot());
+          fs.setPermission(wh.getWhRoot(),
+              new FsPermission(FsAction.ALL, FsAction.ALL, FsAction.ALL));
+          LOG.info("MetaStore warehouse root dir (" + postfixedWarehouseDir + ") is created");
+        }
+
+        LOG.info("MetaStore Thrift Server started on port: {" + metaStorePort
+             + "} with warehouse dir: {" + postfixedWarehouseDir + "} with jdbcUrl: {"
+             + jdbcUrl+ "}");
         return metaStorePort;
       } catch (Exception ce) {
         metaStoreException = ce;
-- 
1.7.9.5

