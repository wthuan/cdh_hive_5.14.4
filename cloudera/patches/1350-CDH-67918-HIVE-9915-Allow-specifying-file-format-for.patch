From 621f205df19df9d4a06b24c5248d6d83d2b4c39e Mon Sep 17 00:00:00 2001
From: Gunther Hagleitner <gunther@apache.org>
Date: Fri, 13 Mar 2015 17:39:05 +0000
Subject: [PATCH 1350/1363] CDH-67918:HIVE-9915: Allow specifying file format
 for managed tables (Gunther Hagleitner, reviewed
 by Gopal V)

Change-Id: Icbd4ef8ac554f1e7801d51bb33fa14fb6aca40e6
git-svn-id: https://svn.apache.org/repos/asf/hive/trunk@1666524 13f79535-47bb-0310-9956-ffa450edef68
(cherry picked from commit 13eeca7b32deb96af9451b968e5983ba79f1bf36)
---
 .../java/org/apache/hadoop/hive/conf/HiveConf.java |    5 +
 .../hadoop/hive/ql/parse/DDLSemanticAnalyzer.java  |    2 +-
 .../hadoop/hive/ql/parse/SemanticAnalyzer.java     |    4 +-
 .../apache/hadoop/hive/ql/parse/StorageFormat.java |    8 +-
 .../queries/clientpositive/default_file_format.q   |   28 +++
 .../clientpositive/default_file_format.q.out       |  235 ++++++++++++++++++++
 6 files changed, 278 insertions(+), 4 deletions(-)
 create mode 100644 ql/src/test/queries/clientpositive/default_file_format.q
 create mode 100644 ql/src/test/results/clientpositive/default_file_format.q.out

diff --git a/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java b/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java
index 8783559..cb927c3 100644
--- a/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java
+++ b/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java
@@ -808,6 +808,11 @@ public void setSparkConfigUpdated(boolean isSparkConfigUpdated) {
 
     HIVEDEFAULTFILEFORMAT("hive.default.fileformat", "TextFile", new StringSet("TextFile", "SequenceFile", "RCfile", "ORC"),
         "Default file format for CREATE TABLE statement. Users can explicitly override it by CREATE TABLE ... STORED AS [FORMAT]"),
+    HIVEDEFAULTMANAGEDFILEFORMAT("hive.default.fileformat.managed", "none",
+	new StringSet("none", "TextFile", "SequenceFile", "RCfile", "ORC"),
+	"Default file format for CREATE TABLE statement applied to managed tables only. External tables will be \n" +
+	"created with format specified by hive.default.fileformat. Leaving this null will result in using hive.default.fileformat \n" +
+	"for all tables."),
     HIVEQUERYRESULTFILEFORMAT("hive.query.result.fileformat", "TextFile", new StringSet("TextFile", "SequenceFile", "RCfile"),
         "Default file format for storing result of the query."),
     HIVECHECKFILEFORMAT("hive.fileformat.check", true, "Whether to check file format or not when loading data files"),
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java b/ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java
index bc4ec01..c61f853 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java
@@ -1100,7 +1100,7 @@ private void analyzeCreateIndex(ASTNode ast) throws SemanticException {
       }
     }
 
-    storageFormat.fillDefaultStorageFormat();
+    storageFormat.fillDefaultStorageFormat(false);
     if (indexTableName == null) {
       indexTableName = MetaStoreUtils.getIndexTableName(qTabName[0], qTabName[1], indexName);
       indexTableName = qTabName[0] + "." + indexTableName; // on same database with base table
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java b/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java
index abd7e60..4272f5c 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java
@@ -11010,7 +11010,7 @@ ASTNode analyzeCreateTable(
       }
     }
 
-    storageFormat.fillDefaultStorageFormat();
+    storageFormat.fillDefaultStorageFormat(isExt);
 
     if ((command_type == CTAS) && (storageFormat.getStorageHandler() != null)) {
       throw new SemanticException(ErrorMsg.CREATE_NON_NATIVE_AS.getMsg());
@@ -11195,7 +11195,7 @@ private ASTNode analyzeCreateView(ASTNode ast, QB qb)
     }
 
     StorageFormat defaultFmt = new StorageFormat(conf);
-    defaultFmt.fillDefaultStorageFormat();
+    defaultFmt.fillDefaultStorageFormat(false);
     createVwDesc = new CreateViewDesc(
       dbDotTable, cols, comment, defaultFmt.getInputFormat(),
       defaultFmt.getOutputFormat(), tblProps, partColNames,
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/parse/StorageFormat.java b/ql/src/java/org/apache/hadoop/hive/ql/parse/StorageFormat.java
index 7723430..48aca4d 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/parse/StorageFormat.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/parse/StorageFormat.java
@@ -104,9 +104,15 @@ protected void processStorageFormat(String name) throws SemanticException {
     }
   }
 
-  protected void fillDefaultStorageFormat() throws SemanticException {
+  protected void fillDefaultStorageFormat(boolean isExternal) throws SemanticException {
     if ((inputFormat == null) && (storageHandler == null)) {
       String defaultFormat = HiveConf.getVar(conf, HiveConf.ConfVars.HIVEDEFAULTFILEFORMAT);
+      String defaultManagedFormat = HiveConf.getVar(conf, HiveConf.ConfVars.HIVEDEFAULTMANAGEDFILEFORMAT);
+
+      if (!isExternal && !"none".equals(defaultManagedFormat)) {
+	defaultFormat = defaultManagedFormat;
+      }
+
       if (StringUtils.isBlank(defaultFormat)) {
         inputFormat = IOConstants.TEXTFILE_INPUT;
         outputFormat = IOConstants.TEXTFILE_OUTPUT;
diff --git a/ql/src/test/queries/clientpositive/default_file_format.q b/ql/src/test/queries/clientpositive/default_file_format.q
new file mode 100644
index 0000000..577fa36
--- /dev/null
+++ b/ql/src/test/queries/clientpositive/default_file_format.q
@@ -0,0 +1,28 @@
+create table t (c int);
+
+set hive.default.fileformat.managed=orc;
+
+create table o (c int);
+
+create external table e (c int) location 'pfile://${system:test.tmp.dir}/foo';
+
+create table i (c int) location 'pfile://${system:test.tmp.dir}/bar';
+
+set hive.default.fileformat=orc;
+
+create table io (c int);
+
+describe formatted t;
+describe formatted o;
+describe formatted io;
+describe formatted e;
+describe formatted i;
+
+drop table t;
+drop table o;
+drop table io;
+drop table e;
+drop table i;
+
+set hive.default.fileformat=TextFile;
+set hive.default.fileformat.managed=none;
diff --git a/ql/src/test/results/clientpositive/default_file_format.q.out b/ql/src/test/results/clientpositive/default_file_format.q.out
new file mode 100644
index 0000000..1ffba08
--- /dev/null
+++ b/ql/src/test/results/clientpositive/default_file_format.q.out
@@ -0,0 +1,235 @@
+PREHOOK: query: create table t (c int)
+PREHOOK: type: CREATETABLE
+PREHOOK: Output: database:default
+PREHOOK: Output: default@t
+POSTHOOK: query: create table t (c int)
+POSTHOOK: type: CREATETABLE
+POSTHOOK: Output: database:default
+POSTHOOK: Output: default@t
+PREHOOK: query: create table o (c int)
+PREHOOK: type: CREATETABLE
+PREHOOK: Output: database:default
+PREHOOK: Output: default@o
+POSTHOOK: query: create table o (c int)
+POSTHOOK: type: CREATETABLE
+POSTHOOK: Output: database:default
+POSTHOOK: Output: default@o
+#### A masked pattern was here ####
+PREHOOK: type: CREATETABLE
+#### A masked pattern was here ####
+PREHOOK: Output: database:default
+PREHOOK: Output: default@e
+#### A masked pattern was here ####
+POSTHOOK: type: CREATETABLE
+#### A masked pattern was here ####
+POSTHOOK: Output: database:default
+POSTHOOK: Output: default@e
+#### A masked pattern was here ####
+PREHOOK: type: CREATETABLE
+#### A masked pattern was here ####
+PREHOOK: Output: database:default
+PREHOOK: Output: default@i
+#### A masked pattern was here ####
+POSTHOOK: type: CREATETABLE
+#### A masked pattern was here ####
+POSTHOOK: Output: database:default
+POSTHOOK: Output: default@i
+PREHOOK: query: create table io (c int)
+PREHOOK: type: CREATETABLE
+PREHOOK: Output: database:default
+PREHOOK: Output: default@io
+POSTHOOK: query: create table io (c int)
+POSTHOOK: type: CREATETABLE
+POSTHOOK: Output: database:default
+POSTHOOK: Output: default@io
+PREHOOK: query: describe formatted t
+PREHOOK: type: DESCTABLE
+PREHOOK: Input: default@t
+POSTHOOK: query: describe formatted t
+POSTHOOK: type: DESCTABLE
+POSTHOOK: Input: default@t
+# col_name            	data_type           	comment             
+	 	 
+c                   	int                 	                    
+	 	 
+# Detailed Table Information	 	 
+Database:           	default             	 
+#### A masked pattern was here ####
+Protect Mode:       	None                	 
+Retention:          	0                   	 
+#### A masked pattern was here ####
+Table Type:         	MANAGED_TABLE       	 
+Table Parameters:	 	 
+#### A masked pattern was here ####
+	 	 
+# Storage Information	 	 
+SerDe Library:      	org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe	 
+InputFormat:        	org.apache.hadoop.mapred.TextInputFormat	 
+OutputFormat:       	org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat	 
+Compressed:         	No                  	 
+Num Buckets:        	-1                  	 
+Bucket Columns:     	[]                  	 
+Sort Columns:       	[]                  	 
+Storage Desc Params:	 	 
+	serialization.format	1                   
+PREHOOK: query: describe formatted o
+PREHOOK: type: DESCTABLE
+PREHOOK: Input: default@o
+POSTHOOK: query: describe formatted o
+POSTHOOK: type: DESCTABLE
+POSTHOOK: Input: default@o
+# col_name            	data_type           	comment             
+	 	 
+c                   	int                 	                    
+	 	 
+# Detailed Table Information	 	 
+Database:           	default             	 
+#### A masked pattern was here ####
+Protect Mode:       	None                	 
+Retention:          	0                   	 
+#### A masked pattern was here ####
+Table Type:         	MANAGED_TABLE       	 
+Table Parameters:	 	 
+#### A masked pattern was here ####
+	 	 
+# Storage Information	 	 
+SerDe Library:      	org.apache.hadoop.hive.ql.io.orc.OrcSerde	 
+InputFormat:        	org.apache.hadoop.hive.ql.io.orc.OrcInputFormat	 
+OutputFormat:       	org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat	 
+Compressed:         	No                  	 
+Num Buckets:        	-1                  	 
+Bucket Columns:     	[]                  	 
+Sort Columns:       	[]                  	 
+Storage Desc Params:	 	 
+	serialization.format	1                   
+PREHOOK: query: describe formatted io
+PREHOOK: type: DESCTABLE
+PREHOOK: Input: default@io
+POSTHOOK: query: describe formatted io
+POSTHOOK: type: DESCTABLE
+POSTHOOK: Input: default@io
+# col_name            	data_type           	comment             
+	 	 
+c                   	int                 	                    
+	 	 
+# Detailed Table Information	 	 
+Database:           	default             	 
+#### A masked pattern was here ####
+Protect Mode:       	None                	 
+Retention:          	0                   	 
+#### A masked pattern was here ####
+Table Type:         	MANAGED_TABLE       	 
+Table Parameters:	 	 
+#### A masked pattern was here ####
+	 	 
+# Storage Information	 	 
+SerDe Library:      	org.apache.hadoop.hive.ql.io.orc.OrcSerde	 
+InputFormat:        	org.apache.hadoop.hive.ql.io.orc.OrcInputFormat	 
+OutputFormat:       	org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat	 
+Compressed:         	No                  	 
+Num Buckets:        	-1                  	 
+Bucket Columns:     	[]                  	 
+Sort Columns:       	[]                  	 
+Storage Desc Params:	 	 
+	serialization.format	1                   
+PREHOOK: query: describe formatted e
+PREHOOK: type: DESCTABLE
+PREHOOK: Input: default@e
+POSTHOOK: query: describe formatted e
+POSTHOOK: type: DESCTABLE
+POSTHOOK: Input: default@e
+# col_name            	data_type           	comment             
+	 	 
+c                   	int                 	                    
+	 	 
+# Detailed Table Information	 	 
+Database:           	default             	 
+#### A masked pattern was here ####
+Protect Mode:       	None                	 
+Retention:          	0                   	 
+#### A masked pattern was here ####
+Table Type:         	EXTERNAL_TABLE      	 
+Table Parameters:	 	 
+	EXTERNAL            	TRUE                
+#### A masked pattern was here ####
+	 	 
+# Storage Information	 	 
+SerDe Library:      	org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe	 
+InputFormat:        	org.apache.hadoop.mapred.TextInputFormat	 
+OutputFormat:       	org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat	 
+Compressed:         	No                  	 
+Num Buckets:        	-1                  	 
+Bucket Columns:     	[]                  	 
+Sort Columns:       	[]                  	 
+Storage Desc Params:	 	 
+	serialization.format	1                   
+PREHOOK: query: describe formatted i
+PREHOOK: type: DESCTABLE
+PREHOOK: Input: default@i
+POSTHOOK: query: describe formatted i
+POSTHOOK: type: DESCTABLE
+POSTHOOK: Input: default@i
+# col_name            	data_type           	comment             
+	 	 
+c                   	int                 	                    
+	 	 
+# Detailed Table Information	 	 
+Database:           	default             	 
+#### A masked pattern was here ####
+Protect Mode:       	None                	 
+Retention:          	0                   	 
+#### A masked pattern was here ####
+Table Type:         	MANAGED_TABLE       	 
+Table Parameters:	 	 
+#### A masked pattern was here ####
+	 	 
+# Storage Information	 	 
+SerDe Library:      	org.apache.hadoop.hive.ql.io.orc.OrcSerde	 
+InputFormat:        	org.apache.hadoop.hive.ql.io.orc.OrcInputFormat	 
+OutputFormat:       	org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat	 
+Compressed:         	No                  	 
+Num Buckets:        	-1                  	 
+Bucket Columns:     	[]                  	 
+Sort Columns:       	[]                  	 
+Storage Desc Params:	 	 
+	serialization.format	1                   
+PREHOOK: query: drop table t
+PREHOOK: type: DROPTABLE
+PREHOOK: Input: default@t
+PREHOOK: Output: default@t
+POSTHOOK: query: drop table t
+POSTHOOK: type: DROPTABLE
+POSTHOOK: Input: default@t
+POSTHOOK: Output: default@t
+PREHOOK: query: drop table o
+PREHOOK: type: DROPTABLE
+PREHOOK: Input: default@o
+PREHOOK: Output: default@o
+POSTHOOK: query: drop table o
+POSTHOOK: type: DROPTABLE
+POSTHOOK: Input: default@o
+POSTHOOK: Output: default@o
+PREHOOK: query: drop table io
+PREHOOK: type: DROPTABLE
+PREHOOK: Input: default@io
+PREHOOK: Output: default@io
+POSTHOOK: query: drop table io
+POSTHOOK: type: DROPTABLE
+POSTHOOK: Input: default@io
+POSTHOOK: Output: default@io
+PREHOOK: query: drop table e
+PREHOOK: type: DROPTABLE
+PREHOOK: Input: default@e
+PREHOOK: Output: default@e
+POSTHOOK: query: drop table e
+POSTHOOK: type: DROPTABLE
+POSTHOOK: Input: default@e
+POSTHOOK: Output: default@e
+PREHOOK: query: drop table i
+PREHOOK: type: DROPTABLE
+PREHOOK: Input: default@i
+PREHOOK: Output: default@i
+POSTHOOK: query: drop table i
+POSTHOOK: type: DROPTABLE
+POSTHOOK: Input: default@i
+POSTHOOK: Output: default@i
-- 
1.7.9.5

